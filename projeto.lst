

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Feb 02 05:04:04 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 1.45
    42                           ; Generated 16/11/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  0105                     	;# 
   373  0107                     	;# 
   374  0108                     	;# 
   375  0109                     	;# 
   376  010C                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  0185                     	;# 
   382  0187                     	;# 
   383  0188                     	;# 
   384  0189                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387                           
   388                           	psect	idataBANK1
   389  0F86                     __pidataBANK1:	
   390                           
   391                           ;initializer for rotacionarParaEsquerda@F1713
   392  0F86  340C               	retlw	12
   393  0F87  3406               	retlw	6
   394  0F88  3403               	retlw	3
   395  0F89  3409               	retlw	9
   396                           
   397                           ;initializer for rotacionarParaDireita@F1704
   398  0F8A  340C               	retlw	12
   399  0F8B  3406               	retlw	6
   400  0F8C  3403               	retlw	3
   401  0F8D  3409               	retlw	9
   402                           
   403                           ;initializer for _input
   404  0F8E  3420               	retlw	32
   405  0F8F  3400               	retlw	0
   406                           
   407                           	psect	strings
   408  0004                     __pstrings:	
   409  0004                     stringtab:	
   410  0004                     __stringtab:	
   411                           
   412                           ;	String table - string pointers are 1 byte each
   413  0004  1BFF               	btfsc	btemp+1,7
   414  0005  280E               	ljmp	stringcode
   415  0006  1383               	bcf	3,7
   416  0007  187F               	btfsc	btemp+1,0
   417  0008  1783               	bsf	3,7
   418  0009  0800               	movf	0,w
   419  000A  0A84               	incf	4,f
   420  000B  1903               	skipnz
   421  000C  0AFF               	incf	btemp+1,f
   422  000D  0008               	return
   423  000E                     stringcode:	
   424  000E                     stringdir:	
   425  000E  3000               	movlw	high stringdir
   426  000F  008A               	movwf	10
   427  0010  0804               	movf	4,w
   428  0011  0A84               	incf	4,f
   429  0012  0782               	addwf	2,f
   430  0013                     __stringbase:	
   431  0013  3400               	retlw	0
   432  0014                     __end_of__stringtab:	
   433  0014                     _dpowers:	
   434  0014  3401               	retlw	1
   435  0015  3400               	retlw	0
   436  0016  340A               	retlw	10
   437  0017  3400               	retlw	0
   438  0018  3464               	retlw	100
   439  0019  3400               	retlw	0
   440  001A  34E8               	retlw	232
   441  001B  3403               	retlw	3
   442  001C  3410               	retlw	16
   443  001D  3427               	retlw	39
   444  001E                     __end_of_dpowers:	
   445  0006                     _PORTBbits	set	6
   446  001A                     _RCREG	set	26
   447  0019                     _TXREG	set	25
   448  0018                     _RCSTA	set	24
   449  0008                     _PORTD	set	8
   450  0006                     _PORTB	set	6
   451  0064                     _TXIF	set	100
   452  0065                     _RCIF	set	101
   453  0099                     _SPBRG	set	153
   454  0098                     _TXSTAbits	set	152
   455  0088                     _TRISD	set	136
   456  0086                     _TRISB	set	134
   457  0087                     _TRISCbits	set	135
   458  0187                     _BAUDCTLbits	set	391
   459  0189                     _ANSELH	set	393
   460  001E                     STR_1:	
   461  001E  3450               	retlw	80	;'P'
   462  001F  3441               	retlw	65	;'A'
   463  0020  343A               	retlw	58	;':'
   464  0021  3420               	retlw	32	;' '
   465  0022  345F               	retlw	95	;'_'
   466  0023  345F               	retlw	95	;'_'
   467  0024  345F               	retlw	95	;'_'
   468  0025  3420               	retlw	32	;' '
   469  0026  3420               	retlw	32	;' '
   470  0027  3450               	retlw	80	;'P'
   471  0028  3444               	retlw	68	;'D'
   472  0029  343A               	retlw	58	;':'
   473  002A  3420               	retlw	32	;' '
   474  002B  345F               	retlw	95	;'_'
   475  002C  345F               	retlw	95	;'_'
   476  002D  345F               	retlw	95	;'_'
   477  002E  3400               	retlw	0
   478  002F                     STR_2:	
   479  002F  3456               	retlw	86	;'V'
   480  0030  3465               	retlw	101	;'e'
   481  0031  346C               	retlw	108	;'l'
   482  0032  343A               	retlw	58	;':'
   483  0033  3420               	retlw	32	;' '
   484  0034  345F               	retlw	95	;'_'
   485  0035  345F               	retlw	95	;'_'
   486  0036  345F               	retlw	95	;'_'
   487  0037  3420               	retlw	32	;' '
   488  0038  3452               	retlw	82	;'R'
   489  0039  3450               	retlw	80	;'P'
   490  003A  344D               	retlw	77	;'M'
   491  003B  3400               	retlw	0
   492  003C                     STR_5:	
   493  003C  3432               	retlw	50	;'2'
   494  003D  3430               	retlw	48	;'0'
   495  003E  3430               	retlw	48	;'0'
   496  003F  3400               	retlw	0
   497  0040                     STR_3:	
   498  0040  3425               	retlw	37	;'%'
   499  0041  3464               	retlw	100	;'d'
   500  0042  3400               	retlw	0
   501  0040                     
   502                           ; #config settings
   503  0000                     
   504                           	psect	cinit
   505  07E3                     start_initialization:	
   506  07E3                     __initialization:	
   507                           
   508                           ; Initialize objects allocated to BANK1
   509  07E3  1383               	bcf	3,7	;select IRP bank0
   510  07E4  30AA               	movlw	low (__pdataBANK1+10)
   511  07E5  00FD               	movwf	btemp+-1
   512  07E6  300F               	movlw	high __pidataBANK1
   513  07E7  00FE               	movwf	btemp
   514  07E8  3086               	movlw	low __pidataBANK1
   515  07E9  00FF               	movwf	btemp+1
   516  07EA  30A0               	movlw	low __pdataBANK1
   517  07EB  0084               	movwf	4
   518  07EC  120A  158A  27A3   	fcall	init_ram0
   519                           
   520                           ; Clear objects allocated to BANK1
   521  07EF  1683               	bsf	3,5	;RP0=1, select bank1
   522  07F0  1303               	bcf	3,6	;RP1=0, select bank1
   523  07F1  01AA               	clrf	__pbssBANK1& (0+127)
   524  07F2  01AB               	clrf	(__pbssBANK1+1)& (0+127)
   525  07F3  01AC               	clrf	(__pbssBANK1+2)& (0+127)
   526  07F4  01AD               	clrf	(__pbssBANK1+3)& (0+127)
   527  07F5  01AE               	clrf	(__pbssBANK1+4)& (0+127)
   528  07F6  01AF               	clrf	(__pbssBANK1+5)& (0+127)
   529  07F7  01B0               	clrf	(__pbssBANK1+6)& (0+127)
   530  07F8  01B1               	clrf	(__pbssBANK1+7)& (0+127)
   531                           
   532                           ; Clear objects allocated to BANK0
   533  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   534  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   535  07FB  01EF               	clrf	__pbssBANK0& (0+127)
   536  07FC                     end_of_initialization:	
   537                           ;End of C runtime variable initialization code
   538                           
   539  07FC                     __end_of__initialization:	
   540  07FC  0183               	clrf	3
   541  07FD  120A  118A  2E7C   	ljmp	_main	;jump to C main() function
   542                           
   543                           	psect	bssBANK0
   544  006F                     __pbssBANK0:	
   545  006F                     _ch:	
   546  006F                     	ds	1
   547                           
   548                           	psect	bssBANK1
   549  00AA                     __pbssBANK1:	
   550  00AA                     _posicaoDesejada:	
   551  00AA                     	ds	2
   552  00AC                     _delayTime:	
   553  00AC                     	ds	2
   554  00AE                     _velocidade:	
   555  00AE                     	ds	2
   556  00B0                     _posicaoAtual:	
   557  00B0                     	ds	2
   558                           
   559                           	psect	dataBANK1
   560  00A0                     __pdataBANK1:	
   561  00A0                     rotacionarParaEsquerda@F1713:	
   562  00A0                     	ds	4
   563  00A4                     rotacionarParaDireita@F1704:	
   564  00A4                     	ds	4
   565  00A8                     _input:	
   566  00A8                     	ds	2
   567                           
   568                           	psect	inittext
   569  0F9F                     init_fetch0:	
   570                           ;	Called with low address in FSR and high address in W
   571                           
   572  0F9F  087E               	movf	126,w
   573  0FA0  008A               	movwf	10
   574  0FA1  087F               	movf	127,w
   575  0FA2  0082               	movwf	2
   576  0FA3                     init_ram0:	
   577                           ;Called with:
   578                           ;	high address of idata address in btemp 
   579                           ;	low address of idata address in btemp+1 
   580                           ;	low address of data in FSR
   581                           ;	high address + 1 of data in btemp-1
   582                           
   583  0FA3  279F  120A  158A   	fcall	init_fetch0
   584  0FA6  0080               	movwf	0
   585  0FA7  0A84               	incf	4,f
   586  0FA8  0804               	movf	4,w
   587  0FA9  067D               	xorwf	125,w
   588  0FAA  1903               	btfsc	3,2
   589  0FAB  3400               	retlw	0
   590  0FAC  0AFF               	incf	127,f
   591  0FAD  1903               	btfsc	3,2
   592  0FAE  0AFE               	incf	126,f
   593  0FAF  2FA3               	goto	init_ram0
   594                           
   595                           	psect	cstackCOMMON
   596  0071                     __pcstackCOMMON:	
   597  0071                     ?_setupDisplay:	
   598  0071                     ?_setupStepper:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0071                     ??_setupStepper:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0071                     ?_clearDisplay:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0071                     ?_getChar:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0071                     ??_getChar:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0071                     ?_setPosicaoDesejada:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0071                     ?_rotacionarParaDireita:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0071                     ?_sendCharToLCD:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0071                     ??_sendCharToLCD:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0071                     ?_sendCommand:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0071                     ??_sendCommand:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0071                     ?_setPosicaoAtual:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0071                     ?_getPosicaoAtual:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0071                     ?_getPosicaoDesejada:	
   638                           ; 2 bytes @ 0x0
   639                           
   640  0071                     ?_main:	
   641                           ; 2 bytes @ 0x0
   642                           
   643  0071                     ?___wmul:	
   644                           ; 2 bytes @ 0x0
   645                           
   646  0071                     ?___lwdiv:	
   647                           ; 2 bytes @ 0x0
   648                           
   649  0071                     ?___ftpack:	
   650                           ; 2 bytes @ 0x0
   651                           
   652  0071                     ?___lldiv:	
   653                           ; 3 bytes @ 0x0
   654                           
   655  0071                     setPosicaoAtual@posicao_atual:	
   656                           ; 4 bytes @ 0x0
   657                           
   658  0071                     setPosicaoDesejada@posicao_desejada:	
   659                           ; 2 bytes @ 0x0
   660                           
   661  0071                     ___wmul@multiplier:	
   662                           ; 2 bytes @ 0x0
   663                           
   664  0071                     ___lwdiv@divisor:	
   665                           ; 2 bytes @ 0x0
   666                           
   667  0071                     ___ftpack@arg:	
   668                           ; 2 bytes @ 0x0
   669                           
   670  0071                     ___lldiv@divisor:	
   671                           ; 3 bytes @ 0x0
   672                           
   673                           
   674                           ; 4 bytes @ 0x0
   675  0071                     	ds	2
   676  0073                     ??_getPosicaoAtual:	
   677  0073                     ??_getPosicaoDesejada:	
   678                           ; 1 bytes @ 0x2
   679                           
   680  0073                     ??_setPosicaoDesejada:	
   681                           ; 1 bytes @ 0x2
   682                           
   683  0073                     ??_setPosicaoAtual:	
   684                           ; 1 bytes @ 0x2
   685                           
   686  0073                     sendCommand@cmd:	
   687                           ; 1 bytes @ 0x2
   688                           
   689  0073                     sendCharToLCD@ch:	
   690                           ; 1 bytes @ 0x2
   691                           
   692  0073                     ___wmul@multiplicand:	
   693                           ; 1 bytes @ 0x2
   694                           
   695  0073                     ___lwdiv@dividend:	
   696                           ; 2 bytes @ 0x2
   697                           
   698                           
   699                           ; 2 bytes @ 0x2
   700  0073                     	ds	1
   701  0074                     ??_setupDisplay:	
   702  0074                     ??_clearDisplay:	
   703                           ; 1 bytes @ 0x3
   704                           
   705  0074                     ?_printLine:	
   706                           ; 1 bytes @ 0x3
   707                           
   708  0074                     ?_setCursor:	
   709                           ; 1 bytes @ 0x3
   710                           
   711  0074                     setCursor@coluna:	
   712                           ; 1 bytes @ 0x3
   713                           
   714  0074                     ___ftpack@exp:	
   715                           ; 1 bytes @ 0x3
   716                           
   717  0074                     printLine@s:	
   718                           ; 1 bytes @ 0x3
   719                           
   720                           
   721                           ; 2 bytes @ 0x3
   722  0074                     	ds	1
   723  0075                     ??_setCursor:	
   724  0075                     ??___wmul:	
   725                           ; 1 bytes @ 0x4
   726                           
   727  0075                     ??___lwdiv:	
   728                           ; 1 bytes @ 0x4
   729                           
   730  0075                     ___ftpack@sign:	
   731                           ; 1 bytes @ 0x4
   732                           
   733  0075                     ___wmul@product:	
   734                           ; 1 bytes @ 0x4
   735                           
   736  0075                     ___lldiv@dividend:	
   737                           ; 2 bytes @ 0x4
   738                           
   739                           
   740                           ; 4 bytes @ 0x4
   741  0075                     	ds	1
   742  0076                     ??_printLine:	
   743  0076                     ??___ftpack:	
   744                           ; 1 bytes @ 0x5
   745                           
   746  0076                     setCursor@linha:	
   747                           ; 1 bytes @ 0x5
   748                           
   749  0076                     ___lwdiv@quotient:	
   750                           ; 1 bytes @ 0x5
   751                           
   752                           
   753                           ; 2 bytes @ 0x5
   754  0076                     	ds	1
   755  0077                     setCursor@position:	
   756                           
   757                           ; 1 bytes @ 0x6
   758  0077                     	ds	1
   759  0078                     ___lwdiv@counter:	
   760                           
   761                           ; 1 bytes @ 0x7
   762  0078                     	ds	1
   763  0079                     ??___lldiv:	
   764  0079                     ?___lwmod:	
   765                           ; 1 bytes @ 0x8
   766                           
   767  0079                     ?___awtoft:	
   768                           ; 2 bytes @ 0x8
   769                           
   770  0079                     ?___lwtoft:	
   771                           ; 3 bytes @ 0x8
   772                           
   773  0079                     ___awtoft@c:	
   774                           ; 3 bytes @ 0x8
   775                           
   776  0079                     ___lwmod@divisor:	
   777                           ; 2 bytes @ 0x8
   778                           
   779  0079                     ___lwtoft@c:	
   780                           ; 2 bytes @ 0x8
   781                           
   782                           
   783                           ; 2 bytes @ 0x8
   784  0079                     	ds	1
   785  007A                     ??_setupSerial:	
   786                           
   787                           ; 1 bytes @ 0x9
   788  007A                     	ds	1
   789  007B                     ___lwmod@dividend:	
   790                           
   791                           ; 2 bytes @ 0xA
   792  007B                     	ds	1
   793  007C                     ??___awtoft:	
   794  007C                     ??___lwtoft:	
   795                           ; 1 bytes @ 0xB
   796                           
   797                           
   798                           ; 1 bytes @ 0xB
   799  007C                     	ds	1
   800  007D                     ??___lwmod:	
   801                           
   802                           ; 1 bytes @ 0xC
   803  007D                     	ds	1
   804                           
   805                           	psect	cstackBANK0
   806  0020                     __pcstackBANK0:	
   807  0020                     ?___ftmul:	
   808  0020                     ___awtoft@sign:	
   809                           ; 3 bytes @ 0x0
   810                           
   811  0020                     ___lwmod@counter:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0020                     ___ftmul@f1:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0020                     ___lldiv@quotient:	
   818                           ; 3 bytes @ 0x0
   819                           
   820                           
   821                           ; 4 bytes @ 0x0
   822  0020                     	ds	1
   823  0021                     ?_sprintf:	
   824  0021                     ?___ftdiv:	
   825                           ; 2 bytes @ 0x1
   826                           
   827  0021                     sprintf@f:	
   828                           ; 3 bytes @ 0x1
   829                           
   830  0021                     ___ftdiv@f2:	
   831                           ; 1 bytes @ 0x1
   832                           
   833                           
   834                           ; 3 bytes @ 0x1
   835  0021                     	ds	2
   836  0023                     ___ftmul@f2:	
   837                           
   838                           ; 3 bytes @ 0x3
   839  0023                     	ds	1
   840  0024                     ??_sprintf:	
   841  0024                     ___lldiv@counter:	
   842                           ; 1 bytes @ 0x4
   843                           
   844  0024                     ___ftdiv@f1:	
   845                           ; 1 bytes @ 0x4
   846                           
   847                           
   848                           ; 3 bytes @ 0x4
   849  0024                     	ds	1
   850  0025                     ?_setupSerial:	
   851  0025                     setupSerial@baudrate:	
   852                           ; 1 bytes @ 0x5
   853                           
   854                           
   855                           ; 2 bytes @ 0x5
   856  0025                     	ds	1
   857  0026                     ??___ftmul:	
   858                           
   859                           ; 1 bytes @ 0x6
   860  0026                     	ds	1
   861  0027                     ??___ftdiv:	
   862  0027                     sprintf@ap:	
   863                           ; 1 bytes @ 0x7
   864                           
   865  0027                     setupSerial@FOSC:	
   866                           ; 1 bytes @ 0x7
   867                           
   868                           
   869                           ; 4 bytes @ 0x7
   870  0027                     	ds	1
   871  0028                     sprintf@flag:	
   872                           
   873                           ; 1 bytes @ 0x8
   874  0028                     	ds	1
   875  0029                     sprintf@prec:	
   876                           
   877                           ; 1 bytes @ 0x9
   878  0029                     	ds	1
   879  002A                     ___ftmul@exp:	
   880  002A                     sprintf@val:	
   881                           ; 1 bytes @ 0xA
   882                           
   883                           
   884                           ; 2 bytes @ 0xA
   885  002A                     	ds	1
   886  002B                     ___ftdiv@cntr:	
   887  002B                     ___ftmul@f3_as_product:	
   888                           ; 1 bytes @ 0xB
   889                           
   890                           
   891                           ; 3 bytes @ 0xB
   892  002B                     	ds	1
   893  002C                     sprintf@sp:	
   894  002C                     ___ftdiv@f3:	
   895                           ; 1 bytes @ 0xC
   896                           
   897                           
   898                           ; 3 bytes @ 0xC
   899  002C                     	ds	1
   900  002D                     sprintf@c:	
   901                           
   902                           ; 1 bytes @ 0xD
   903  002D                     	ds	1
   904  002E                     ___ftmul@cntr:	
   905                           
   906                           ; 1 bytes @ 0xE
   907  002E                     	ds	1
   908  002F                     ___ftdiv@exp:	
   909  002F                     ___ftmul@sign:	
   910                           ; 1 bytes @ 0xF
   911                           
   912                           
   913                           ; 1 bytes @ 0xF
   914  002F                     	ds	1
   915  0030                     ___ftdiv@sign:	
   916                           
   917                           ; 1 bytes @ 0x10
   918  0030                     	ds	1
   919  0031                     ?___fttol:	
   920  0031                     ___fttol@f1:	
   921                           ; 4 bytes @ 0x11
   922                           
   923                           
   924                           ; 3 bytes @ 0x11
   925  0031                     	ds	4
   926  0035                     ??___fttol:	
   927                           
   928                           ; 1 bytes @ 0x15
   929  0035                     	ds	4
   930  0039                     ___fttol@sign1:	
   931                           
   932                           ; 1 bytes @ 0x19
   933  0039                     	ds	1
   934  003A                     ___fttol@lval:	
   935                           
   936                           ; 4 bytes @ 0x1A
   937  003A                     	ds	4
   938  003E                     ___fttol@exp1:	
   939                           
   940                           ; 1 bytes @ 0x1E
   941  003E                     	ds	1
   942  003F                     ??_rotacionarParaDireita:	
   943                           
   944                           ; 1 bytes @ 0x1F
   945  003F                     	ds	4
   946  0043                     rotacionarParaDireita@fullStep:	
   947                           
   948                           ; 4 bytes @ 0x23
   949  0043                     	ds	4
   950  0047                     rotacionarParaDireita@anguloCiclo:	
   951                           
   952                           ; 3 bytes @ 0x27
   953  0047                     	ds	3
   954  004A                     rotacionarParaDireita@ciclos:	
   955                           
   956                           ; 2 bytes @ 0x2A
   957  004A                     	ds	2
   958  004C                     rotacionarParaDireita@i:	
   959                           
   960                           ; 2 bytes @ 0x2C
   961  004C                     	ds	2
   962  004E                     rotacionarParaDireita@j:	
   963                           
   964                           ; 2 bytes @ 0x2E
   965  004E                     	ds	2
   966  0050                     ??_main:	
   967                           
   968                           ; 1 bytes @ 0x30
   969  0050                     	ds	3
   970  0053                     main@posAtual_str:	
   971                           
   972                           ; 10 bytes @ 0x33
   973  0053                     	ds	10
   974  005D                     main@posDesejada_str:	
   975                           
   976                           ; 10 bytes @ 0x3D
   977  005D                     	ds	10
   978  0067                     main@posAtual:	
   979                           
   980                           ; 2 bytes @ 0x47
   981  0067                     	ds	2
   982  0069                     main@posDesejada:	
   983                           
   984                           ; 2 bytes @ 0x49
   985  0069                     	ds	2
   986  006B                     main@value:	
   987                           
   988                           ; 2 bytes @ 0x4B
   989  006B                     	ds	2
   990  006D                     main@i:	
   991                           
   992                           ; 2 bytes @ 0x4D
   993  006D                     	ds	2
   994                           
   995                           	psect	maintext
   996  067C                     __pmaintext:	
   997 ;;
   998 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   999 ;;
  1000 ;; *************** function _main *****************
  1001 ;; Defined at:
  1002 ;;		line 34 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\main.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  i               2   77[BANK0 ] int 
  1007 ;;  value           2   75[BANK0 ] unsigned int 
  1008 ;;  posDesejada_   10   61[BANK0 ] unsigned char [10]
  1009 ;;  posAtual_str   10   51[BANK0 ] unsigned char [10]
  1010 ;;  posDesejada     2   73[BANK0 ] unsigned int 
  1011 ;;  posAtual        2   71[BANK0 ] unsigned int 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  2   48[None  ] int 
  1014 ;; Registers used:
  1015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : B00/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1021 ;;      Params:         0       0       0       0       0
  1022 ;;      Locals:         0      28       0       0       0
  1023 ;;      Temps:          0       3       0       0       0
  1024 ;;      Totals:         0      31       0       0       0
  1025 ;;Total ram usage:       31 bytes
  1026 ;; Hardware stack levels required when called:    3
  1027 ;; This function calls:
  1028 ;;		___wmul
  1029 ;;		_clearDisplay
  1030 ;;		_getChar
  1031 ;;		_getPosicaoAtual
  1032 ;;		_getPosicaoDesejada
  1033 ;;		_printLine
  1034 ;;		_rotacionarParaDireita
  1035 ;;		_sendCharToLCD
  1036 ;;		_setCursor
  1037 ;;		_setPosicaoDesejada
  1038 ;;		_setupDisplay
  1039 ;;		_setupSerial
  1040 ;;		_setupStepper
  1041 ;;		_sprintf
  1042 ;; This function is called by:
  1043 ;;		Startup code after reset
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           
  1048                           ;psect for function _main
  1049  067C                     _main:	
  1050                           
  1051                           ;main.c: 37: ANSELH=0x00;
  1052                           
  1053                           ;incstack = 0
  1054                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1055  067C  1683               	bsf	3,5	;RP0=1, select bank3
  1056  067D  1703               	bsf	3,6	;RP1=1, select bank3
  1057  067E  0189               	clrf	9	;volatile
  1058                           
  1059                           ;main.c: 41: TRISCbits.TRISC6 = 0;
  1060  067F  1683               	bsf	3,5	;RP0=1, select bank1
  1061  0680  1303               	bcf	3,6	;RP1=0, select bank1
  1062  0681  1307               	bcf	7,6	;volatile
  1063                           
  1064                           ;main.c: 42: TRISCbits.TRISC7 = 1;
  1065  0682  1787               	bsf	7,7	;volatile
  1066                           
  1067                           ;main.c: 46: TRISB = 0x00;
  1068  0683  0186               	clrf	6	;volatile
  1069                           
  1070                           ;main.c: 47: PORTB = 0x00;
  1071  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1072  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1073  0686  0186               	clrf	6	;volatile
  1074                           
  1075                           ;main.c: 51: TRISD = 0x00;
  1076  0687  1683               	bsf	3,5	;RP0=1, select bank1
  1077  0688  1303               	bcf	3,6	;RP1=0, select bank1
  1078  0689  0188               	clrf	8	;volatile
  1079                           
  1080                           ;main.c: 52: PORTD = 0x00;
  1081  068A  1283               	bcf	3,5	;RP0=0, select bank0
  1082  068B  1303               	bcf	3,6	;RP1=0, select bank0
  1083  068C  0188               	clrf	8	;volatile
  1084                           
  1085                           ;main.c: 55: setupSerial(2400);
  1086  068D  3060               	movlw	96
  1087  068E  00A5               	movwf	setupSerial@baudrate
  1088  068F  3009               	movlw	9
  1089  0690  00A6               	movwf	setupSerial@baudrate+1
  1090  0691  120A  118A  21A4  120A  118A  	fcall	_setupSerial
  1091                           
  1092                           ;main.c: 56: setupDisplay();
  1093  0696  120A  118A  208C  120A  118A  	fcall	_setupDisplay
  1094                           
  1095                           ;main.c: 57: setupStepper();
  1096  069B  120A  158A  2790  120A  118A  	fcall	_setupStepper
  1097                           
  1098                           ;main.c: 59: clearDisplay();
  1099  06A0  120A  158A  275E  120A  118A  	fcall	_clearDisplay
  1100                           
  1101                           ;main.c: 60: printLine("PA: ___  PD: ___");
  1102  06A5  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1103  06A6  00F4               	movwf	printLine@s
  1104  06A7  3080               	movlw	128
  1105  06A8  00F5               	movwf	printLine@s+1
  1106  06A9  120A  118A  2046  120A  118A  	fcall	_printLine
  1107                           
  1108                           ;main.c: 61: setCursor(1,0);
  1109  06AE  01F4               	clrf	setCursor@coluna
  1110  06AF  3001               	movlw	1
  1111  06B0  120A  158A  27C4  120A  118A  	fcall	_setCursor
  1112                           
  1113                           ;main.c: 62: printLine("Vel: ___ RPM");
  1114  06B5  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1115  06B6  00F4               	movwf	printLine@s
  1116  06B7  3080               	movlw	128
  1117  06B8  00F5               	movwf	printLine@s+1
  1118  06B9  120A  118A  2046  120A  118A  	fcall	_printLine
  1119  06BE                     l1777:	
  1120                           ;main.c: 64: while(1)
  1121                           
  1122                           
  1123                           ;main.c: 65: {
  1124                           ;main.c: 67: uint16_t posAtual = getPosicaoAtual();
  1125  06BE  120A  158A  276A  120A  118A  	fcall	_getPosicaoAtual
  1126  06C3  0872               	movf	?_getPosicaoAtual+1,w
  1127  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1128  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1129  06C6  00E8               	movwf	main@posAtual+1
  1130  06C7  0871               	movf	?_getPosicaoAtual,w
  1131  06C8  00E7               	movwf	main@posAtual
  1132                           
  1133                           ;main.c: 68: uint16_t posDesejada = getPosicaoDesejada();
  1134  06C9  120A  158A  2771  120A  118A  	fcall	_getPosicaoDesejada
  1135  06CE  0872               	movf	?_getPosicaoDesejada+1,w
  1136  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1137  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1138  06D1  00EA               	movwf	main@posDesejada+1
  1139  06D2  0871               	movf	?_getPosicaoDesejada,w
  1140  06D3  00E9               	movwf	main@posDesejada
  1141                           
  1142                           ;main.c: 71: char posAtual_str[10];
  1143                           ;main.c: 72: sprintf(posAtual_str, "%d", posAtual);
  1144  06D4  302D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1145  06D5  00D0               	movwf	??_main
  1146  06D6  0850               	movf	??_main,w
  1147  06D7  00A1               	movwf	sprintf@f
  1148  06D8  0868               	movf	main@posAtual+1,w
  1149  06D9  00A3               	movwf	?_sprintf+2
  1150  06DA  0867               	movf	main@posAtual,w
  1151  06DB  00A2               	movwf	?_sprintf+1
  1152  06DC  3053               	movlw	(low (main@posAtual_str| 0))& (0+255)
  1153  06DD  120A  118A  24CF  120A  118A  	fcall	_sprintf
  1154                           
  1155                           ;main.c: 73: char posDesejada_str[10];
  1156                           ;main.c: 74: sprintf(posDesejada_str, "%d", posDesejada);
  1157  06E2  302D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1158  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1159  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1160  06E5  00D0               	movwf	??_main
  1161  06E6  0850               	movf	??_main,w
  1162  06E7  00A1               	movwf	sprintf@f
  1163  06E8  086A               	movf	main@posDesejada+1,w
  1164  06E9  00A3               	movwf	?_sprintf+2
  1165  06EA  0869               	movf	main@posDesejada,w
  1166  06EB  00A2               	movwf	?_sprintf+1
  1167  06EC  305D               	movlw	(low (main@posDesejada_str| 0))& (0+255)
  1168  06ED  120A  118A  24CF  120A  118A  	fcall	_sprintf
  1169                           
  1170                           ;main.c: 77: setCursor(0,4);
  1171  06F2  3004               	movlw	4
  1172  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  1173  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  1174  06F5  00D0               	movwf	??_main
  1175  06F6  0850               	movf	??_main,w
  1176  06F7  00F4               	movwf	setCursor@coluna
  1177  06F8  3000               	movlw	0
  1178  06F9  120A  158A  27C4  120A  118A  	fcall	_setCursor
  1179                           
  1180                           ;main.c: 78: printLine(posAtual_str);
  1181  06FE  3053               	movlw	(low (main@posAtual_str| 0))& (0+255)
  1182  06FF  00F4               	movwf	printLine@s
  1183  0700  3000               	movlw	0
  1184  0701  00F5               	movwf	printLine@s+1
  1185  0702  120A  118A  2046  120A  118A  	fcall	_printLine
  1186                           
  1187                           ;main.c: 81: setCursor(0,13);
  1188  0707  300D               	movlw	13
  1189  0708  1283               	bcf	3,5	;RP0=0, select bank0
  1190  0709  1303               	bcf	3,6	;RP1=0, select bank0
  1191  070A  00D0               	movwf	??_main
  1192  070B  0850               	movf	??_main,w
  1193  070C  00F4               	movwf	setCursor@coluna
  1194  070D  3000               	movlw	0
  1195  070E  120A  158A  27C4  120A  118A  	fcall	_setCursor
  1196                           
  1197                           ;main.c: 82: printLine(posDesejada_str);
  1198  0713  305D               	movlw	(low (main@posDesejada_str| 0))& (0+255)
  1199  0714  00F4               	movwf	printLine@s
  1200  0715  3000               	movlw	0
  1201  0716  00F5               	movwf	printLine@s+1
  1202  0717  120A  118A  2046  120A  118A  	fcall	_printLine
  1203                           
  1204                           ;main.c: 85: setCursor(1,5);
  1205  071C  3005               	movlw	5
  1206  071D  1283               	bcf	3,5	;RP0=0, select bank0
  1207  071E  1303               	bcf	3,6	;RP1=0, select bank0
  1208  071F  00D0               	movwf	??_main
  1209  0720  0850               	movf	??_main,w
  1210  0721  00F4               	movwf	setCursor@coluna
  1211  0722  3001               	movlw	1
  1212  0723  120A  158A  27C4  120A  118A  	fcall	_setCursor
  1213                           
  1214                           ;main.c: 86: printLine("200");
  1215  0728  3029               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1216  0729  00F4               	movwf	printLine@s
  1217  072A  3080               	movlw	128
  1218  072B  00F5               	movwf	printLine@s+1
  1219  072C  120A  118A  2046  120A  118A  	fcall	_printLine
  1220                           
  1221                           ;main.c: 88: if(RCIF)
  1222  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1224  0733  1E8C               	btfss	12,5	;volatile
  1225  0734  2EBE               	goto	l1777
  1226                           
  1227                           ;main.c: 89: {
  1228                           ;main.c: 90: RCIF=0;
  1229  0735  128C               	bcf	12,5	;volatile
  1230                           
  1231                           ;main.c: 91: uint16_t value = 0;
  1232  0736  01EB               	clrf	main@value
  1233  0737  01EC               	clrf	main@value+1
  1234                           
  1235                           ;main.c: 92: for(int i =0; i<4; i++)
  1236  0738  01ED               	clrf	main@i
  1237  0739  01EE               	clrf	main@i+1
  1238  073A                     L4:	
  1239  073A  086E               	movf	main@i+1,w
  1240  073B  3A80               	xorlw	128
  1241  073C  00FF               	movwf	127
  1242  073D  3080               	movlw	128
  1243  073E  027F               	subwf	127,w
  1244  073F  1D03               	skipz
  1245  0740  2F43               	goto	u1875
  1246  0741  3004               	movlw	4
  1247  0742  026D               	subwf	main@i,w
  1248  0743                     u1875:	
  1249  0743  1803               	btfsc	3,0
  1250  0744  2EBE               	goto	l1777
  1251                           
  1252                           ;main.c: 93: {
  1253                           ;main.c: 94: ch = getChar();
  1254  0745  120A  158A  2763  120A  118A  	fcall	_getChar
  1255  074A  1283               	bcf	3,5	;RP0=0, select bank0
  1256  074B  1303               	bcf	3,6	;RP1=0, select bank0
  1257  074C  00D0               	movwf	??_main
  1258  074D  0850               	movf	??_main,w
  1259  074E  00EF               	movwf	_ch
  1260                           
  1261                           ;main.c: 95: if(ch == 0x0D)
  1262  074F  300D               	movlw	13
  1263  0750  066F               	xorwf	_ch,w
  1264  0751  1D03               	btfss	3,2
  1265  0752  2F82               	goto	l1827
  1266                           
  1267                           ;main.c: 96: {
  1268                           ;main.c: 97: if (value == 0)
  1269  0753  086B               	movf	main@value,w
  1270  0754  046C               	iorwf	main@value+1,w
  1271  0755  1D03               	btfss	3,2
  1272  0756  2F5B               	goto	l1815
  1273                           
  1274                           ;main.c: 98: {
  1275                           ;main.c: 99: value = 360;
  1276  0757  3068               	movlw	104
  1277  0758  00EB               	movwf	main@value
  1278  0759  3001               	movlw	1
  1279  075A  00EC               	movwf	main@value+1
  1280  075B                     l1815:	
  1281                           
  1282                           ;main.c: 100: }
  1283                           ;main.c: 101: setPosicaoDesejada(value);
  1284  075B  086C               	movf	main@value+1,w
  1285  075C  00F2               	movwf	setPosicaoDesejada@posicao_desejada+1
  1286  075D  086B               	movf	main@value,w
  1287  075E  00F1               	movwf	setPosicaoDesejada@posicao_desejada
  1288  075F  120A  158A  277F  120A  118A  	fcall	_setPosicaoDesejada
  1289                           
  1290                           ;main.c: 102: rotacionarParaDireita();
  1291  0764  120A  118A  25A3  120A  118A  	fcall	_rotacionarParaDireita
  1292                           
  1293                           ;main.c: 103: setCursor(0,15);
  1294  0769  300F               	movlw	15
  1295  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1296  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1297  076C  00D0               	movwf	??_main
  1298  076D  0850               	movf	??_main,w
  1299  076E  00F4               	movwf	setCursor@coluna
  1300  076F  3000               	movlw	0
  1301  0770  120A  158A  27C4  120A  118A  	fcall	_setCursor
  1302                           
  1303                           ;main.c: 104: sendCharToLCD(' ');
  1304  0775  3020               	movlw	32
  1305  0776  120A  118A  2166  120A  118A  	fcall	_sendCharToLCD
  1306                           
  1307                           ;main.c: 105: input = (char *) 0x20;
  1308  077B  3020               	movlw	32
  1309  077C  1683               	bsf	3,5	;RP0=1, select bank1
  1310  077D  1303               	bcf	3,6	;RP1=0, select bank1
  1311  077E  00A8               	movwf	_input^(0+128)
  1312  077F  3000               	movlw	0
  1313  0780  00A9               	movwf	(_input^(0+128)+1)
  1314                           
  1315                           ;main.c: 106: break;
  1316  0781  2EBE               	goto	l1777
  1317  0782                     l1827:	
  1318                           ;main.c: 107: }
  1319                           
  1320                           
  1321                           ;main.c: 108: else
  1322                           ;main.c: 109: {
  1323                           ;main.c: 110: if(i == 0)
  1324  0782  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0783  086D               	movf	main@i,w
  1326  0784  046E               	iorwf	main@i+1,w
  1327  0785  1D03               	btfss	3,2
  1328  0786  2F90               	goto	l1831
  1329                           
  1330                           ;main.c: 111: {
  1331                           ;main.c: 112: value = value + ((int)ch - 48)*100;
  1332  0787  086F               	movf	_ch,w
  1333  0788  3ED0               	addlw	208
  1334  0789  00F1               	movwf	___wmul@multiplier
  1335  078A  30FF               	movlw	255
  1336  078B  1803               	skipnc
  1337  078C  3000               	movlw	0
  1338  078D  00F2               	movwf	___wmul@multiplier+1
  1339  078E  3064               	movlw	100
  1340  078F  2F9C               	goto	L3
  1341  0790                     l1831:	
  1342                           ;main.c: 113: }
  1343                           
  1344                           
  1345                           ;main.c: 114: else if(i == 1)
  1346  0790  036D               	decf	main@i,w
  1347  0791  046E               	iorwf	main@i+1,w
  1348  0792  1D03               	btfss	3,2
  1349  0793  2FAE               	goto	l1835
  1350                           
  1351                           ;main.c: 115: {
  1352                           ;main.c: 116: value = value + ((int)ch - 48)*10;
  1353  0794  086F               	movf	_ch,w
  1354  0795  3ED0               	addlw	208
  1355  0796  00F1               	movwf	___wmul@multiplier
  1356  0797  30FF               	movlw	255
  1357  0798  1803               	skipnc
  1358  0799  3000               	movlw	0
  1359  079A  00F2               	movwf	___wmul@multiplier+1
  1360  079B  300A               	movlw	10
  1361  079C                     L3:	
  1362  079C  00F3               	movwf	___wmul@multiplicand
  1363  079D  3000               	movlw	0
  1364  079E  00F4               	movwf	___wmul@multiplicand+1
  1365  079F  120A  158A  27DF  120A  118A  	fcall	___wmul
  1366  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  1367  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  1368  07A6  086B               	movf	main@value,w
  1369  07A7  0771               	addwf	?___wmul,w
  1370  07A8  00EB               	movwf	main@value
  1371  07A9  086C               	movf	main@value+1,w
  1372  07AA  1803               	skipnc
  1373  07AB  0A6C               	incf	main@value+1,w
  1374  07AC  0772               	addwf	?___wmul+1,w
  1375  07AD  2FC1               	goto	L2
  1376  07AE                     l1835:	
  1377                           ;main.c: 117: }
  1378                           
  1379                           
  1380                           ;main.c: 118: else if(i == 2)
  1381  07AE  3002               	movlw	2
  1382  07AF  066D               	xorwf	main@i,w
  1383  07B0  046E               	iorwf	main@i+1,w
  1384  07B1  1D03               	btfss	3,2
  1385  07B2  2FC2               	goto	l1839
  1386                           
  1387                           ;main.c: 119: {
  1388                           ;main.c: 120: value = value + ((int)ch - 48);
  1389  07B3  086F               	movf	_ch,w
  1390  07B4  076B               	addwf	main@value,w
  1391  07B5  00D0               	movwf	??_main
  1392  07B6  086C               	movf	main@value+1,w
  1393  07B7  1803               	skipnc
  1394  07B8  0A6C               	incf	main@value+1,w
  1395  07B9  00D1               	movwf	??_main+1
  1396  07BA  0850               	movf	??_main,w
  1397  07BB  3ED0               	addlw	208
  1398  07BC  00EB               	movwf	main@value
  1399  07BD  0851               	movf	??_main+1,w
  1400  07BE  1803               	skipnc
  1401  07BF  3E01               	addlw	1
  1402  07C0  3EFF               	addlw	255
  1403  07C1                     L2:	
  1404  07C1  00EC               	movwf	main@value+1
  1405  07C2                     l1839:	
  1406                           
  1407                           ;main.c: 121: }
  1408                           ;main.c: 122: }
  1409                           ;main.c: 123: input[i] = ch;
  1410  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1411  07C3  086F               	movf	_ch,w
  1412  07C4  00D0               	movwf	??_main
  1413  07C5  086D               	movf	main@i,w
  1414  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  1415  07C7  1303               	bcf	3,6	;RP1=0, select bank1
  1416  07C8  0728               	addwf	_input^(0+128),w
  1417  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1418  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1419  07CB  00D1               	movwf	??_main+1
  1420  07CC  086E               	movf	main@i+1,w
  1421  07CD  1803               	skipnc
  1422  07CE  0A6E               	incf	main@i+1,w
  1423  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  1424  07D0  1303               	bcf	3,6	;RP1=0, select bank1
  1425  07D1  0729               	addwf	(_input+1)^(0+128),w
  1426  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1427  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1428  07D4  00D2               	movwf	??_main+2
  1429  07D5  0851               	movf	??_main+1,w
  1430  07D6  0084               	movwf	4
  1431  07D7  1783               	bsf	3,7
  1432  07D8  1C52               	btfss	??_main+2,0
  1433  07D9  1383               	bcf	3,7
  1434  07DA  0850               	movf	??_main,w
  1435  07DB  0080               	movwf	0
  1436  07DC  3001               	movlw	1
  1437  07DD  07ED               	addwf	main@i,f
  1438  07DE  1803               	skipnc
  1439  07DF  0AEE               	incf	main@i+1,f
  1440  07E0  3000               	movlw	0
  1441  07E1  07EE               	addwf	main@i+1,f
  1442  07E2  2F3A               	goto	L4
  1443  07E3                     __end_of_main:	
  1444                           
  1445                           	psect	text1
  1446  04CF                     __ptext1:	
  1447 ;; *************** function _sprintf *****************
  1448 ;; Defined at:
  1449 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  sp              1    wreg     PTR unsigned char 
  1452 ;;		 -> main@posDesejada_str(10), main@posAtual_str(10), 
  1453 ;;  f               1    1[BANK0 ] PTR const unsigned char 
  1454 ;;		 -> STR_4(3), STR_3(3), 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  sp              1   12[BANK0 ] PTR unsigned char 
  1457 ;;		 -> main@posDesejada_str(10), main@posAtual_str(10), 
  1458 ;;  tmpval          4    0        struct .
  1459 ;;  val             2   10[BANK0 ] unsigned int 
  1460 ;;  cp              2    0        PTR const unsigned char 
  1461 ;;  len             2    0        unsigned int 
  1462 ;;  c               1   13[BANK0 ] char 
  1463 ;;  prec            1    9[BANK0 ] char 
  1464 ;;  flag            1    8[BANK0 ] unsigned char 
  1465 ;;  ap              1    7[BANK0 ] PTR void [1]
  1466 ;;		 -> ?_sprintf(2), 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  2    1[BANK0 ] int 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1476 ;;      Params:         0       3       0       0       0
  1477 ;;      Locals:         0       7       0       0       0
  1478 ;;      Temps:          0       3       0       0       0
  1479 ;;      Totals:         0      13       0       0       0
  1480 ;;Total ram usage:       13 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    1
  1483 ;; This function calls:
  1484 ;;		___lwdiv
  1485 ;;		___lwmod
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function _sprintf
  1493  04CF                     _sprintf:	
  1494                           
  1495                           ;incstack = 0
  1496                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1497                           ;sprintf@sp stored from wreg
  1498  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1499  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  1500  04D1  00AC               	movwf	sprintf@sp
  1501                           
  1502                           ;doprnt.c: 494: va_list ap;
  1503                           ;doprnt.c: 499: signed char c;
  1504                           ;doprnt.c: 506: signed char prec;
  1505                           ;doprnt.c: 508: unsigned char flag;
  1506                           ;doprnt.c: 523: union {
  1507                           ;doprnt.c: 524: unsigned long vd;
  1508                           ;doprnt.c: 525: double integ;
  1509                           ;doprnt.c: 526: } tmpval;
  1510                           ;doprnt.c: 528: unsigned int val;
  1511                           ;doprnt.c: 529: unsigned len;
  1512                           ;doprnt.c: 530: const char * cp;
  1513                           ;doprnt.c: 533: *ap = __va_start();
  1514  04D2  3022               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1515  04D3  00A4               	movwf	??_sprintf
  1516  04D4  0824               	movf	??_sprintf,w
  1517  04D5  00A7               	movwf	sprintf@ap
  1518  04D6                     l1701:	
  1519                           ;doprnt.c: 536: while(c = *f++) {
  1520                           
  1521  04D6  3001               	movlw	1
  1522  04D7  07A1               	addwf	sprintf@f,f
  1523  04D8  30FF               	movlw	-1
  1524  04D9  0721               	addwf	sprintf@f,w
  1525  04DA  0084               	movwf	4
  1526  04DB  120A  118A  200E  120A  118A  	fcall	stringdir
  1527  04E0  00A4               	movwf	??_sprintf
  1528  04E1  0824               	movf	??_sprintf,w
  1529  04E2  00AD               	movwf	sprintf@c
  1530  04E3  082D               	movf	sprintf@c,w
  1531  04E4  1903               	btfsc	3,2
  1532  04E5  2D9E               	goto	l1703
  1533                           
  1534                           ;doprnt.c: 538: if(c != '%')
  1535  04E6  3025               	movlw	37
  1536  04E7  062D               	xorwf	sprintf@c,w
  1537  04E8  1903               	btfsc	3,2
  1538  04E9  2CF6               	goto	l1657
  1539                           
  1540                           ;doprnt.c: 540: {
  1541                           ;doprnt.c: 541: ((*sp++ = (c)));
  1542  04EA  082D               	movf	sprintf@c,w
  1543  04EB  00A4               	movwf	??_sprintf
  1544  04EC  082C               	movf	sprintf@sp,w
  1545  04ED  0084               	movwf	4
  1546  04EE  0824               	movf	??_sprintf,w
  1547  04EF  1383               	bcf	3,7	;select IRP bank0
  1548  04F0  0080               	movwf	0
  1549  04F1  3001               	movlw	1
  1550  04F2  00A4               	movwf	??_sprintf
  1551  04F3  0824               	movf	??_sprintf,w
  1552  04F4  07AC               	addwf	sprintf@sp,f
  1553                           
  1554                           ;doprnt.c: 542: continue;
  1555  04F5  2CD6               	goto	l1701
  1556  04F6                     l1657:	
  1557                           
  1558                           ;doprnt.c: 543: }
  1559                           ;doprnt.c: 548: flag = 0;
  1560  04F6  01A8               	clrf	sprintf@flag
  1561                           
  1562                           ;doprnt.c: 822: }
  1563                           
  1564                           ;doprnt.c: 813: continue;
  1565                           
  1566                           ;doprnt.c: 802: default:
  1567                           
  1568                           ;doprnt.c: 698: case 'i':
  1569                           ;doprnt.c: 699: break;
  1570                           
  1571                           ;doprnt.c: 697: case 'd':
  1572                           
  1573                           ;doprnt.c: 638: goto alldone;
  1574                           
  1575                           ;doprnt.c: 637: case 0:
  1576                           
  1577                           ;doprnt.c: 635: switch(c = *f++) {
  1578  04F7  3001               	movlw	1
  1579  04F8  07A1               	addwf	sprintf@f,f
  1580  04F9  30FF               	movlw	-1
  1581  04FA  0721               	addwf	sprintf@f,w
  1582  04FB  0084               	movwf	4
  1583  04FC  120A  118A  200E  120A  118A  	fcall	stringdir
  1584  0501  00AD               	movwf	sprintf@c
  1585                           
  1586                           ; Switch size 1, requested type "space"
  1587                           ; Number of cases is 3, Range of values is 0 to 105
  1588                           ; switch strategies available:
  1589                           ; Name         Instructions Cycles
  1590                           ; simple_byte           10     6 (average)
  1591                           ; jumptable            260     6 (fixed)
  1592                           ;	Chosen strategy is simple_byte
  1593  0502  3A00               	xorlw	0	; case 0
  1594  0503  1903               	skipnz
  1595  0504  2D9E               	goto	l1703
  1596  0505  3A64               	xorlw	100	; case 100
  1597  0506  1903               	skipnz
  1598  0507  2D0C               	goto	l1663
  1599  0508  3A0D               	xorlw	13	; case 105
  1600  0509  1903               	skipnz
  1601  050A  2D0C               	goto	l1663
  1602  050B  2CD6               	goto	l1701
  1603  050C                     l1663:	
  1604                           
  1605                           ;doprnt.c: 1253: {
  1606                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1607  050C  0827               	movf	sprintf@ap,w
  1608  050D  0084               	movwf	4
  1609  050E  1383               	bcf	3,7	;select IRP bank0
  1610  050F  0800               	movf	0,w
  1611  0510  00AA               	movwf	sprintf@val
  1612  0511  0A84               	incf	4,f
  1613  0512  0800               	movf	0,w
  1614  0513  00AB               	movwf	sprintf@val+1
  1615  0514  3002               	movlw	2
  1616  0515  00A4               	movwf	??_sprintf
  1617  0516  0824               	movf	??_sprintf,w
  1618  0517  07A7               	addwf	sprintf@ap,f
  1619                           
  1620                           ;doprnt.c: 1261: if((int)val < 0) {
  1621  0518  1FAB               	btfss	sprintf@val+1,7
  1622  0519  2D23               	goto	l1673
  1623                           
  1624                           ;doprnt.c: 1262: flag |= 0x03;
  1625  051A  3003               	movlw	3
  1626  051B  00A4               	movwf	??_sprintf
  1627  051C  0824               	movf	??_sprintf,w
  1628  051D  04A8               	iorwf	sprintf@flag,f
  1629                           
  1630                           ;doprnt.c: 1263: val = -val;
  1631  051E  09AA               	comf	sprintf@val,f
  1632  051F  09AB               	comf	sprintf@val+1,f
  1633  0520  0AAA               	incf	sprintf@val,f
  1634  0521  1903               	skipnz
  1635  0522  0AAB               	incf	sprintf@val+1,f
  1636  0523                     l1673:	
  1637                           
  1638                           ;doprnt.c: 1264: }
  1639                           ;doprnt.c: 1266: }
  1640                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1641  0523  01AD               	clrf	sprintf@c
  1642  0524  0AAD               	incf	sprintf@c,f
  1643  0525  3005               	movlw	5
  1644  0526  062D               	xorwf	sprintf@c,w
  1645  0527  1903               	btfsc	3,2
  1646  0528  2D4A               	goto	l1685
  1647  0529                     l1679:	
  1648                           
  1649                           ;doprnt.c: 1306: if(val < dpowers[c])
  1650  0529  082D               	movf	sprintf@c,w
  1651  052A  00A4               	movwf	??_sprintf
  1652  052B  0724               	addwf	??_sprintf,w
  1653  052C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1654  052D  0084               	movwf	4
  1655  052E  120A  118A  200E  120A  118A  	fcall	stringdir
  1656  0533  00A5               	movwf	??_sprintf+1
  1657  0534  120A  118A  200E  120A  118A  	fcall	stringdir
  1658  0539  00A6               	movwf	??_sprintf+2
  1659  053A  0826               	movf	??_sprintf+2,w
  1660  053B  022B               	subwf	sprintf@val+1,w
  1661  053C  1D03               	skipz
  1662  053D  2D40               	goto	u1735
  1663  053E  0825               	movf	??_sprintf+1,w
  1664  053F  022A               	subwf	sprintf@val,w
  1665  0540                     u1735:	
  1666  0540  1C03               	btfss	3,0
  1667  0541  2D4A               	goto	l1685
  1668                           
  1669                           ;doprnt.c: 1307: break;
  1670  0542  3001               	movlw	1
  1671  0543  00A4               	movwf	??_sprintf
  1672  0544  0824               	movf	??_sprintf,w
  1673  0545  07AD               	addwf	sprintf@c,f
  1674  0546  3005               	movlw	5
  1675  0547  062D               	xorwf	sprintf@c,w
  1676  0548  1D03               	btfss	3,2
  1677  0549  2D29               	goto	l1679
  1678  054A                     l1685:	
  1679                           
  1680                           ;doprnt.c: 1422: {
  1681                           ;doprnt.c: 1438: if(flag & 0x03)
  1682  054A  0828               	movf	sprintf@flag,w
  1683  054B  3903               	andlw	3
  1684  054C  1903               	btfsc	3,2
  1685  054D  2D59               	goto	l1691
  1686                           
  1687                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1688  054E  302D               	movlw	45
  1689  054F  00A4               	movwf	??_sprintf
  1690  0550  082C               	movf	sprintf@sp,w
  1691  0551  0084               	movwf	4
  1692  0552  0824               	movf	??_sprintf,w
  1693  0553  1383               	bcf	3,7	;select IRP bank0
  1694  0554  0080               	movwf	0
  1695  0555  3001               	movlw	1
  1696  0556  00A4               	movwf	??_sprintf
  1697  0557  0824               	movf	??_sprintf,w
  1698  0558  07AC               	addwf	sprintf@sp,f
  1699  0559                     l1691:	
  1700                           
  1701                           ;doprnt.c: 1469: }
  1702                           ;doprnt.c: 1472: prec = c;
  1703  0559  082D               	movf	sprintf@c,w
  1704  055A  00A4               	movwf	??_sprintf
  1705  055B  0824               	movf	??_sprintf,w
  1706  055C  00A9               	movwf	sprintf@prec
  1707  055D                     l1699:	
  1708                           ;doprnt.c: 1474: while(prec--) {
  1709                           
  1710  055D  30FF               	movlw	255
  1711  055E  00A4               	movwf	??_sprintf
  1712  055F  0824               	movf	??_sprintf,w
  1713  0560  07A9               	addwf	sprintf@prec,f
  1714  0561  0A29               	incf	sprintf@prec,w
  1715  0562  1903               	btfsc	3,2
  1716  0563  2CD6               	goto	l1701
  1717                           
  1718                           ;doprnt.c: 1478: {
  1719                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1720  0564  300A               	movlw	10
  1721  0565  00F9               	movwf	___lwmod@divisor
  1722  0566  3000               	movlw	0
  1723  0567  00FA               	movwf	___lwmod@divisor+1
  1724  0568  0829               	movf	sprintf@prec,w
  1725  0569  00A4               	movwf	??_sprintf
  1726  056A  0724               	addwf	??_sprintf,w
  1727  056B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1728  056C  0084               	movwf	4
  1729  056D  120A  118A  200E  120A  118A  	fcall	stringdir
  1730  0572  00F1               	movwf	___lwdiv@divisor
  1731  0573  120A  118A  200E  120A  118A  	fcall	stringdir
  1732  0578  00F2               	movwf	___lwdiv@divisor+1
  1733  0579  082B               	movf	sprintf@val+1,w
  1734  057A  00F4               	movwf	___lwdiv@dividend+1
  1735  057B  082A               	movf	sprintf@val,w
  1736  057C  00F3               	movwf	___lwdiv@dividend
  1737  057D  120A  118A  20EC  120A  118A  	fcall	___lwdiv
  1738  0582  0872               	movf	?___lwdiv+1,w
  1739  0583  00FC               	movwf	___lwmod@dividend+1
  1740  0584  0871               	movf	?___lwdiv,w
  1741  0585  00FB               	movwf	___lwmod@dividend
  1742  0586  120A  118A  20B8  120A  118A  	fcall	___lwmod
  1743  058B  0879               	movf	?___lwmod,w
  1744  058C  3E30               	addlw	48
  1745  058D  1283               	bcf	3,5	;RP0=0, select bank0
  1746  058E  1303               	bcf	3,6	;RP1=0, select bank0
  1747  058F  00A5               	movwf	??_sprintf+1
  1748  0590  0825               	movf	??_sprintf+1,w
  1749  0591  00AD               	movwf	sprintf@c
  1750                           
  1751                           ;doprnt.c: 1523: }
  1752                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1753  0592  082D               	movf	sprintf@c,w
  1754  0593  00A4               	movwf	??_sprintf
  1755  0594  082C               	movf	sprintf@sp,w
  1756  0595  0084               	movwf	4
  1757  0596  0824               	movf	??_sprintf,w
  1758  0597  1383               	bcf	3,7	;select IRP bank0
  1759  0598  0080               	movwf	0
  1760  0599  3001               	movlw	1
  1761  059A  00A4               	movwf	??_sprintf
  1762  059B  0824               	movf	??_sprintf,w
  1763  059C  07AC               	addwf	sprintf@sp,f
  1764  059D  2D5D               	goto	l1699
  1765  059E                     l1703:	
  1766                           ;doprnt.c: 1525: }
  1767                           ;doprnt.c: 1533: }
  1768                           ;doprnt.c: 1535: alldone:
  1769                           
  1770                           
  1771                           ;doprnt.c: 1538: *sp = 0;
  1772  059E  082C               	movf	sprintf@sp,w
  1773  059F  0084               	movwf	4
  1774  05A0  1383               	bcf	3,7	;select IRP bank0
  1775  05A1  0180               	clrf	0
  1776  05A2  0008               	return
  1777  05A3                     __end_of_sprintf:	
  1778                           ;doprnt.c: 1540: return 0;
  1779                           ;	Return value of _sprintf is never used
  1780                           
  1781                           
  1782                           	psect	text2
  1783  00B8                     __ptext2:	
  1784 ;; *************** function ___lwmod *****************
  1785 ;; Defined at:
  1786 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  divisor         2    8[COMMON] unsigned int 
  1789 ;;  dividend        2   10[COMMON] unsigned int 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  counter         1    0[BANK0 ] unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  2    8[COMMON] unsigned int 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1801 ;;      Params:         4       0       0       0       0
  1802 ;;      Locals:         0       1       0       0       0
  1803 ;;      Temps:          1       0       0       0       0
  1804 ;;      Totals:         5       1       0       0       0
  1805 ;;Total ram usage:        6 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_sprintf
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           
  1815                           ;psect for function ___lwmod
  1816  00B8                     ___lwmod:	
  1817                           
  1818                           ;incstack = 0
  1819                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1820  00B8  0879               	movf	___lwmod@divisor,w
  1821  00B9  047A               	iorwf	___lwmod@divisor+1,w
  1822  00BA  1903               	btfsc	3,2
  1823  00BB  28E7               	goto	l1575
  1824  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1825  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1826  00BE  01A0               	clrf	___lwmod@counter
  1827  00BF  0AA0               	incf	___lwmod@counter,f
  1828  00C0                     l1565:	
  1829  00C0  1BFA               	btfsc	___lwmod@divisor+1,7
  1830  00C1  28CE               	goto	l1567
  1831  00C2  3001               	movlw	1
  1832  00C3                     u1615:	
  1833  00C3  1003               	clrc
  1834  00C4  0DF9               	rlf	___lwmod@divisor,f
  1835  00C5  0DFA               	rlf	___lwmod@divisor+1,f
  1836  00C6  3EFF               	addlw	-1
  1837  00C7  1D03               	skipz
  1838  00C8  28C3               	goto	u1615
  1839  00C9  3001               	movlw	1
  1840  00CA  00FD               	movwf	??___lwmod
  1841  00CB  087D               	movf	??___lwmod,w
  1842  00CC  07A0               	addwf	___lwmod@counter,f
  1843  00CD  28C0               	goto	l1565
  1844  00CE                     l1567:	
  1845  00CE  087A               	movf	___lwmod@divisor+1,w
  1846  00CF  027C               	subwf	___lwmod@dividend+1,w
  1847  00D0  1D03               	skipz
  1848  00D1  28D4               	goto	u1635
  1849  00D2  0879               	movf	___lwmod@divisor,w
  1850  00D3  027B               	subwf	___lwmod@dividend,w
  1851  00D4                     u1635:	
  1852  00D4  1C03               	skipc
  1853  00D5  28DC               	goto	l1571
  1854  00D6  0879               	movf	___lwmod@divisor,w
  1855  00D7  02FB               	subwf	___lwmod@dividend,f
  1856  00D8  087A               	movf	___lwmod@divisor+1,w
  1857  00D9  1C03               	skipc
  1858  00DA  03FC               	decf	___lwmod@dividend+1,f
  1859  00DB  02FC               	subwf	___lwmod@dividend+1,f
  1860  00DC                     l1571:	
  1861  00DC  3001               	movlw	1
  1862  00DD                     u1645:	
  1863  00DD  1003               	clrc
  1864  00DE  0CFA               	rrf	___lwmod@divisor+1,f
  1865  00DF  0CF9               	rrf	___lwmod@divisor,f
  1866  00E0  3EFF               	addlw	-1
  1867  00E1  1D03               	skipz
  1868  00E2  28DD               	goto	u1645
  1869  00E3  3001               	movlw	1
  1870  00E4  02A0               	subwf	___lwmod@counter,f
  1871  00E5  1D03               	btfss	3,2
  1872  00E6  28CE               	goto	l1567
  1873  00E7                     l1575:	
  1874  00E7  087C               	movf	___lwmod@dividend+1,w
  1875  00E8  00FA               	movwf	?___lwmod+1
  1876  00E9  087B               	movf	___lwmod@dividend,w
  1877  00EA  00F9               	movwf	?___lwmod
  1878  00EB  0008               	return
  1879  00EC                     __end_of___lwmod:	
  1880                           
  1881                           	psect	text3
  1882  00EC                     __ptext3:	
  1883 ;; *************** function ___lwdiv *****************
  1884 ;; Defined at:
  1885 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  divisor         2    0[COMMON] unsigned int 
  1888 ;;  dividend        2    2[COMMON] unsigned int 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  quotient        2    5[COMMON] unsigned int 
  1891 ;;  counter         1    7[COMMON] unsigned char 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  2    0[COMMON] unsigned int 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1901 ;;      Params:         4       0       0       0       0
  1902 ;;      Locals:         3       0       0       0       0
  1903 ;;      Temps:          1       0       0       0       0
  1904 ;;      Totals:         8       0       0       0       0
  1905 ;;Total ram usage:        8 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_sprintf
  1911 ;;		_setVelocidade
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           
  1916                           ;psect for function ___lwdiv
  1917  00EC                     ___lwdiv:	
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1921  00EC  01F6               	clrf	___lwdiv@quotient
  1922  00ED  01F7               	clrf	___lwdiv@quotient+1
  1923  00EE  0871               	movf	___lwdiv@divisor,w
  1924  00EF  0472               	iorwf	___lwdiv@divisor+1,w
  1925  00F0  1903               	btfsc	3,2
  1926  00F1  2923               	goto	l1553
  1927  00F2  01F8               	clrf	___lwdiv@counter
  1928  00F3  0AF8               	incf	___lwdiv@counter,f
  1929  00F4                     l1541:	
  1930  00F4  1BF2               	btfsc	___lwdiv@divisor+1,7
  1931  00F5  2902               	goto	l1543
  1932  00F6  3001               	movlw	1
  1933  00F7                     u1545:	
  1934  00F7  1003               	clrc
  1935  00F8  0DF1               	rlf	___lwdiv@divisor,f
  1936  00F9  0DF2               	rlf	___lwdiv@divisor+1,f
  1937  00FA  3EFF               	addlw	-1
  1938  00FB  1D03               	skipz
  1939  00FC  28F7               	goto	u1545
  1940  00FD  3001               	movlw	1
  1941  00FE  00F5               	movwf	??___lwdiv
  1942  00FF  0875               	movf	??___lwdiv,w
  1943  0100  07F8               	addwf	___lwdiv@counter,f
  1944  0101  28F4               	goto	l1541
  1945  0102                     l1543:	
  1946  0102  3001               	movlw	1
  1947  0103                     u1565:	
  1948  0103  1003               	clrc
  1949  0104  0DF6               	rlf	___lwdiv@quotient,f
  1950  0105  0DF7               	rlf	___lwdiv@quotient+1,f
  1951  0106  3EFF               	addlw	-1
  1952  0107  1D03               	skipz
  1953  0108  2903               	goto	u1565
  1954  0109  0872               	movf	___lwdiv@divisor+1,w
  1955  010A  0274               	subwf	___lwdiv@dividend+1,w
  1956  010B  1D03               	skipz
  1957  010C  290F               	goto	u1575
  1958  010D  0871               	movf	___lwdiv@divisor,w
  1959  010E  0273               	subwf	___lwdiv@dividend,w
  1960  010F                     u1575:	
  1961  010F  1C03               	skipc
  1962  0110  2918               	goto	l1549
  1963  0111  0871               	movf	___lwdiv@divisor,w
  1964  0112  02F3               	subwf	___lwdiv@dividend,f
  1965  0113  0872               	movf	___lwdiv@divisor+1,w
  1966  0114  1C03               	skipc
  1967  0115  03F4               	decf	___lwdiv@dividend+1,f
  1968  0116  02F4               	subwf	___lwdiv@dividend+1,f
  1969  0117  1476               	bsf	___lwdiv@quotient,0
  1970  0118                     l1549:	
  1971  0118  3001               	movlw	1
  1972  0119                     u1585:	
  1973  0119  1003               	clrc
  1974  011A  0CF2               	rrf	___lwdiv@divisor+1,f
  1975  011B  0CF1               	rrf	___lwdiv@divisor,f
  1976  011C  3EFF               	addlw	-1
  1977  011D  1D03               	skipz
  1978  011E  2919               	goto	u1585
  1979  011F  3001               	movlw	1
  1980  0120  02F8               	subwf	___lwdiv@counter,f
  1981  0121  1D03               	btfss	3,2
  1982  0122  2902               	goto	l1543
  1983  0123                     l1553:	
  1984  0123  0877               	movf	___lwdiv@quotient+1,w
  1985  0124  00F2               	movwf	?___lwdiv+1
  1986  0125  0876               	movf	___lwdiv@quotient,w
  1987  0126  00F1               	movwf	?___lwdiv
  1988  0127  0008               	return
  1989  0128                     __end_of___lwdiv:	
  1990                           
  1991                           	psect	text4
  1992  0F90                     __ptext4:	
  1993 ;; *************** function _setupStepper *****************
  1994 ;; Defined at:
  1995 ;;		line 11 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\stepper.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;		None
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2009 ;;      Params:         0       0       0       0       0
  2010 ;;      Locals:         0       0       0       0       0
  2011 ;;      Temps:          0       0       0       0       0
  2012 ;;      Totals:         0       0       0       0       0
  2013 ;;Total ram usage:        0 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_main
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _setupStepper
  2024  0F90                     _setupStepper:	
  2025                           
  2026                           ;stepper.c: 13: posicaoAtual = 0;
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _setupStepper: [wreg+status,2]
  2030  0F90  1683               	bsf	3,5	;RP0=1, select bank1
  2031  0F91  1303               	bcf	3,6	;RP1=0, select bank1
  2032  0F92  01B0               	clrf	_posicaoAtual^(0+128)
  2033  0F93  01B1               	clrf	(_posicaoAtual+1)^(0+128)
  2034                           
  2035                           ;stepper.c: 14: velocidade = 1;
  2036  0F94  3001               	movlw	1
  2037  0F95  00AE               	movwf	_velocidade^(0+128)
  2038  0F96  3000               	movlw	0
  2039  0F97  00AF               	movwf	(_velocidade^(0+128)+1)
  2040                           
  2041                           ;stepper.c: 15: delayTime = 50;
  2042  0F98  3032               	movlw	50
  2043  0F99  00AC               	movwf	_delayTime^(0+128)
  2044  0F9A  3000               	movlw	0
  2045  0F9B  00AD               	movwf	(_delayTime^(0+128)+1)
  2046                           
  2047                           ;stepper.c: 16: posicaoDesejada = 0;
  2048  0F9C  01AA               	clrf	_posicaoDesejada^(0+128)
  2049  0F9D  01AB               	clrf	(_posicaoDesejada+1)^(0+128)
  2050  0F9E  0008               	return
  2051  0F9F                     __end_of_setupStepper:	
  2052                           
  2053                           	psect	text5
  2054  01A4                     __ptext5:	
  2055 ;; *************** function _setupSerial *****************
  2056 ;; Defined at:
  2057 ;;		line 4 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\serial.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  baudrate        2    5[BANK0 ] unsigned int 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  FOSC            4    7[BANK0 ] unsigned long 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0, pclath, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2071 ;;      Params:         0       2       0       0       0
  2072 ;;      Locals:         0       4       0       0       0
  2073 ;;      Temps:          4       0       0       0       0
  2074 ;;      Totals:         4       6       0       0       0
  2075 ;;Total ram usage:       10 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    1
  2078 ;; This function calls:
  2079 ;;		___lldiv
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _setupSerial
  2087  01A4                     _setupSerial:	
  2088                           
  2089                           ;serial.c: 6: unsigned long FOSC = 4000000;
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in _setupSerial: [wreg+status,2+status,0+pclath+cstack]
  2093  01A4  3000               	movlw	0
  2094  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2095  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2096  01A7  00AA               	movwf	setupSerial@FOSC+3
  2097  01A8  303D               	movlw	61
  2098  01A9  00A9               	movwf	setupSerial@FOSC+2
  2099  01AA  3009               	movlw	9
  2100  01AB  00A8               	movwf	setupSerial@FOSC+1
  2101  01AC  3000               	movlw	0
  2102  01AD  00A7               	movwf	setupSerial@FOSC
  2103                           
  2104                           ;serial.c: 7: TXSTAbits.BRGH = 0;
  2105  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  2106  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  2107  01B0  1118               	bcf	24,2	;volatile
  2108                           
  2109                           ;serial.c: 8: TXSTAbits.SYNC = 0;
  2110  01B1  1218               	bcf	24,4	;volatile
  2111                           
  2112                           ;serial.c: 9: TXSTAbits.TXEN = 1;
  2113  01B2  1698               	bsf	24,5	;volatile
  2114                           
  2115                           ;serial.c: 10: RCSTA = 0b10010000;
  2116  01B3  3090               	movlw	144
  2117  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  2118  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  2119  01B6  0098               	movwf	24	;volatile
  2120                           
  2121                           ;serial.c: 11: BAUDCTLbits.BRG16 = 0;
  2122  01B7  1683               	bsf	3,5	;RP0=1, select bank3
  2123  01B8  1703               	bsf	3,6	;RP1=1, select bank3
  2124  01B9  1187               	bcf	7,3	;volatile
  2125                           
  2126                           ;serial.c: 14: SPBRG = ((FOSC/baudrate)/64) - 1;
  2127  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2128  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2129  01BC  0825               	movf	setupSerial@baudrate,w
  2130  01BD  00F1               	movwf	___lldiv@divisor
  2131  01BE  0826               	movf	setupSerial@baudrate+1,w
  2132  01BF  00F2               	movwf	___lldiv@divisor+1
  2133  01C0  01F3               	clrf	___lldiv@divisor+2
  2134  01C1  01F4               	clrf	___lldiv@divisor+3
  2135  01C2  082A               	movf	setupSerial@FOSC+3,w
  2136  01C3  00F8               	movwf	___lldiv@dividend+3
  2137  01C4  0829               	movf	setupSerial@FOSC+2,w
  2138  01C5  00F7               	movwf	___lldiv@dividend+2
  2139  01C6  0828               	movf	setupSerial@FOSC+1,w
  2140  01C7  00F6               	movwf	___lldiv@dividend+1
  2141  01C8  0827               	movf	setupSerial@FOSC,w
  2142  01C9  00F5               	movwf	___lldiv@dividend
  2143  01CA  120A  118A  21EA  120A  118A  	fcall	___lldiv
  2144  01CF  0871               	movf	?___lldiv,w
  2145  01D0  00FA               	movwf	??_setupSerial
  2146  01D1  0872               	movf	?___lldiv+1,w
  2147  01D2  00FB               	movwf	??_setupSerial+1
  2148  01D3  0873               	movf	?___lldiv+2,w
  2149  01D4  00FC               	movwf	??_setupSerial+2
  2150  01D5  0874               	movf	?___lldiv+3,w
  2151  01D6  00FD               	movwf	??_setupSerial+3
  2152  01D7  3006               	movlw	6
  2153  01D8                     u1665:	
  2154  01D8  1003               	clrc
  2155  01D9  0CFD               	rrf	??_setupSerial+3,f
  2156  01DA  0CFC               	rrf	??_setupSerial+2,f
  2157  01DB  0CFB               	rrf	??_setupSerial+1,f
  2158  01DC  0CFA               	rrf	??_setupSerial,f
  2159  01DD  3EFF               	addlw	-1
  2160  01DE  1D03               	skipz
  2161  01DF  29D8               	goto	u1665
  2162  01E0  087A               	movf	??_setupSerial,w
  2163  01E1  3EFF               	addlw	255
  2164  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  2165  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  2166  01E4  0099               	movwf	25	;volatile
  2167                           
  2168                           ;serial.c: 16: TXIF=RCIF=0;
  2169  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  2170  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  2171  01E7  128C               	bcf	12,5	;volatile
  2172  01E8  120C               	bcf	12,4	;volatile
  2173  01E9  0008               	return
  2174  01EA                     __end_of_setupSerial:	
  2175                           
  2176                           	psect	text6
  2177  01EA                     __ptext6:	
  2178 ;; *************** function ___lldiv *****************
  2179 ;; Defined at:
  2180 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  divisor         4    0[COMMON] unsigned long 
  2183 ;;  dividend        4    4[COMMON] unsigned long 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  quotient        4    0[BANK0 ] unsigned long 
  2186 ;;  counter         1    4[BANK0 ] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  4    0[COMMON] unsigned long 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2196 ;;      Params:         8       0       0       0       0
  2197 ;;      Locals:         0       5       0       0       0
  2198 ;;      Temps:          1       0       0       0       0
  2199 ;;      Totals:         9       5       0       0       0
  2200 ;;Total ram usage:       14 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_setupSerial
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           
  2210                           ;psect for function ___lldiv
  2211  01EA                     ___lldiv:	
  2212                           
  2213                           ;incstack = 0
  2214                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2215  01EA  3000               	movlw	0
  2216  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  2217  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  2218  01ED  00A3               	movwf	___lldiv@quotient+3
  2219  01EE  3000               	movlw	0
  2220  01EF  00A2               	movwf	___lldiv@quotient+2
  2221  01F0  3000               	movlw	0
  2222  01F1  00A1               	movwf	___lldiv@quotient+1
  2223  01F2  3000               	movlw	0
  2224  01F3  00A0               	movwf	___lldiv@quotient
  2225  01F4  0874               	movf	___lldiv@divisor+3,w
  2226  01F5  0473               	iorwf	___lldiv@divisor+2,w
  2227  01F6  0472               	iorwf	___lldiv@divisor+1,w
  2228  01F7  0471               	iorwf	___lldiv@divisor,w
  2229  01F8  1903               	skipnz
  2230  01F9  2A41               	goto	l1527
  2231  01FA  01A4               	clrf	___lldiv@counter
  2232  01FB  0AA4               	incf	___lldiv@counter,f
  2233  01FC                     l1513:	
  2234  01FC  1BF4               	btfsc	___lldiv@divisor+3,7
  2235  01FD  2A0C               	goto	l1515
  2236  01FE  3001               	movlw	1
  2237  01FF  00F9               	movwf	??___lldiv
  2238  0200                     u1475:	
  2239  0200  1003               	clrc
  2240  0201  0DF1               	rlf	___lldiv@divisor,f
  2241  0202  0DF2               	rlf	___lldiv@divisor+1,f
  2242  0203  0DF3               	rlf	___lldiv@divisor+2,f
  2243  0204  0DF4               	rlf	___lldiv@divisor+3,f
  2244  0205  0BF9               	decfsz	??___lldiv,f
  2245  0206  2A00               	goto	u1475
  2246  0207  3001               	movlw	1
  2247  0208  00F9               	movwf	??___lldiv
  2248  0209  0879               	movf	??___lldiv,w
  2249  020A  07A4               	addwf	___lldiv@counter,f
  2250  020B  29FC               	goto	l1513
  2251  020C                     l1515:	
  2252  020C  3001               	movlw	1
  2253  020D  00F9               	movwf	??___lldiv
  2254  020E                     u1495:	
  2255  020E  1003               	clrc
  2256  020F  0DA0               	rlf	___lldiv@quotient,f
  2257  0210  0DA1               	rlf	___lldiv@quotient+1,f
  2258  0211  0DA2               	rlf	___lldiv@quotient+2,f
  2259  0212  0DA3               	rlf	___lldiv@quotient+3,f
  2260  0213  0BF9               	decfsz	??___lldiv,f
  2261  0214  2A0E               	goto	u1495
  2262  0215  0874               	movf	___lldiv@divisor+3,w
  2263  0216  0278               	subwf	___lldiv@dividend+3,w
  2264  0217  1D03               	skipz
  2265  0218  2A23               	goto	u1505
  2266  0219  0873               	movf	___lldiv@divisor+2,w
  2267  021A  0277               	subwf	___lldiv@dividend+2,w
  2268  021B  1D03               	skipz
  2269  021C  2A23               	goto	u1505
  2270  021D  0872               	movf	___lldiv@divisor+1,w
  2271  021E  0276               	subwf	___lldiv@dividend+1,w
  2272  021F  1D03               	skipz
  2273  0220  2A23               	goto	u1505
  2274  0221  0871               	movf	___lldiv@divisor,w
  2275  0222  0275               	subwf	___lldiv@dividend,w
  2276  0223                     u1505:	
  2277  0223  1C03               	skipc
  2278  0224  2A34               	goto	l1523
  2279  0225  0871               	movf	___lldiv@divisor,w
  2280  0226  02F5               	subwf	___lldiv@dividend,f
  2281  0227  0872               	movf	___lldiv@divisor+1,w
  2282  0228  1C03               	skipc
  2283  0229  0F72               	incfsz	___lldiv@divisor+1,w
  2284  022A  02F6               	subwf	___lldiv@dividend+1,f
  2285  022B  0873               	movf	___lldiv@divisor+2,w
  2286  022C  1C03               	skipc
  2287  022D  0F73               	incfsz	___lldiv@divisor+2,w
  2288  022E  02F7               	subwf	___lldiv@dividend+2,f
  2289  022F  0874               	movf	___lldiv@divisor+3,w
  2290  0230  1C03               	skipc
  2291  0231  0F74               	incfsz	___lldiv@divisor+3,w
  2292  0232  02F8               	subwf	___lldiv@dividend+3,f
  2293  0233  1420               	bsf	___lldiv@quotient,0
  2294  0234                     l1523:	
  2295  0234  3001               	movlw	1
  2296  0235                     u1515:	
  2297  0235  1003               	clrc
  2298  0236  0CF4               	rrf	___lldiv@divisor+3,f
  2299  0237  0CF3               	rrf	___lldiv@divisor+2,f
  2300  0238  0CF2               	rrf	___lldiv@divisor+1,f
  2301  0239  0CF1               	rrf	___lldiv@divisor,f
  2302  023A  3EFF               	addlw	-1
  2303  023B  1D03               	skipz
  2304  023C  2A35               	goto	u1515
  2305  023D  3001               	movlw	1
  2306  023E  02A4               	subwf	___lldiv@counter,f
  2307  023F  1D03               	btfss	3,2
  2308  0240  2A0C               	goto	l1515
  2309  0241                     l1527:	
  2310  0241  0823               	movf	___lldiv@quotient+3,w
  2311  0242  00F4               	movwf	?___lldiv+3
  2312  0243  0822               	movf	___lldiv@quotient+2,w
  2313  0244  00F3               	movwf	?___lldiv+2
  2314  0245  0821               	movf	___lldiv@quotient+1,w
  2315  0246  00F2               	movwf	?___lldiv+1
  2316  0247  0820               	movf	___lldiv@quotient,w
  2317  0248  00F1               	movwf	?___lldiv
  2318  0249  0008               	return
  2319  024A                     __end_of___lldiv:	
  2320                           
  2321                           	psect	text7
  2322  008C                     __ptext7:	
  2323 ;; *************** function _setupDisplay *****************
  2324 ;; Defined at:
  2325 ;;		line 5 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\lcd.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0, pclath, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339 ;;      Params:         0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0
  2341 ;;      Temps:          2       0       0       0       0
  2342 ;;      Totals:         2       0       0       0       0
  2343 ;;Total ram usage:        2 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    1
  2346 ;; This function calls:
  2347 ;;		_sendCommand
  2348 ;; This function is called by:
  2349 ;;		_main
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           
  2354                           ;psect for function _setupDisplay
  2355  008C                     _setupDisplay:	
  2356                           
  2357                           ;lcd.c: 7: _delay((unsigned long)((20)*(4000000/4000.0)));
  2358                           
  2359                           ;incstack = 0
  2360                           ; Regs used in _setupDisplay: [wreg+status,2+status,0+pclath+cstack]
  2361  008C  301A               	movlw	26
  2362  008D  00F5               	movwf	??_setupDisplay+1
  2363  008E  30F8               	movlw	248
  2364  008F  00F4               	movwf	??_setupDisplay
  2365  0090                     u1957:	
  2366  0090  0BF4               	decfsz	??_setupDisplay,f
  2367  0091  2890               	goto	u1957
  2368  0092  0BF5               	decfsz	??_setupDisplay+1,f
  2369  0093  2890               	goto	u1957
  2370  0094  0000               	nop
  2371                           
  2372                           ;lcd.c: 8: sendCommand(0x02);
  2373  0095  3002               	movlw	2
  2374  0096  120A  118A  2128  120A  118A  	fcall	_sendCommand
  2375                           
  2376                           ;lcd.c: 9: sendCommand(0x28);
  2377  009B  3028               	movlw	40
  2378  009C  120A  118A  2128  120A  118A  	fcall	_sendCommand
  2379                           
  2380                           ;lcd.c: 10: sendCommand(0x0C);
  2381  00A1  300C               	movlw	12
  2382  00A2  120A  118A  2128  120A  118A  	fcall	_sendCommand
  2383                           
  2384                           ;lcd.c: 11: sendCommand(0x06);
  2385  00A7  3006               	movlw	6
  2386  00A8  120A  118A  2128  120A  118A  	fcall	_sendCommand
  2387                           
  2388                           ;lcd.c: 12: sendCommand(0x01);
  2389  00AD  3001               	movlw	1
  2390  00AE  120A  118A  2128  120A  118A  	fcall	_sendCommand
  2391                           
  2392                           ;lcd.c: 13: sendCommand(0x80);
  2393  00B3  3080               	movlw	128
  2394  00B4  120A  118A  2128   	fcall	_sendCommand
  2395  00B7  0008               	return
  2396  00B8                     __end_of_setupDisplay:	
  2397                           
  2398                           	psect	text8
  2399  0F7F                     __ptext8:	
  2400 ;; *************** function _setPosicaoDesejada *****************
  2401 ;; Defined at:
  2402 ;;		line 46 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\stepper.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  posicao_dese    2    0[COMMON] unsigned int 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2416 ;;      Params:         2       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0
  2419 ;;      Totals:         2       0       0       0       0
  2420 ;;Total ram usage:        2 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function _setPosicaoDesejada
  2431  0F7F                     _setPosicaoDesejada:	
  2432                           
  2433                           ;stepper.c: 48: posicaoDesejada = posicao_desejada;
  2434                           
  2435                           ;incstack = 0
  2436                           ; Regs used in _setPosicaoDesejada: [wreg]
  2437  0F7F  0872               	movf	setPosicaoDesejada@posicao_desejada+1,w
  2438  0F80  1683               	bsf	3,5	;RP0=1, select bank1
  2439  0F81  1303               	bcf	3,6	;RP1=0, select bank1
  2440  0F82  00AB               	movwf	(_posicaoDesejada+1)^(0+128)
  2441  0F83  0871               	movf	setPosicaoDesejada@posicao_desejada,w
  2442  0F84  00AA               	movwf	_posicaoDesejada^(0+128)
  2443  0F85  0008               	return
  2444  0F86                     __end_of_setPosicaoDesejada:	
  2445                           
  2446                           	psect	text9
  2447  0FC4                     __ptext9:	
  2448 ;; *************** function _setCursor *****************
  2449 ;; Defined at:
  2450 ;;		line 59 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\lcd.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  linha           1    wreg     unsigned char 
  2453 ;;  coluna          1    3[COMMON] unsigned char 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  linha           1    5[COMMON] unsigned char 
  2456 ;;  position        1    6[COMMON] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0, pclath, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2466 ;;      Params:         1       0       0       0       0
  2467 ;;      Locals:         2       0       0       0       0
  2468 ;;      Temps:          1       0       0       0       0
  2469 ;;      Totals:         4       0       0       0       0
  2470 ;;Total ram usage:        4 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    1
  2473 ;; This function calls:
  2474 ;;		_sendCommand
  2475 ;; This function is called by:
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function _setCursor
  2482  0FC4                     _setCursor:	
  2483                           
  2484                           ;incstack = 0
  2485                           ; Regs used in _setCursor: [wreg+status,2+status,0+pclath+cstack]
  2486                           ;setCursor@linha stored from wreg
  2487  0FC4  00F6               	movwf	setCursor@linha
  2488                           
  2489                           ;lcd.c: 61: uint8_t position = 0x80;
  2490  0FC5  3080               	movlw	128
  2491  0FC6  00F5               	movwf	??_setCursor
  2492  0FC7  0875               	movf	??_setCursor,w
  2493  0FC8  00F7               	movwf	setCursor@position
  2494                           
  2495                           ;lcd.c: 62: if (linha == 0)
  2496  0FC9  0876               	movf	setCursor@linha,w
  2497  0FCA  1D03               	btfss	3,2
  2498  0FCB  2FCE               	goto	l1633
  2499                           
  2500                           ;lcd.c: 63: {
  2501                           ;lcd.c: 64: position = 0x80;
  2502  0FCC  3080               	movlw	128
  2503  0FCD  2FD2               	goto	L5
  2504  0FCE                     l1633:	
  2505                           ;lcd.c: 65: }
  2506                           
  2507                           
  2508                           ;lcd.c: 66: else if (linha == 1)
  2509  0FCE  0376               	decf	setCursor@linha,w
  2510  0FCF  1D03               	btfss	3,2
  2511  0FD0  2FD5               	goto	l1637
  2512                           
  2513                           ;lcd.c: 67: {
  2514                           ;lcd.c: 68: position = 0xC0;
  2515  0FD1  30C0               	movlw	192
  2516  0FD2                     L5:	
  2517  0FD2  00F5               	movwf	??_setCursor
  2518  0FD3  0875               	movf	??_setCursor,w
  2519  0FD4  00F7               	movwf	setCursor@position
  2520  0FD5                     l1637:	
  2521                           
  2522                           ;lcd.c: 69: }
  2523                           ;lcd.c: 71: position = position + coluna;
  2524  0FD5  0874               	movf	setCursor@coluna,w
  2525  0FD6  0777               	addwf	setCursor@position,w
  2526  0FD7  00F5               	movwf	??_setCursor
  2527  0FD8  0875               	movf	??_setCursor,w
  2528  0FD9  00F7               	movwf	setCursor@position
  2529                           
  2530                           ;lcd.c: 72: sendCommand(position);
  2531  0FDA  0877               	movf	setCursor@position,w
  2532  0FDB  120A  118A  2128   	fcall	_sendCommand
  2533  0FDE  0008               	return
  2534  0FDF                     __end_of_setCursor:	
  2535                           
  2536                           	psect	text10
  2537  05A3                     __ptext10:	
  2538 ;; *************** function _rotacionarParaDireita *****************
  2539 ;; Defined at:
  2540 ;;		line 51 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\stepper.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  fullStep        4   35[BANK0 ] unsigned char [4]
  2545 ;;  anguloCiclo     3   39[BANK0 ] float 
  2546 ;;  j               2   46[BANK0 ] unsigned int 
  2547 ;;  i               2   44[BANK0 ] unsigned int 
  2548 ;;  ciclos          2   42[BANK0 ] unsigned int 
  2549 ;;  k               2    0        unsigned int 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2559 ;;      Params:         0       0       0       0       0
  2560 ;;      Locals:         0      13       0       0       0
  2561 ;;      Temps:          0       4       0       0       0
  2562 ;;      Totals:         0      17       0       0       0
  2563 ;;Total ram usage:       17 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    2
  2566 ;; This function calls:
  2567 ;;		___awtoft
  2568 ;;		___ftdiv
  2569 ;;		___ftmul
  2570 ;;		___fttol
  2571 ;;		___lwtoft
  2572 ;;		_setPosicaoAtual
  2573 ;; This function is called by:
  2574 ;;		_main
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           
  2579                           ;psect for function _rotacionarParaDireita
  2580  05A3                     _rotacionarParaDireita:	
  2581                           
  2582                           ;stepper.c: 53: float anguloCiclo = 4 * 0.18;
  2583                           
  2584                           ;incstack = 0
  2585                           ; Regs used in _rotacionarParaDireita: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2586  05A3  3052               	movlw	82
  2587  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  2588  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  2589  05A6  00C7               	movwf	rotacionarParaDireita@anguloCiclo
  2590  05A7  3038               	movlw	56
  2591  05A8  00C8               	movwf	rotacionarParaDireita@anguloCiclo+1
  2592  05A9  303F               	movlw	63
  2593  05AA  00C9               	movwf	rotacionarParaDireita@anguloCiclo+2
  2594                           
  2595                           ;stepper.c: 54: uint16_t ciclos = (int)(posicaoDesejada - posicaoAtual)/anguloCiclo;
  2596  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  2597  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  2598  05AD  0930               	comf	_posicaoAtual^(0+128),w
  2599  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  2600  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  2601  05B0  00BF               	movwf	??_rotacionarParaDireita
  2602  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  2603  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  2604  05B3  0931               	comf	(_posicaoAtual+1)^(0+128),w
  2605  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  2606  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  2607  05B6  00C0               	movwf	??_rotacionarParaDireita+1
  2608  05B7  0ABF               	incf	??_rotacionarParaDireita,f
  2609  05B8  1903               	skipnz
  2610  05B9  0AC0               	incf	??_rotacionarParaDireita+1,f
  2611  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  2612  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  2613  05BC  082A               	movf	_posicaoDesejada^(0+128),w
  2614  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  2615  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  2616  05BF  073F               	addwf	??_rotacionarParaDireita,w
  2617  05C0  00F9               	movwf	___awtoft@c
  2618  05C1  1683               	bsf	3,5	;RP0=1, select bank1
  2619  05C2  1303               	bcf	3,6	;RP1=0, select bank1
  2620  05C3  082B               	movf	(_posicaoDesejada+1)^(0+128),w
  2621  05C4  1803               	skipnc
  2622  05C5  0A2B               	incf	(_posicaoDesejada+1)^(0+128),w
  2623  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  2624  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  2625  05C8  0740               	addwf	??_rotacionarParaDireita+1,w
  2626  05C9  00FA               	movwf	___awtoft@c+1
  2627  05CA  120A  118A  2069  120A  118A  	fcall	___awtoft
  2628  05CF  0879               	movf	?___awtoft,w
  2629  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  2630  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  2631  05D2  00A4               	movwf	___ftdiv@f1
  2632  05D3  087A               	movf	?___awtoft+1,w
  2633  05D4  00A5               	movwf	___ftdiv@f1+1
  2634  05D5  087B               	movf	?___awtoft+2,w
  2635  05D6  00A6               	movwf	___ftdiv@f1+2
  2636  05D7  0847               	movf	rotacionarParaDireita@anguloCiclo,w
  2637  05D8  00A1               	movwf	___ftdiv@f2
  2638  05D9  0848               	movf	rotacionarParaDireita@anguloCiclo+1,w
  2639  05DA  00A2               	movwf	___ftdiv@f2+1
  2640  05DB  0849               	movf	rotacionarParaDireita@anguloCiclo+2,w
  2641  05DC  00A3               	movwf	___ftdiv@f2+2
  2642  05DD  120A  118A  2344  120A  118A  	fcall	___ftdiv
  2643  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2644  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2645  05E4  0821               	movf	?___ftdiv,w
  2646  05E5  00B1               	movwf	___fttol@f1
  2647  05E6  0822               	movf	?___ftdiv+1,w
  2648  05E7  00B2               	movwf	___fttol@f1+1
  2649  05E8  0823               	movf	?___ftdiv+2,w
  2650  05E9  00B3               	movwf	___fttol@f1+2
  2651  05EA  120A  118A  22B6  120A  118A  	fcall	___fttol
  2652  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  2653  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  2654  05F1  0832               	movf	?___fttol+1,w
  2655  05F2  00CB               	movwf	rotacionarParaDireita@ciclos+1
  2656  05F3  0831               	movf	?___fttol,w
  2657  05F4  00CA               	movwf	rotacionarParaDireita@ciclos
  2658                           
  2659                           ;stepper.c: 55: uint16_t i;
  2660                           ;stepper.c: 56: uint16_t j;
  2661                           ;stepper.c: 57: uint16_t k;
  2662                           ;stepper.c: 58: char fullStep[4] = {0b00001100,0b00000110,0b00000011, 0b00001001};
  2663  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  2664  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  2665  05F7  0827               	movf	(rotacionarParaDireita@F1704+3)^(0+128),w
  2666  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  2667  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  2668  05FA  00C6               	movwf	rotacionarParaDireita@fullStep+3
  2669  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  2670  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  2671  05FD  0826               	movf	(rotacionarParaDireita@F1704+2)^(0+128),w
  2672  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  2673  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  2674  0600  00C5               	movwf	rotacionarParaDireita@fullStep+2
  2675  0601  1683               	bsf	3,5	;RP0=1, select bank1
  2676  0602  1303               	bcf	3,6	;RP1=0, select bank1
  2677  0603  0825               	movf	(rotacionarParaDireita@F1704+1)^(0+128),w
  2678  0604  1283               	bcf	3,5	;RP0=0, select bank0
  2679  0605  1303               	bcf	3,6	;RP1=0, select bank0
  2680  0606  00C4               	movwf	rotacionarParaDireita@fullStep+1
  2681  0607  1683               	bsf	3,5	;RP0=1, select bank1
  2682  0608  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0609  0824               	movf	rotacionarParaDireita@F1704^(0+128),w
  2684  060A  1283               	bcf	3,5	;RP0=0, select bank0
  2685  060B  1303               	bcf	3,6	;RP1=0, select bank0
  2686  060C  00C3               	movwf	rotacionarParaDireita@fullStep
  2687                           
  2688                           ;stepper.c: 59: for(i = 0; i < ciclos; i++){
  2689  060D  01CC               	clrf	rotacionarParaDireita@i
  2690  060E  01CD               	clrf	rotacionarParaDireita@i+1
  2691  060F                     l170:	
  2692  060F  084B               	movf	rotacionarParaDireita@ciclos+1,w
  2693  0610  024D               	subwf	rotacionarParaDireita@i+1,w
  2694  0611  1D03               	skipz
  2695  0612  2E15               	goto	u1815
  2696  0613  084A               	movf	rotacionarParaDireita@ciclos,w
  2697  0614  024C               	subwf	rotacionarParaDireita@i,w
  2698  0615                     u1815:	
  2699  0615  1803               	btfsc	3,0
  2700  0616  2E71               	goto	l1739
  2701                           
  2702                           ;stepper.c: 60: for(j = 0; j<4;j++){
  2703  0617  01CE               	clrf	rotacionarParaDireita@j
  2704  0618  01CF               	clrf	rotacionarParaDireita@j+1
  2705  0619  3000               	movlw	0
  2706  061A  024F               	subwf	rotacionarParaDireita@j+1,w
  2707  061B  3004               	movlw	4
  2708  061C  1903               	skipnz
  2709  061D  024E               	subwf	rotacionarParaDireita@j,w
  2710  061E  1803               	btfsc	3,0
  2711  061F  2E6A               	goto	l1737
  2712  0620                     l1729:	
  2713                           
  2714                           ;stepper.c: 61: PORTD = fullStep[j];
  2715  0620  084E               	movf	rotacionarParaDireita@j,w
  2716  0621  3E43               	addlw	(low (rotacionarParaDireita@fullStep| 0))& (0+255)
  2717  0622  0084               	movwf	4
  2718  0623  1383               	bcf	3,7	;select IRP bank0
  2719  0624  0800               	movf	0,w
  2720  0625  0088               	movwf	8	;volatile
  2721                           
  2722                           ;stepper.c: 62: _delay((unsigned long)((delayTime)*(4000000/4000000.0)));
  2723  0626  1683               	bsf	3,5	;RP0=1, select bank1
  2724  0627  1303               	bcf	3,6	;RP1=0, select bank1
  2725  0628  082D               	movf	(_delayTime+1)^(0+128),w
  2726  0629  00FA               	movwf	___lwtoft@c+1
  2727  062A  082C               	movf	_delayTime^(0+128),w
  2728  062B  00F9               	movwf	___lwtoft@c
  2729  062C  120A  158A  27B0  120A  118A  	fcall	___lwtoft
  2730  0631  0879               	movf	?___lwtoft,w
  2731  0632  1283               	bcf	3,5	;RP0=0, select bank0
  2732  0633  1303               	bcf	3,6	;RP1=0, select bank0
  2733  0634  00A3               	movwf	___ftmul@f2
  2734  0635  087A               	movf	?___lwtoft+1,w
  2735  0636  00A4               	movwf	___ftmul@f2+1
  2736  0637  087B               	movf	?___lwtoft+2,w
  2737  0638  00A5               	movwf	___ftmul@f2+2
  2738  0639  3000               	movlw	0
  2739  063A  00A0               	movwf	___ftmul@f1
  2740  063B  3080               	movlw	128
  2741  063C  00A1               	movwf	___ftmul@f1+1
  2742  063D  303F               	movlw	63
  2743  063E  00A2               	movwf	___ftmul@f1+2
  2744  063F  120A  118A  23FC  120A  118A  	fcall	___ftmul
  2745  0644  1283               	bcf	3,5	;RP0=0, select bank0
  2746  0645  1303               	bcf	3,6	;RP1=0, select bank0
  2747  0646  0820               	movf	?___ftmul,w
  2748  0647  00B1               	movwf	___fttol@f1
  2749  0648  0821               	movf	?___ftmul+1,w
  2750  0649  00B2               	movwf	___fttol@f1+1
  2751  064A  0822               	movf	?___ftmul+2,w
  2752  064B  00B3               	movwf	___fttol@f1+2
  2753  064C  120A  118A  22B6  120A  118A  	fcall	___fttol
  2754  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0653  0831               	movf	?___fttol,w
  2757  0654  00BF               	movwf	??_rotacionarParaDireita
  2758  0655  0832               	movf	?___fttol+1,w
  2759  0656  00C0               	movwf	??_rotacionarParaDireita+1
  2760  0657  0833               	movf	?___fttol+2,w
  2761  0658  00C1               	movwf	??_rotacionarParaDireita+2
  2762  0659  0834               	movf	?___fttol+3,w
  2763  065A  00C2               	movwf	??_rotacionarParaDireita+3
  2764  065B  3001               	movlw	1
  2765  065C  1283               	bcf	3,5	;RP0=0, select bank0
  2766  065D  1303               	bcf	3,6	;RP1=0, select bank0
  2767  065E  07CE               	addwf	rotacionarParaDireita@j,f
  2768  065F  1803               	skipnc
  2769  0660  0ACF               	incf	rotacionarParaDireita@j+1,f
  2770  0661  3000               	movlw	0
  2771  0662  07CF               	addwf	rotacionarParaDireita@j+1,f
  2772  0663  3000               	movlw	0
  2773  0664  024F               	subwf	rotacionarParaDireita@j+1,w
  2774  0665  3004               	movlw	4
  2775  0666  1903               	skipnz
  2776  0667  024E               	subwf	rotacionarParaDireita@j,w
  2777  0668  1C03               	skipc
  2778  0669  2E20               	goto	l1729
  2779  066A                     l1737:	
  2780  066A  3001               	movlw	1
  2781  066B  07CC               	addwf	rotacionarParaDireita@i,f
  2782  066C  1803               	skipnc
  2783  066D  0ACD               	incf	rotacionarParaDireita@i+1,f
  2784  066E  3000               	movlw	0
  2785  066F  07CD               	addwf	rotacionarParaDireita@i+1,f
  2786  0670  2E0F               	goto	l170
  2787  0671                     l1739:	
  2788                           
  2789                           ;stepper.c: 63: }
  2790                           ;stepper.c: 64: }
  2791                           ;stepper.c: 65: PORTD = 0x00;
  2792  0671  0188               	clrf	8	;volatile
  2793                           
  2794                           ;stepper.c: 66: setPosicaoAtual(posicaoDesejada);
  2795  0672  1683               	bsf	3,5	;RP0=1, select bank1
  2796  0673  1303               	bcf	3,6	;RP1=0, select bank1
  2797  0674  082B               	movf	(_posicaoDesejada+1)^(0+128),w
  2798  0675  00F2               	movwf	setPosicaoAtual@posicao_atual+1
  2799  0676  082A               	movf	_posicaoDesejada^(0+128),w
  2800  0677  00F1               	movwf	setPosicaoAtual@posicao_atual
  2801  0678  120A  158A  2778   	fcall	_setPosicaoAtual
  2802  067B  0008               	return
  2803  067C                     __end_of_rotacionarParaDireita:	
  2804                           
  2805                           	psect	text11
  2806  0F78                     __ptext11:	
  2807 ;; *************** function _setPosicaoAtual *****************
  2808 ;; Defined at:
  2809 ;;		line 20 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\stepper.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  posicao_atua    2    0[COMMON] unsigned int 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2823 ;;      Params:         2       0       0       0       0
  2824 ;;      Locals:         0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0
  2826 ;;      Totals:         2       0       0       0       0
  2827 ;;Total ram usage:        2 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_rotacionarParaDireita
  2833 ;;		_rotacionarParaEsquerda
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function _setPosicaoAtual
  2839  0F78                     _setPosicaoAtual:	
  2840                           
  2841                           ;stepper.c: 22: posicaoAtual = posicao_atual;
  2842                           
  2843                           ;incstack = 0
  2844                           ; Regs used in _setPosicaoAtual: [wreg]
  2845  0F78  0872               	movf	setPosicaoAtual@posicao_atual+1,w
  2846  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  2847  0F7A  1303               	bcf	3,6	;RP1=0, select bank1
  2848  0F7B  00B1               	movwf	(_posicaoAtual+1)^(0+128)
  2849  0F7C  0871               	movf	setPosicaoAtual@posicao_atual,w
  2850  0F7D  00B0               	movwf	_posicaoAtual^(0+128)
  2851  0F7E  0008               	return
  2852  0F7F                     __end_of_setPosicaoAtual:	
  2853                           
  2854                           	psect	text12
  2855  0FB0                     __ptext12:	
  2856 ;; *************** function ___lwtoft *****************
  2857 ;; Defined at:
  2858 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  c               2    8[COMMON] unsigned int 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  3    8[COMMON] float 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0, pclath, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2872 ;;      Params:         3       0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0
  2874 ;;      Temps:          1       0       0       0       0
  2875 ;;      Totals:         4       0       0       0       0
  2876 ;;Total ram usage:        4 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    1
  2879 ;; This function calls:
  2880 ;;		___ftpack
  2881 ;; This function is called by:
  2882 ;;		_rotacionarParaDireita
  2883 ;;		_rotacionarParaEsquerda
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           
  2888                           ;psect for function ___lwtoft
  2889  0FB0                     ___lwtoft:	
  2890                           
  2891                           ;incstack = 0
  2892                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2893  0FB0  0879               	movf	___lwtoft@c,w
  2894  0FB1  00F1               	movwf	___ftpack@arg
  2895  0FB2  087A               	movf	___lwtoft@c+1,w
  2896  0FB3  00F2               	movwf	___ftpack@arg+1
  2897  0FB4  01F3               	clrf	___ftpack@arg+2
  2898  0FB5  308E               	movlw	142
  2899  0FB6  00FC               	movwf	??___lwtoft
  2900  0FB7  087C               	movf	??___lwtoft,w
  2901  0FB8  00F4               	movwf	___ftpack@exp
  2902  0FB9  01F5               	clrf	___ftpack@sign
  2903  0FBA  120A  118A  224A   	fcall	___ftpack
  2904  0FBD  0871               	movf	?___ftpack,w
  2905  0FBE  00F9               	movwf	?___lwtoft
  2906  0FBF  0872               	movf	?___ftpack+1,w
  2907  0FC0  00FA               	movwf	?___lwtoft+1
  2908  0FC1  0873               	movf	?___ftpack+2,w
  2909  0FC2  00FB               	movwf	?___lwtoft+2
  2910  0FC3  0008               	return
  2911  0FC4                     __end_of___lwtoft:	
  2912                           
  2913                           	psect	text13
  2914  02B6                     __ptext13:	
  2915 ;; *************** function ___fttol *****************
  2916 ;; Defined at:
  2917 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  f1              3   17[BANK0 ] float 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  lval            4   26[BANK0 ] unsigned long 
  2922 ;;  exp1            1   30[BANK0 ] unsigned char 
  2923 ;;  sign1           1   25[BANK0 ] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  4   17[BANK0 ] long 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2933 ;;      Params:         0       4       0       0       0
  2934 ;;      Locals:         0       6       0       0       0
  2935 ;;      Temps:          0       4       0       0       0
  2936 ;;      Totals:         0      14       0       0       0
  2937 ;;Total ram usage:       14 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_rotacionarParaDireita
  2943 ;;		_rotacionarParaEsquerda
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           
  2948                           ;psect for function ___fttol
  2949  02B6                     ___fttol:	
  2950                           
  2951                           ;incstack = 0
  2952                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2953  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2954  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2955  02B8  0831               	movf	___fttol@f1,w
  2956  02B9  00B5               	movwf	??___fttol
  2957  02BA  0832               	movf	___fttol@f1+1,w
  2958  02BB  00B6               	movwf	??___fttol+1
  2959  02BC  0833               	movf	___fttol@f1+2,w
  2960  02BD  00B7               	movwf	??___fttol+2
  2961  02BE  1003               	clrc
  2962  02BF  0D36               	rlf	??___fttol+1,w
  2963  02C0  0D37               	rlf	??___fttol+2,w
  2964  02C1  00B8               	movwf	??___fttol+3
  2965  02C2  0838               	movf	??___fttol+3,w
  2966  02C3  00BE               	movwf	___fttol@exp1
  2967  02C4  083E               	movf	___fttol@exp1,w
  2968  02C5  1D03               	btfss	3,2
  2969  02C6  2AD0               	goto	l1471
  2970  02C7  3000               	movlw	0
  2971  02C8  00B4               	movwf	?___fttol+3
  2972  02C9  3000               	movlw	0
  2973  02CA  00B3               	movwf	?___fttol+2
  2974  02CB  3000               	movlw	0
  2975  02CC  00B2               	movwf	?___fttol+1
  2976  02CD  3000               	movlw	0
  2977  02CE  00B1               	movwf	?___fttol
  2978  02CF  0008               	return
  2979  02D0                     l1471:	
  2980  02D0  0831               	movf	___fttol@f1,w
  2981  02D1  00B5               	movwf	??___fttol
  2982  02D2  0832               	movf	___fttol@f1+1,w
  2983  02D3  00B6               	movwf	??___fttol+1
  2984  02D4  0833               	movf	___fttol@f1+2,w
  2985  02D5  00B7               	movwf	??___fttol+2
  2986  02D6  3017               	movlw	23
  2987  02D7                     u1375:	
  2988  02D7  1003               	clrc
  2989  02D8  0CB7               	rrf	??___fttol+2,f
  2990  02D9  0CB6               	rrf	??___fttol+1,f
  2991  02DA  0CB5               	rrf	??___fttol,f
  2992  02DB  3EFF               	addlw	-1
  2993  02DC  1D03               	skipz
  2994  02DD  2AD7               	goto	u1375
  2995  02DE  0835               	movf	??___fttol,w
  2996  02DF  00B8               	movwf	??___fttol+3
  2997  02E0  0838               	movf	??___fttol+3,w
  2998  02E1  00B9               	movwf	___fttol@sign1
  2999  02E2  17B2               	bsf	___fttol@f1+1,7
  3000  02E3  30FF               	movlw	255
  3001  02E4  05B1               	andwf	___fttol@f1,f
  3002  02E5  30FF               	movlw	255
  3003  02E6  05B2               	andwf	___fttol@f1+1,f
  3004  02E7  3000               	movlw	0
  3005  02E8  05B3               	andwf	___fttol@f1+2,f
  3006  02E9  0831               	movf	___fttol@f1,w
  3007  02EA  00BA               	movwf	___fttol@lval
  3008  02EB  0832               	movf	___fttol@f1+1,w
  3009  02EC  00BB               	movwf	___fttol@lval+1
  3010  02ED  0833               	movf	___fttol@f1+2,w
  3011  02EE  00BC               	movwf	___fttol@lval+2
  3012  02EF  01BD               	clrf	___fttol@lval+3
  3013  02F0  308E               	movlw	142
  3014  02F1  02BE               	subwf	___fttol@exp1,f
  3015  02F2  1FBE               	btfss	___fttol@exp1,7
  3016  02F3  2B12               	goto	l1491
  3017  02F4  083E               	movf	___fttol@exp1,w
  3018  02F5  3A80               	xorlw	128
  3019  02F6  3E8F               	addlw	143
  3020  02F7  1803               	skipnc
  3021  02F8  2B02               	goto	l1489
  3022  02F9  3000               	movlw	0
  3023  02FA  00B4               	movwf	?___fttol+3
  3024  02FB  3000               	movlw	0
  3025  02FC  00B3               	movwf	?___fttol+2
  3026  02FD  3000               	movlw	0
  3027  02FE  00B2               	movwf	?___fttol+1
  3028  02FF  3000               	movlw	0
  3029  0300  00B1               	movwf	?___fttol
  3030  0301  0008               	return
  3031  0302                     l1489:	
  3032  0302  3001               	movlw	1
  3033  0303                     u1405:	
  3034  0303  1003               	clrc
  3035  0304  0CBD               	rrf	___fttol@lval+3,f
  3036  0305  0CBC               	rrf	___fttol@lval+2,f
  3037  0306  0CBB               	rrf	___fttol@lval+1,f
  3038  0307  0CBA               	rrf	___fttol@lval,f
  3039  0308  3EFF               	addlw	-1
  3040  0309  1D03               	skipz
  3041  030A  2B03               	goto	u1405
  3042  030B  3001               	movlw	1
  3043  030C  00B5               	movwf	??___fttol
  3044  030D  0835               	movf	??___fttol,w
  3045  030E  07BE               	addwf	___fttol@exp1,f
  3046  030F  1903               	btfsc	3,2
  3047  0310  2B2D               	goto	l1499
  3048  0311  2B02               	goto	l1489
  3049  0312                     l1491:	
  3050  0312  3018               	movlw	24
  3051  0313  023E               	subwf	___fttol@exp1,w
  3052  0314  1C03               	skipc
  3053  0315  2B2A               	goto	l549
  3054  0316  3000               	movlw	0
  3055  0317  00B4               	movwf	?___fttol+3
  3056  0318  3000               	movlw	0
  3057  0319  00B3               	movwf	?___fttol+2
  3058  031A  3000               	movlw	0
  3059  031B  00B2               	movwf	?___fttol+1
  3060  031C  3000               	movlw	0
  3061  031D  00B1               	movwf	?___fttol
  3062  031E  0008               	return
  3063  031F                     l1497:	
  3064  031F  3001               	movlw	1
  3065  0320  00B5               	movwf	??___fttol
  3066  0321                     u1435:	
  3067  0321  1003               	clrc
  3068  0322  0DBA               	rlf	___fttol@lval,f
  3069  0323  0DBB               	rlf	___fttol@lval+1,f
  3070  0324  0DBC               	rlf	___fttol@lval+2,f
  3071  0325  0DBD               	rlf	___fttol@lval+3,f
  3072  0326  0BB5               	decfsz	??___fttol,f
  3073  0327  2B21               	goto	u1435
  3074  0328  3001               	movlw	1
  3075  0329  02BE               	subwf	___fttol@exp1,f
  3076  032A                     l549:	
  3077  032A  083E               	movf	___fttol@exp1,w
  3078  032B  1D03               	btfss	3,2
  3079  032C  2B1F               	goto	l1497
  3080  032D                     l1499:	
  3081  032D  0839               	movf	___fttol@sign1,w
  3082  032E  1903               	btfsc	3,2
  3083  032F  2B3B               	goto	l1503
  3084  0330  09BA               	comf	___fttol@lval,f
  3085  0331  09BB               	comf	___fttol@lval+1,f
  3086  0332  09BC               	comf	___fttol@lval+2,f
  3087  0333  09BD               	comf	___fttol@lval+3,f
  3088  0334  0ABA               	incf	___fttol@lval,f
  3089  0335  1903               	skipnz
  3090  0336  0ABB               	incf	___fttol@lval+1,f
  3091  0337  1903               	skipnz
  3092  0338  0ABC               	incf	___fttol@lval+2,f
  3093  0339  1903               	skipnz
  3094  033A  0ABD               	incf	___fttol@lval+3,f
  3095  033B                     l1503:	
  3096  033B  083D               	movf	___fttol@lval+3,w
  3097  033C  00B4               	movwf	?___fttol+3
  3098  033D  083C               	movf	___fttol@lval+2,w
  3099  033E  00B3               	movwf	?___fttol+2
  3100  033F  083B               	movf	___fttol@lval+1,w
  3101  0340  00B2               	movwf	?___fttol+1
  3102  0341  083A               	movf	___fttol@lval,w
  3103  0342  00B1               	movwf	?___fttol
  3104  0343  0008               	return
  3105  0344                     __end_of___fttol:	
  3106                           
  3107                           	psect	text14
  3108  03FC                     __ptext14:	
  3109 ;; *************** function ___ftmul *****************
  3110 ;; Defined at:
  3111 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  f1              3    0[BANK0 ] float 
  3114 ;;  f2              3    3[BANK0 ] float 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  3117 ;;  sign            1   15[BANK0 ] unsigned char 
  3118 ;;  cntr            1   14[BANK0 ] unsigned char 
  3119 ;;  exp             1   10[BANK0 ] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  3    0[BANK0 ] float 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, pclath, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         0       6       0       0       0
  3130 ;;      Locals:         0       6       0       0       0
  3131 ;;      Temps:          0       4       0       0       0
  3132 ;;      Totals:         0      16       0       0       0
  3133 ;;Total ram usage:       16 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    1
  3136 ;; This function calls:
  3137 ;;		___ftpack
  3138 ;; This function is called by:
  3139 ;;		_rotacionarParaDireita
  3140 ;;		_rotacionarParaEsquerda
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           
  3145                           ;psect for function ___ftmul
  3146  03FC                     ___ftmul:	
  3147                           
  3148                           ;incstack = 0
  3149                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3150  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  3151  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  3152  03FE  0820               	movf	___ftmul@f1,w
  3153  03FF  00A6               	movwf	??___ftmul
  3154  0400  0821               	movf	___ftmul@f1+1,w
  3155  0401  00A7               	movwf	??___ftmul+1
  3156  0402  0822               	movf	___ftmul@f1+2,w
  3157  0403  00A8               	movwf	??___ftmul+2
  3158  0404  1003               	clrc
  3159  0405  0D27               	rlf	??___ftmul+1,w
  3160  0406  0D28               	rlf	??___ftmul+2,w
  3161  0407  00A9               	movwf	??___ftmul+3
  3162  0408  0829               	movf	??___ftmul+3,w
  3163  0409  00AA               	movwf	___ftmul@exp
  3164  040A  082A               	movf	___ftmul@exp,w
  3165  040B  1D03               	btfss	3,2
  3166  040C  2C14               	goto	l1421
  3167  040D  3000               	movlw	0
  3168  040E  00A0               	movwf	?___ftmul
  3169  040F  3000               	movlw	0
  3170  0410  00A1               	movwf	?___ftmul+1
  3171  0411  3000               	movlw	0
  3172  0412  00A2               	movwf	?___ftmul+2
  3173  0413  0008               	return
  3174  0414                     l1421:	
  3175  0414  0823               	movf	___ftmul@f2,w
  3176  0415  00A6               	movwf	??___ftmul
  3177  0416  0824               	movf	___ftmul@f2+1,w
  3178  0417  00A7               	movwf	??___ftmul+1
  3179  0418  0825               	movf	___ftmul@f2+2,w
  3180  0419  00A8               	movwf	??___ftmul+2
  3181  041A  1003               	clrc
  3182  041B  0D27               	rlf	??___ftmul+1,w
  3183  041C  0D28               	rlf	??___ftmul+2,w
  3184  041D  00A9               	movwf	??___ftmul+3
  3185  041E  0829               	movf	??___ftmul+3,w
  3186  041F  00AF               	movwf	___ftmul@sign
  3187  0420  082F               	movf	___ftmul@sign,w
  3188  0421  1D03               	btfss	3,2
  3189  0422  2C2A               	goto	l1427
  3190  0423  3000               	movlw	0
  3191  0424  00A0               	movwf	?___ftmul
  3192  0425  3000               	movlw	0
  3193  0426  00A1               	movwf	?___ftmul+1
  3194  0427  3000               	movlw	0
  3195  0428  00A2               	movwf	?___ftmul+2
  3196  0429  0008               	return
  3197  042A                     l1427:	
  3198  042A  082F               	movf	___ftmul@sign,w
  3199  042B  3E7B               	addlw	123
  3200  042C  00A6               	movwf	??___ftmul
  3201  042D  0826               	movf	??___ftmul,w
  3202  042E  07AA               	addwf	___ftmul@exp,f
  3203  042F  0820               	movf	___ftmul@f1,w
  3204  0430  00A6               	movwf	??___ftmul
  3205  0431  0821               	movf	___ftmul@f1+1,w
  3206  0432  00A7               	movwf	??___ftmul+1
  3207  0433  0822               	movf	___ftmul@f1+2,w
  3208  0434  00A8               	movwf	??___ftmul+2
  3209  0435  3010               	movlw	16
  3210  0436                     u1245:	
  3211  0436  1003               	clrc
  3212  0437  0CA8               	rrf	??___ftmul+2,f
  3213  0438  0CA7               	rrf	??___ftmul+1,f
  3214  0439  0CA6               	rrf	??___ftmul,f
  3215  043A  3EFF               	addlw	-1
  3216  043B  1D03               	skipz
  3217  043C  2C36               	goto	u1245
  3218  043D  0826               	movf	??___ftmul,w
  3219  043E  00A9               	movwf	??___ftmul+3
  3220  043F  0829               	movf	??___ftmul+3,w
  3221  0440  00AF               	movwf	___ftmul@sign
  3222  0441  0823               	movf	___ftmul@f2,w
  3223  0442  00A6               	movwf	??___ftmul
  3224  0443  0824               	movf	___ftmul@f2+1,w
  3225  0444  00A7               	movwf	??___ftmul+1
  3226  0445  0825               	movf	___ftmul@f2+2,w
  3227  0446  00A8               	movwf	??___ftmul+2
  3228  0447  3010               	movlw	16
  3229  0448                     u1255:	
  3230  0448  1003               	clrc
  3231  0449  0CA8               	rrf	??___ftmul+2,f
  3232  044A  0CA7               	rrf	??___ftmul+1,f
  3233  044B  0CA6               	rrf	??___ftmul,f
  3234  044C  3EFF               	addlw	-1
  3235  044D  1D03               	skipz
  3236  044E  2C48               	goto	u1255
  3237  044F  0826               	movf	??___ftmul,w
  3238  0450  00A9               	movwf	??___ftmul+3
  3239  0451  0829               	movf	??___ftmul+3,w
  3240  0452  06AF               	xorwf	___ftmul@sign,f
  3241  0453  3080               	movlw	128
  3242  0454  00A6               	movwf	??___ftmul
  3243  0455  0826               	movf	??___ftmul,w
  3244  0456  05AF               	andwf	___ftmul@sign,f
  3245  0457  17A1               	bsf	___ftmul@f1+1,7
  3246  0458  17A4               	bsf	___ftmul@f2+1,7
  3247  0459  30FF               	movlw	255
  3248  045A  05A3               	andwf	___ftmul@f2,f
  3249  045B  30FF               	movlw	255
  3250  045C  05A4               	andwf	___ftmul@f2+1,f
  3251  045D  3000               	movlw	0
  3252  045E  05A5               	andwf	___ftmul@f2+2,f
  3253  045F  3000               	movlw	0
  3254  0460  00AB               	movwf	___ftmul@f3_as_product
  3255  0461  3000               	movlw	0
  3256  0462  00AC               	movwf	___ftmul@f3_as_product+1
  3257  0463  3000               	movlw	0
  3258  0464  00AD               	movwf	___ftmul@f3_as_product+2
  3259  0465  3007               	movlw	7
  3260  0466  00A6               	movwf	??___ftmul
  3261  0467  0826               	movf	??___ftmul,w
  3262  0468  00AE               	movwf	___ftmul@cntr
  3263  0469                     l1439:	
  3264  0469  1C20               	btfss	___ftmul@f1,0
  3265  046A  2C79               	goto	l1443
  3266  046B  0823               	movf	___ftmul@f2,w
  3267  046C  07AB               	addwf	___ftmul@f3_as_product,f
  3268  046D  0824               	movf	___ftmul@f2+1,w
  3269  046E  1103               	clrz
  3270  046F  1803               	skipnc
  3271  0470  0A24               	incf	___ftmul@f2+1,w
  3272  0471  1D03               	btfss	3,2
  3273  0472  07AC               	addwf	___ftmul@f3_as_product+1,f
  3274  0473  0825               	movf	___ftmul@f2+2,w
  3275  0474  1103               	clrz
  3276  0475  1803               	skipnc
  3277  0476  0A25               	incf	___ftmul@f2+2,w
  3278  0477  1D03               	btfss	3,2
  3279  0478  07AD               	addwf	___ftmul@f3_as_product+2,f
  3280  0479                     l1443:	
  3281  0479  3001               	movlw	1
  3282  047A                     u1285:	
  3283  047A  1003               	clrc
  3284  047B  0CA2               	rrf	___ftmul@f1+2,f
  3285  047C  0CA1               	rrf	___ftmul@f1+1,f
  3286  047D  0CA0               	rrf	___ftmul@f1,f
  3287  047E  3EFF               	addlw	-1
  3288  047F  1D03               	skipz
  3289  0480  2C7A               	goto	u1285
  3290  0481  3001               	movlw	1
  3291  0482                     u1295:	
  3292  0482  1003               	clrc
  3293  0483  0DA3               	rlf	___ftmul@f2,f
  3294  0484  0DA4               	rlf	___ftmul@f2+1,f
  3295  0485  0DA5               	rlf	___ftmul@f2+2,f
  3296  0486  3EFF               	addlw	-1
  3297  0487  1D03               	skipz
  3298  0488  2C82               	goto	u1295
  3299  0489  3001               	movlw	1
  3300  048A  02AE               	subwf	___ftmul@cntr,f
  3301  048B  1D03               	btfss	3,2
  3302  048C  2C69               	goto	l1439
  3303  048D  3009               	movlw	9
  3304  048E  00A6               	movwf	??___ftmul
  3305  048F  0826               	movf	??___ftmul,w
  3306  0490  00AE               	movwf	___ftmul@cntr
  3307  0491                     l1451:	
  3308  0491  1C20               	btfss	___ftmul@f1,0
  3309  0492  2CA1               	goto	l1455
  3310  0493  0823               	movf	___ftmul@f2,w
  3311  0494  07AB               	addwf	___ftmul@f3_as_product,f
  3312  0495  0824               	movf	___ftmul@f2+1,w
  3313  0496  1103               	clrz
  3314  0497  1803               	skipnc
  3315  0498  0A24               	incf	___ftmul@f2+1,w
  3316  0499  1D03               	btfss	3,2
  3317  049A  07AC               	addwf	___ftmul@f3_as_product+1,f
  3318  049B  0825               	movf	___ftmul@f2+2,w
  3319  049C  1103               	clrz
  3320  049D  1803               	skipnc
  3321  049E  0A25               	incf	___ftmul@f2+2,w
  3322  049F  1D03               	btfss	3,2
  3323  04A0  07AD               	addwf	___ftmul@f3_as_product+2,f
  3324  04A1                     l1455:	
  3325  04A1  3001               	movlw	1
  3326  04A2                     u1335:	
  3327  04A2  1003               	clrc
  3328  04A3  0CA2               	rrf	___ftmul@f1+2,f
  3329  04A4  0CA1               	rrf	___ftmul@f1+1,f
  3330  04A5  0CA0               	rrf	___ftmul@f1,f
  3331  04A6  3EFF               	addlw	-1
  3332  04A7  1D03               	skipz
  3333  04A8  2CA2               	goto	u1335
  3334  04A9  3001               	movlw	1
  3335  04AA                     u1345:	
  3336  04AA  1003               	clrc
  3337  04AB  0CAD               	rrf	___ftmul@f3_as_product+2,f
  3338  04AC  0CAC               	rrf	___ftmul@f3_as_product+1,f
  3339  04AD  0CAB               	rrf	___ftmul@f3_as_product,f
  3340  04AE  3EFF               	addlw	-1
  3341  04AF  1D03               	skipz
  3342  04B0  2CAA               	goto	u1345
  3343  04B1  3001               	movlw	1
  3344  04B2  02AE               	subwf	___ftmul@cntr,f
  3345  04B3  1D03               	btfss	3,2
  3346  04B4  2C91               	goto	l1451
  3347  04B5  082B               	movf	___ftmul@f3_as_product,w
  3348  04B6  00F1               	movwf	___ftpack@arg
  3349  04B7  082C               	movf	___ftmul@f3_as_product+1,w
  3350  04B8  00F2               	movwf	___ftpack@arg+1
  3351  04B9  082D               	movf	___ftmul@f3_as_product+2,w
  3352  04BA  00F3               	movwf	___ftpack@arg+2
  3353  04BB  082A               	movf	___ftmul@exp,w
  3354  04BC  00A6               	movwf	??___ftmul
  3355  04BD  0826               	movf	??___ftmul,w
  3356  04BE  00F4               	movwf	___ftpack@exp
  3357  04BF  082F               	movf	___ftmul@sign,w
  3358  04C0  00A7               	movwf	??___ftmul+1
  3359  04C1  0827               	movf	??___ftmul+1,w
  3360  04C2  00F5               	movwf	___ftpack@sign
  3361  04C3  120A  118A  224A   	fcall	___ftpack
  3362  04C6  0871               	movf	?___ftpack,w
  3363  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3364  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  3365  04C9  00A0               	movwf	?___ftmul
  3366  04CA  0872               	movf	?___ftpack+1,w
  3367  04CB  00A1               	movwf	?___ftmul+1
  3368  04CC  0873               	movf	?___ftpack+2,w
  3369  04CD  00A2               	movwf	?___ftmul+2
  3370  04CE  0008               	return
  3371  04CF                     __end_of___ftmul:	
  3372                           
  3373                           	psect	text15
  3374  0344                     __ptext15:	
  3375 ;; *************** function ___ftdiv *****************
  3376 ;; Defined at:
  3377 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  f2              3    1[BANK0 ] float 
  3380 ;;  f1              3    4[BANK0 ] float 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;  f3              3   12[BANK0 ] float 
  3383 ;;  sign            1   16[BANK0 ] unsigned char 
  3384 ;;  exp             1   15[BANK0 ] unsigned char 
  3385 ;;  cntr            1   11[BANK0 ] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  3    1[BANK0 ] float 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0, pclath, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3395 ;;      Params:         0       6       0       0       0
  3396 ;;      Locals:         0       6       0       0       0
  3397 ;;      Temps:          0       4       0       0       0
  3398 ;;      Totals:         0      16       0       0       0
  3399 ;;Total ram usage:       16 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    1
  3402 ;; This function calls:
  3403 ;;		___ftpack
  3404 ;; This function is called by:
  3405 ;;		_rotacionarParaDireita
  3406 ;;		_rotacionarParaEsquerda
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           
  3411                           ;psect for function ___ftdiv
  3412  0344                     ___ftdiv:	
  3413                           
  3414                           ;incstack = 0
  3415                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3416  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3418  0346  0824               	movf	___ftdiv@f1,w
  3419  0347  00A7               	movwf	??___ftdiv
  3420  0348  0825               	movf	___ftdiv@f1+1,w
  3421  0349  00A8               	movwf	??___ftdiv+1
  3422  034A  0826               	movf	___ftdiv@f1+2,w
  3423  034B  00A9               	movwf	??___ftdiv+2
  3424  034C  1003               	clrc
  3425  034D  0D28               	rlf	??___ftdiv+1,w
  3426  034E  0D29               	rlf	??___ftdiv+2,w
  3427  034F  00AA               	movwf	??___ftdiv+3
  3428  0350  082A               	movf	??___ftdiv+3,w
  3429  0351  00AF               	movwf	___ftdiv@exp
  3430  0352  082F               	movf	___ftdiv@exp,w
  3431  0353  1D03               	btfss	3,2
  3432  0354  2B5C               	goto	l1379
  3433  0355  3000               	movlw	0
  3434  0356  00A1               	movwf	?___ftdiv
  3435  0357  3000               	movlw	0
  3436  0358  00A2               	movwf	?___ftdiv+1
  3437  0359  3000               	movlw	0
  3438  035A  00A3               	movwf	?___ftdiv+2
  3439  035B  0008               	return
  3440  035C                     l1379:	
  3441  035C  0821               	movf	___ftdiv@f2,w
  3442  035D  00A7               	movwf	??___ftdiv
  3443  035E  0822               	movf	___ftdiv@f2+1,w
  3444  035F  00A8               	movwf	??___ftdiv+1
  3445  0360  0823               	movf	___ftdiv@f2+2,w
  3446  0361  00A9               	movwf	??___ftdiv+2
  3447  0362  1003               	clrc
  3448  0363  0D28               	rlf	??___ftdiv+1,w
  3449  0364  0D29               	rlf	??___ftdiv+2,w
  3450  0365  00AA               	movwf	??___ftdiv+3
  3451  0366  082A               	movf	??___ftdiv+3,w
  3452  0367  00B0               	movwf	___ftdiv@sign
  3453  0368  0830               	movf	___ftdiv@sign,w
  3454  0369  1D03               	btfss	3,2
  3455  036A  2B72               	goto	l1385
  3456  036B  3000               	movlw	0
  3457  036C  00A1               	movwf	?___ftdiv
  3458  036D  3000               	movlw	0
  3459  036E  00A2               	movwf	?___ftdiv+1
  3460  036F  3000               	movlw	0
  3461  0370  00A3               	movwf	?___ftdiv+2
  3462  0371  0008               	return
  3463  0372                     l1385:	
  3464  0372  3000               	movlw	0
  3465  0373  00AC               	movwf	___ftdiv@f3
  3466  0374  3000               	movlw	0
  3467  0375  00AD               	movwf	___ftdiv@f3+1
  3468  0376  3000               	movlw	0
  3469  0377  00AE               	movwf	___ftdiv@f3+2
  3470  0378  3089               	movlw	137
  3471  0379  0730               	addwf	___ftdiv@sign,w
  3472  037A  00A7               	movwf	??___ftdiv
  3473  037B  0827               	movf	??___ftdiv,w
  3474  037C  02AF               	subwf	___ftdiv@exp,f
  3475  037D  0824               	movf	___ftdiv@f1,w
  3476  037E  00A7               	movwf	??___ftdiv
  3477  037F  0825               	movf	___ftdiv@f1+1,w
  3478  0380  00A8               	movwf	??___ftdiv+1
  3479  0381  0826               	movf	___ftdiv@f1+2,w
  3480  0382  00A9               	movwf	??___ftdiv+2
  3481  0383  3010               	movlw	16
  3482  0384                     u1165:	
  3483  0384  1003               	clrc
  3484  0385  0CA9               	rrf	??___ftdiv+2,f
  3485  0386  0CA8               	rrf	??___ftdiv+1,f
  3486  0387  0CA7               	rrf	??___ftdiv,f
  3487  0388  3EFF               	addlw	-1
  3488  0389  1D03               	skipz
  3489  038A  2B84               	goto	u1165
  3490  038B  0827               	movf	??___ftdiv,w
  3491  038C  00AA               	movwf	??___ftdiv+3
  3492  038D  082A               	movf	??___ftdiv+3,w
  3493  038E  00B0               	movwf	___ftdiv@sign
  3494  038F  0821               	movf	___ftdiv@f2,w
  3495  0390  00A7               	movwf	??___ftdiv
  3496  0391  0822               	movf	___ftdiv@f2+1,w
  3497  0392  00A8               	movwf	??___ftdiv+1
  3498  0393  0823               	movf	___ftdiv@f2+2,w
  3499  0394  00A9               	movwf	??___ftdiv+2
  3500  0395  3010               	movlw	16
  3501  0396                     u1175:	
  3502  0396  1003               	clrc
  3503  0397  0CA9               	rrf	??___ftdiv+2,f
  3504  0398  0CA8               	rrf	??___ftdiv+1,f
  3505  0399  0CA7               	rrf	??___ftdiv,f
  3506  039A  3EFF               	addlw	-1
  3507  039B  1D03               	skipz
  3508  039C  2B96               	goto	u1175
  3509  039D  0827               	movf	??___ftdiv,w
  3510  039E  00AA               	movwf	??___ftdiv+3
  3511  039F  082A               	movf	??___ftdiv+3,w
  3512  03A0  06B0               	xorwf	___ftdiv@sign,f
  3513  03A1  3080               	movlw	128
  3514  03A2  00A7               	movwf	??___ftdiv
  3515  03A3  0827               	movf	??___ftdiv,w
  3516  03A4  05B0               	andwf	___ftdiv@sign,f
  3517  03A5  17A5               	bsf	___ftdiv@f1+1,7
  3518  03A6  30FF               	movlw	255
  3519  03A7  05A4               	andwf	___ftdiv@f1,f
  3520  03A8  30FF               	movlw	255
  3521  03A9  05A5               	andwf	___ftdiv@f1+1,f
  3522  03AA  3000               	movlw	0
  3523  03AB  05A6               	andwf	___ftdiv@f1+2,f
  3524  03AC  17A2               	bsf	___ftdiv@f2+1,7
  3525  03AD  30FF               	movlw	255
  3526  03AE  05A1               	andwf	___ftdiv@f2,f
  3527  03AF  30FF               	movlw	255
  3528  03B0  05A2               	andwf	___ftdiv@f2+1,f
  3529  03B1  3000               	movlw	0
  3530  03B2  05A3               	andwf	___ftdiv@f2+2,f
  3531  03B3  3018               	movlw	24
  3532  03B4  00A7               	movwf	??___ftdiv
  3533  03B5  0827               	movf	??___ftdiv,w
  3534  03B6  00AB               	movwf	___ftdiv@cntr
  3535  03B7                     l1399:	
  3536  03B7  3001               	movlw	1
  3537  03B8                     u1185:	
  3538  03B8  1003               	clrc
  3539  03B9  0DAC               	rlf	___ftdiv@f3,f
  3540  03BA  0DAD               	rlf	___ftdiv@f3+1,f
  3541  03BB  0DAE               	rlf	___ftdiv@f3+2,f
  3542  03BC  3EFF               	addlw	-1
  3543  03BD  1D03               	skipz
  3544  03BE  2BB8               	goto	u1185
  3545  03BF  0823               	movf	___ftdiv@f2+2,w
  3546  03C0  0226               	subwf	___ftdiv@f1+2,w
  3547  03C1  1D03               	skipz
  3548  03C2  2BC9               	goto	u1195
  3549  03C3  0822               	movf	___ftdiv@f2+1,w
  3550  03C4  0225               	subwf	___ftdiv@f1+1,w
  3551  03C5  1D03               	skipz
  3552  03C6  2BC9               	goto	u1195
  3553  03C7  0821               	movf	___ftdiv@f2,w
  3554  03C8  0224               	subwf	___ftdiv@f1,w
  3555  03C9                     u1195:	
  3556  03C9  1C03               	skipc
  3557  03CA  2BD6               	goto	l1407
  3558  03CB  0821               	movf	___ftdiv@f2,w
  3559  03CC  02A4               	subwf	___ftdiv@f1,f
  3560  03CD  0822               	movf	___ftdiv@f2+1,w
  3561  03CE  1C03               	skipc
  3562  03CF  0F22               	incfsz	___ftdiv@f2+1,w
  3563  03D0  02A5               	subwf	___ftdiv@f1+1,f
  3564  03D1  0823               	movf	___ftdiv@f2+2,w
  3565  03D2  1C03               	skipc
  3566  03D3  0A23               	incf	___ftdiv@f2+2,w
  3567  03D4  02A6               	subwf	___ftdiv@f1+2,f
  3568  03D5  142C               	bsf	___ftdiv@f3,0
  3569  03D6                     l1407:	
  3570  03D6  3001               	movlw	1
  3571  03D7                     u1205:	
  3572  03D7  1003               	clrc
  3573  03D8  0DA4               	rlf	___ftdiv@f1,f
  3574  03D9  0DA5               	rlf	___ftdiv@f1+1,f
  3575  03DA  0DA6               	rlf	___ftdiv@f1+2,f
  3576  03DB  3EFF               	addlw	-1
  3577  03DC  1D03               	skipz
  3578  03DD  2BD7               	goto	u1205
  3579  03DE  3001               	movlw	1
  3580  03DF  02AB               	subwf	___ftdiv@cntr,f
  3581  03E0  1D03               	btfss	3,2
  3582  03E1  2BB7               	goto	l1399
  3583  03E2  082C               	movf	___ftdiv@f3,w
  3584  03E3  00F1               	movwf	___ftpack@arg
  3585  03E4  082D               	movf	___ftdiv@f3+1,w
  3586  03E5  00F2               	movwf	___ftpack@arg+1
  3587  03E6  082E               	movf	___ftdiv@f3+2,w
  3588  03E7  00F3               	movwf	___ftpack@arg+2
  3589  03E8  082F               	movf	___ftdiv@exp,w
  3590  03E9  00A7               	movwf	??___ftdiv
  3591  03EA  0827               	movf	??___ftdiv,w
  3592  03EB  00F4               	movwf	___ftpack@exp
  3593  03EC  0830               	movf	___ftdiv@sign,w
  3594  03ED  00A8               	movwf	??___ftdiv+1
  3595  03EE  0828               	movf	??___ftdiv+1,w
  3596  03EF  00F5               	movwf	___ftpack@sign
  3597  03F0  120A  118A  224A   	fcall	___ftpack
  3598  03F3  0871               	movf	?___ftpack,w
  3599  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  3600  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  3601  03F6  00A1               	movwf	?___ftdiv
  3602  03F7  0872               	movf	?___ftpack+1,w
  3603  03F8  00A2               	movwf	?___ftdiv+1
  3604  03F9  0873               	movf	?___ftpack+2,w
  3605  03FA  00A3               	movwf	?___ftdiv+2
  3606  03FB  0008               	return
  3607  03FC                     __end_of___ftdiv:	
  3608                           
  3609                           	psect	text16
  3610  0069                     __ptext16:	
  3611 ;; *************** function ___awtoft *****************
  3612 ;; Defined at:
  3613 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  c               2    8[COMMON] int 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  sign            1    0[BANK0 ] unsigned char 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  3    8[COMMON] float 
  3620 ;; Registers used:
  3621 ;;		wreg, status,2, status,0, pclath, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3627 ;;      Params:         3       0       0       0       0
  3628 ;;      Locals:         0       1       0       0       0
  3629 ;;      Temps:          2       0       0       0       0
  3630 ;;      Totals:         5       1       0       0       0
  3631 ;;Total ram usage:        6 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    1
  3634 ;; This function calls:
  3635 ;;		___ftpack
  3636 ;; This function is called by:
  3637 ;;		_rotacionarParaDireita
  3638 ;;		_rotacionarParaEsquerda
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           
  3643                           ;psect for function ___awtoft
  3644  0069                     ___awtoft:	
  3645                           
  3646                           ;incstack = 0
  3647                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3648  0069  1283               	bcf	3,5	;RP0=0, select bank0
  3649  006A  1303               	bcf	3,6	;RP1=0, select bank0
  3650  006B  01A0               	clrf	___awtoft@sign
  3651  006C  1FFA               	btfss	___awtoft@c+1,7
  3652  006D  2875               	goto	l1369
  3653  006E  09F9               	comf	___awtoft@c,f
  3654  006F  09FA               	comf	___awtoft@c+1,f
  3655  0070  0AF9               	incf	___awtoft@c,f
  3656  0071  1903               	skipnz
  3657  0072  0AFA               	incf	___awtoft@c+1,f
  3658  0073  01A0               	clrf	___awtoft@sign
  3659  0074  0AA0               	incf	___awtoft@sign,f
  3660  0075                     l1369:	
  3661  0075  0879               	movf	___awtoft@c,w
  3662  0076  00F1               	movwf	___ftpack@arg
  3663  0077  087A               	movf	___awtoft@c+1,w
  3664  0078  00F2               	movwf	___ftpack@arg+1
  3665  0079  01F3               	clrf	___ftpack@arg+2
  3666  007A  308E               	movlw	142
  3667  007B  00FC               	movwf	??___awtoft
  3668  007C  087C               	movf	??___awtoft,w
  3669  007D  00F4               	movwf	___ftpack@exp
  3670  007E  0820               	movf	___awtoft@sign,w
  3671  007F  00FD               	movwf	??___awtoft+1
  3672  0080  087D               	movf	??___awtoft+1,w
  3673  0081  00F5               	movwf	___ftpack@sign
  3674  0082  120A  118A  224A   	fcall	___ftpack
  3675  0085  0871               	movf	?___ftpack,w
  3676  0086  00F9               	movwf	?___awtoft
  3677  0087  0872               	movf	?___ftpack+1,w
  3678  0088  00FA               	movwf	?___awtoft+1
  3679  0089  0873               	movf	?___ftpack+2,w
  3680  008A  00FB               	movwf	?___awtoft+2
  3681  008B  0008               	return
  3682  008C                     __end_of___awtoft:	
  3683                           
  3684                           	psect	text17
  3685  024A                     __ptext17:	
  3686 ;; *************** function ___ftpack *****************
  3687 ;; Defined at:
  3688 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  arg             3    0[COMMON] unsigned um
  3691 ;;  exp             1    3[COMMON] unsigned char 
  3692 ;;  sign            1    4[COMMON] unsigned char 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  3    0[COMMON] float 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3704 ;;      Params:         5       0       0       0       0
  3705 ;;      Locals:         0       0       0       0       0
  3706 ;;      Temps:          3       0       0       0       0
  3707 ;;      Totals:         8       0       0       0       0
  3708 ;;Total ram usage:        8 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		___awtoft
  3714 ;;		___ftdiv
  3715 ;;		___ftmul
  3716 ;;		___lwtoft
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           
  3721                           ;psect for function ___ftpack
  3722  024A                     ___ftpack:	
  3723                           
  3724                           ;incstack = 0
  3725                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3726  024A  0874               	movf	___ftpack@exp,w
  3727  024B  1903               	btfsc	3,2
  3728  024C  2A52               	goto	l1283
  3729  024D  0873               	movf	___ftpack@arg+2,w
  3730  024E  0472               	iorwf	___ftpack@arg+1,w
  3731  024F  0471               	iorwf	___ftpack@arg,w
  3732  0250  1D03               	skipz
  3733  0251  2A65               	goto	l1289
  3734  0252                     l1283:	
  3735  0252  3000               	movlw	0
  3736  0253  00F1               	movwf	?___ftpack
  3737  0254  3000               	movlw	0
  3738  0255  00F2               	movwf	?___ftpack+1
  3739  0256  3000               	movlw	0
  3740  0257  00F3               	movwf	?___ftpack+2
  3741  0258  0008               	return
  3742  0259                     l1287:	
  3743  0259  3001               	movlw	1
  3744  025A  00F6               	movwf	??___ftpack
  3745  025B  0876               	movf	??___ftpack,w
  3746  025C  07F4               	addwf	___ftpack@exp,f
  3747  025D  3001               	movlw	1
  3748  025E                     u1015:	
  3749  025E  1003               	clrc
  3750  025F  0CF3               	rrf	___ftpack@arg+2,f
  3751  0260  0CF2               	rrf	___ftpack@arg+1,f
  3752  0261  0CF1               	rrf	___ftpack@arg,f
  3753  0262  3EFF               	addlw	-1
  3754  0263  1D03               	skipz
  3755  0264  2A5E               	goto	u1015
  3756  0265                     l1289:	
  3757  0265  30FE               	movlw	254
  3758  0266  0573               	andwf	___ftpack@arg+2,w
  3759  0267  1903               	btfsc	3,2
  3760  0268  2A80               	goto	l458
  3761  0269  2A59               	goto	l1287
  3762  026A                     l1291:	
  3763  026A  3001               	movlw	1
  3764  026B  00F6               	movwf	??___ftpack
  3765  026C  0876               	movf	??___ftpack,w
  3766  026D  07F4               	addwf	___ftpack@exp,f
  3767  026E  3001               	movlw	1
  3768  026F  07F1               	addwf	___ftpack@arg,f
  3769  0270  3000               	movlw	0
  3770  0271  1803               	skipnc
  3771  0272  3001               	movlw	1
  3772  0273  07F2               	addwf	___ftpack@arg+1,f
  3773  0274  3000               	movlw	0
  3774  0275  1803               	skipnc
  3775  0276  3001               	movlw	1
  3776  0277  07F3               	addwf	___ftpack@arg+2,f
  3777  0278  3001               	movlw	1
  3778  0279                     u1035:	
  3779  0279  1003               	clrc
  3780  027A  0CF3               	rrf	___ftpack@arg+2,f
  3781  027B  0CF2               	rrf	___ftpack@arg+1,f
  3782  027C  0CF1               	rrf	___ftpack@arg,f
  3783  027D  3EFF               	addlw	-1
  3784  027E  1D03               	skipz
  3785  027F  2A79               	goto	u1035
  3786  0280                     l458:	
  3787  0280  30FF               	movlw	255
  3788  0281  0573               	andwf	___ftpack@arg+2,w
  3789  0282  1903               	btfsc	3,2
  3790  0283  2A8F               	goto	l1299
  3791  0284  2A6A               	goto	l1291
  3792  0285                     l1297:	
  3793  0285  3001               	movlw	1
  3794  0286  02F4               	subwf	___ftpack@exp,f
  3795  0287  3001               	movlw	1
  3796  0288                     u1055:	
  3797  0288  1003               	clrc
  3798  0289  0DF1               	rlf	___ftpack@arg,f
  3799  028A  0DF2               	rlf	___ftpack@arg+1,f
  3800  028B  0DF3               	rlf	___ftpack@arg+2,f
  3801  028C  3EFF               	addlw	-1
  3802  028D  1D03               	skipz
  3803  028E  2A88               	goto	u1055
  3804  028F                     l1299:	
  3805  028F  1BF2               	btfsc	___ftpack@arg+1,7
  3806  0290  2A95               	goto	l465
  3807  0291  3002               	movlw	2
  3808  0292  0274               	subwf	___ftpack@exp,w
  3809  0293  1803               	skipnc
  3810  0294  2A85               	goto	l1297
  3811  0295                     l465:	
  3812  0295  1874               	btfsc	___ftpack@exp,0
  3813  0296  2A9D               	goto	l466
  3814  0297  30FF               	movlw	255
  3815  0298  05F1               	andwf	___ftpack@arg,f
  3816  0299  307F               	movlw	127
  3817  029A  05F2               	andwf	___ftpack@arg+1,f
  3818  029B  30FF               	movlw	255
  3819  029C  05F3               	andwf	___ftpack@arg+2,f
  3820  029D                     l466:	
  3821  029D  1003               	clrc
  3822  029E  0CF4               	rrf	___ftpack@exp,f
  3823  029F  0874               	movf	___ftpack@exp,w
  3824  02A0  00F6               	movwf	??___ftpack
  3825  02A1  01F7               	clrf	??___ftpack+1
  3826  02A2  01F8               	clrf	??___ftpack+2
  3827  02A3  3010               	movlw	16
  3828  02A4                     u1095:	
  3829  02A4  1003               	clrc
  3830  02A5  0DF6               	rlf	??___ftpack,f
  3831  02A6  0DF7               	rlf	??___ftpack+1,f
  3832  02A7  0DF8               	rlf	??___ftpack+2,f
  3833  02A8  3EFF               	addlw	-1
  3834  02A9  1D03               	skipz
  3835  02AA  2AA4               	goto	u1095
  3836  02AB  0876               	movf	??___ftpack,w
  3837  02AC  04F1               	iorwf	___ftpack@arg,f
  3838  02AD  0877               	movf	??___ftpack+1,w
  3839  02AE  04F2               	iorwf	___ftpack@arg+1,f
  3840  02AF  0878               	movf	??___ftpack+2,w
  3841  02B0  04F3               	iorwf	___ftpack@arg+2,f
  3842  02B1  0875               	movf	___ftpack@sign,w
  3843  02B2  1903               	btfsc	3,2
  3844  02B3  0008               	return
  3845  02B4  17F3               	bsf	___ftpack@arg+2,7
  3846  02B5  0008               	return
  3847  02B6                     __end_of___ftpack:	
  3848                           
  3849                           	psect	text18
  3850  0046                     __ptext18:	
  3851 ;; *************** function _printLine *****************
  3852 ;; Defined at:
  3853 ;;		line 75 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\lcd.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  s               2    3[COMMON] PTR unsigned char 
  3856 ;;		 -> STR_5(4), main@posDesejada_str(10), main@posAtual_str(10), STR_2(13), 
  3857 ;;		 -> STR_1(17), 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3869 ;;      Params:         2       0       0       0       0
  3870 ;;      Locals:         0       0       0       0       0
  3871 ;;      Temps:          0       0       0       0       0
  3872 ;;      Totals:         2       0       0       0       0
  3873 ;;Total ram usage:        2 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    1
  3876 ;; This function calls:
  3877 ;;		_sendCharToLCD
  3878 ;; This function is called by:
  3879 ;;		_main
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           
  3884                           ;psect for function _printLine
  3885  0046                     _printLine:	
  3886  0046                     l1625:	
  3887                           ;lcd.c: 77: while(*s) {
  3888                           
  3889                           ;incstack = 0
  3890                           ; Regs used in _printLine: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3891                           
  3892  0046  0875               	movf	printLine@s+1,w
  3893  0047  1283               	bcf	3,5	;RP0=0, select bank0
  3894  0048  1303               	bcf	3,6	;RP1=0, select bank0
  3895  0049  00FF               	movwf	127
  3896  004A  0874               	movf	printLine@s,w
  3897  004B  0084               	movwf	4
  3898  004C  120A  118A  2004  120A  118A  	fcall	stringtab
  3899  0051  3A00               	xorlw	0
  3900  0052  1903               	btfsc	3,2
  3901  0053  0008               	return
  3902                           
  3903                           ;lcd.c: 78: sendCharToLCD(*s++);
  3904  0054  0875               	movf	printLine@s+1,w
  3905  0055  1283               	bcf	3,5	;RP0=0, select bank0
  3906  0056  1303               	bcf	3,6	;RP1=0, select bank0
  3907  0057  00FF               	movwf	127
  3908  0058  0874               	movf	printLine@s,w
  3909  0059  0084               	movwf	4
  3910  005A  120A  118A  2004  120A  118A  	fcall	stringtab
  3911  005F  120A  118A  2166  120A  118A  	fcall	_sendCharToLCD
  3912  0064  3001               	movlw	1
  3913  0065  07F4               	addwf	printLine@s,f
  3914  0066  1803               	skipnc
  3915  0067  0AF5               	incf	printLine@s+1,f
  3916  0068  2846               	goto	l1625
  3917  0069                     __end_of_printLine:	
  3918                           
  3919                           	psect	text19
  3920  0166                     __ptext19:	
  3921 ;; *************** function _sendCharToLCD *****************
  3922 ;; Defined at:
  3923 ;;		line 35 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\lcd.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;  ch              1    wreg     unsigned char 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  ch              1    2[COMMON] unsigned char 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, status,2, status,0
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3937 ;;      Params:         0       0       0       0       0
  3938 ;;      Locals:         1       0       0       0       0
  3939 ;;      Temps:          2       0       0       0       0
  3940 ;;      Totals:         3       0       0       0       0
  3941 ;;Total ram usage:        3 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_main
  3947 ;;		_printLine
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           
  3952                           ;psect for function _sendCharToLCD
  3953  0166                     _sendCharToLCD:	
  3954                           
  3955                           ;incstack = 0
  3956                           ; Regs used in _sendCharToLCD: [wreg+status,2+status,0]
  3957                           ;sendCharToLCD@ch stored from wreg
  3958  0166  00F3               	movwf	sendCharToLCD@ch
  3959                           
  3960                           ;lcd.c: 37: PORTB = (ch & 0xF0)>>4;
  3961  0167  0873               	movf	sendCharToLCD@ch,w
  3962  0168  00F1               	movwf	??_sendCharToLCD
  3963  0169  3004               	movlw	4
  3964  016A                     u1115:	
  3965  016A  1003               	clrc
  3966  016B  0CF1               	rrf	??_sendCharToLCD,f
  3967  016C  3EFF               	addlw	-1
  3968  016D  1D03               	skipz
  3969  016E  296A               	goto	u1115
  3970  016F  0871               	movf	??_sendCharToLCD,w
  3971  0170  390F               	andlw	15
  3972  0171  1283               	bcf	3,5	;RP0=0, select bank0
  3973  0172  1303               	bcf	3,6	;RP1=0, select bank0
  3974  0173  0086               	movwf	6	;volatile
  3975                           
  3976                           ;lcd.c: 38: PORTBbits.RB4 = 1;
  3977  0174  1606               	bsf	6,4	;volatile
  3978                           
  3979                           ;lcd.c: 39: PORTBbits.RB5 = 1;
  3980  0175  1686               	bsf	6,5	;volatile
  3981                           
  3982                           ;lcd.c: 40: _delay((unsigned long)((5)*(4000000/4000.0)));
  3983  0176  3007               	movlw	7
  3984  0177  00F2               	movwf	??_sendCharToLCD+1
  3985  0178  307D               	movlw	125
  3986  0179  00F1               	movwf	??_sendCharToLCD
  3987  017A                     u1967:	
  3988  017A  0BF1               	decfsz	??_sendCharToLCD,f
  3989  017B  297A               	goto	u1967
  3990  017C  0BF2               	decfsz	??_sendCharToLCD+1,f
  3991  017D  297A               	goto	u1967
  3992                           
  3993                           ;lcd.c: 41: PORTBbits.RB5 = 0;
  3994  017E  1283               	bcf	3,5	;RP0=0, select bank0
  3995  017F  1303               	bcf	3,6	;RP1=0, select bank0
  3996  0180  1286               	bcf	6,5	;volatile
  3997                           
  3998                           ;lcd.c: 43: _delay((unsigned long)((5)*(4000000/4000.0)));
  3999  0181  3007               	movlw	7
  4000  0182  00F2               	movwf	??_sendCharToLCD+1
  4001  0183  307D               	movlw	125
  4002  0184  00F1               	movwf	??_sendCharToLCD
  4003  0185                     u1977:	
  4004  0185  0BF1               	decfsz	??_sendCharToLCD,f
  4005  0186  2985               	goto	u1977
  4006  0187  0BF2               	decfsz	??_sendCharToLCD+1,f
  4007  0188  2985               	goto	u1977
  4008                           
  4009                           ;lcd.c: 45: PORTB = (ch & 0x0F);
  4010  0189  0873               	movf	sendCharToLCD@ch,w
  4011  018A  390F               	andlw	15
  4012  018B  1283               	bcf	3,5	;RP0=0, select bank0
  4013  018C  1303               	bcf	3,6	;RP1=0, select bank0
  4014  018D  0086               	movwf	6	;volatile
  4015                           
  4016                           ;lcd.c: 46: PORTBbits.RB4 = 1;
  4017  018E  1606               	bsf	6,4	;volatile
  4018                           
  4019                           ;lcd.c: 47: PORTBbits.RB5 = 1;
  4020  018F  1686               	bsf	6,5	;volatile
  4021                           
  4022                           ;lcd.c: 48: _delay((unsigned long)((5)*(4000000/4000.0)));
  4023  0190  3007               	movlw	7
  4024  0191  00F2               	movwf	??_sendCharToLCD+1
  4025  0192  307D               	movlw	125
  4026  0193  00F1               	movwf	??_sendCharToLCD
  4027  0194                     u1987:	
  4028  0194  0BF1               	decfsz	??_sendCharToLCD,f
  4029  0195  2994               	goto	u1987
  4030  0196  0BF2               	decfsz	??_sendCharToLCD+1,f
  4031  0197  2994               	goto	u1987
  4032                           
  4033                           ;lcd.c: 49: PORTBbits.RB5 = 0;
  4034  0198  1283               	bcf	3,5	;RP0=0, select bank0
  4035  0199  1303               	bcf	3,6	;RP1=0, select bank0
  4036  019A  1286               	bcf	6,5	;volatile
  4037                           
  4038                           ;lcd.c: 51: _delay((unsigned long)((5)*(4000000/4000.0)));
  4039  019B  3007               	movlw	7
  4040  019C  00F2               	movwf	??_sendCharToLCD+1
  4041  019D  307D               	movlw	125
  4042  019E  00F1               	movwf	??_sendCharToLCD
  4043  019F                     u1997:	
  4044  019F  0BF1               	decfsz	??_sendCharToLCD,f
  4045  01A0  299F               	goto	u1997
  4046  01A1  0BF2               	decfsz	??_sendCharToLCD+1,f
  4047  01A2  299F               	goto	u1997
  4048  01A3  0008               	return
  4049  01A4                     __end_of_sendCharToLCD:	
  4050                           
  4051                           	psect	text20
  4052  0F71                     __ptext20:	
  4053 ;; *************** function _getPosicaoDesejada *****************
  4054 ;; Defined at:
  4055 ;;		line 41 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\stepper.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  2    0[COMMON] unsigned int 
  4062 ;; Registers used:
  4063 ;;		wreg
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4069 ;;      Params:         2       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0
  4072 ;;      Totals:         2       0       0       0       0
  4073 ;;Total ram usage:        2 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_main
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           
  4083                           ;psect for function _getPosicaoDesejada
  4084  0F71                     _getPosicaoDesejada:	
  4085                           
  4086                           ;stepper.c: 43: return posicaoDesejada;
  4087                           
  4088                           ;incstack = 0
  4089                           ; Regs used in _getPosicaoDesejada: [wreg]
  4090  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  4091  0F72  1303               	bcf	3,6	;RP1=0, select bank1
  4092  0F73  082B               	movf	(_posicaoDesejada+1)^(0+128),w
  4093  0F74  00F2               	movwf	?_getPosicaoDesejada+1
  4094  0F75  082A               	movf	_posicaoDesejada^(0+128),w
  4095  0F76  00F1               	movwf	?_getPosicaoDesejada
  4096  0F77  0008               	return
  4097  0F78                     __end_of_getPosicaoDesejada:	
  4098                           
  4099                           	psect	text21
  4100  0F6A                     __ptext21:	
  4101 ;; *************** function _getPosicaoAtual *****************
  4102 ;; Defined at:
  4103 ;;		line 36 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\stepper.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;		None
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;		None
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  2    0[COMMON] unsigned int 
  4110 ;; Registers used:
  4111 ;;		wreg
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4117 ;;      Params:         2       0       0       0       0
  4118 ;;      Locals:         0       0       0       0       0
  4119 ;;      Temps:          0       0       0       0       0
  4120 ;;      Totals:         2       0       0       0       0
  4121 ;;Total ram usage:        2 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; This function calls:
  4124 ;;		Nothing
  4125 ;; This function is called by:
  4126 ;;		_main
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           
  4131                           ;psect for function _getPosicaoAtual
  4132  0F6A                     _getPosicaoAtual:	
  4133                           
  4134                           ;stepper.c: 38: return posicaoAtual;
  4135                           
  4136                           ;incstack = 0
  4137                           ; Regs used in _getPosicaoAtual: [wreg]
  4138  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  4139  0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  4140  0F6C  0831               	movf	(_posicaoAtual+1)^(0+128),w
  4141  0F6D  00F2               	movwf	?_getPosicaoAtual+1
  4142  0F6E  0830               	movf	_posicaoAtual^(0+128),w
  4143  0F6F  00F1               	movwf	?_getPosicaoAtual
  4144  0F70  0008               	return
  4145  0F71                     __end_of_getPosicaoAtual:	
  4146                           
  4147                           	psect	text22
  4148  0F63                     __ptext22:	
  4149 ;; *************** function _getChar *****************
  4150 ;; Defined at:
  4151 ;;		line 26 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\serial.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;		None
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;		None
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      unsigned char 
  4158 ;; Registers used:
  4159 ;;		wreg
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4165 ;;      Params:         0       0       0       0       0
  4166 ;;      Locals:         0       0       0       0       0
  4167 ;;      Temps:          0       0       0       0       0
  4168 ;;      Totals:         0       0       0       0       0
  4169 ;;Total ram usage:        0 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; This function calls:
  4172 ;;		Nothing
  4173 ;; This function is called by:
  4174 ;;		_main
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           
  4179                           ;psect for function _getChar
  4180  0F63                     _getChar:	
  4181  0F63                     l91:	
  4182                           ;serial.c: 28: while(!RCIF);
  4183                           
  4184                           ;incstack = 0
  4185                           ; Regs used in _getChar: [wreg]
  4186                           
  4187  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  4188  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  4189  0F65  1E8C               	btfss	12,5	;volatile
  4190  0F66  2F63               	goto	l91
  4191                           
  4192                           ;serial.c: 29: RCIF = 0;
  4193  0F67  128C               	bcf	12,5	;volatile
  4194                           
  4195                           ;serial.c: 30: return RCREG;
  4196  0F68  081A               	movf	26,w	;volatile
  4197  0F69  0008               	return
  4198  0F6A                     __end_of_getChar:	
  4199                           
  4200                           	psect	text23
  4201  0F5E                     __ptext23:	
  4202 ;; *************** function _clearDisplay *****************
  4203 ;; Defined at:
  4204 ;;		line 54 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\lcd.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;		None
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;		None
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  1    wreg      void 
  4211 ;; Registers used:
  4212 ;;		wreg, status,2, status,0, pclath, cstack
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4218 ;;      Params:         0       0       0       0       0
  4219 ;;      Locals:         0       0       0       0       0
  4220 ;;      Temps:          0       0       0       0       0
  4221 ;;      Totals:         0       0       0       0       0
  4222 ;;Total ram usage:        0 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; Hardware stack levels required when called:    1
  4225 ;; This function calls:
  4226 ;;		_sendCommand
  4227 ;; This function is called by:
  4228 ;;		_main
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           
  4233                           ;psect for function _clearDisplay
  4234  0F5E                     _clearDisplay:	
  4235                           
  4236                           ;lcd.c: 56: sendCommand(0x01);
  4237                           
  4238                           ;incstack = 0
  4239                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  4240  0F5E  3001               	movlw	1
  4241  0F5F  120A  118A  2128   	fcall	_sendCommand
  4242  0F62  0008               	return
  4243  0F63                     __end_of_clearDisplay:	
  4244                           
  4245                           	psect	text24
  4246  0128                     __ptext24:	
  4247 ;; *************** function _sendCommand *****************
  4248 ;; Defined at:
  4249 ;;		line 16 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\lcd.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  cmd             1    wreg     unsigned char 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  cmd             1    2[COMMON] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4263 ;;      Params:         0       0       0       0       0
  4264 ;;      Locals:         1       0       0       0       0
  4265 ;;      Temps:          2       0       0       0       0
  4266 ;;      Totals:         3       0       0       0       0
  4267 ;;Total ram usage:        3 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_setupDisplay
  4273 ;;		_clearDisplay
  4274 ;;		_setCursor
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           
  4279                           ;psect for function _sendCommand
  4280  0128                     _sendCommand:	
  4281                           
  4282                           ;incstack = 0
  4283                           ; Regs used in _sendCommand: [wreg+status,2+status,0]
  4284                           ;sendCommand@cmd stored from wreg
  4285  0128  00F3               	movwf	sendCommand@cmd
  4286                           
  4287                           ;lcd.c: 18: PORTB = (cmd & 0xF0)>>4;
  4288  0129  0873               	movf	sendCommand@cmd,w
  4289  012A  00F1               	movwf	??_sendCommand
  4290  012B  3004               	movlw	4
  4291  012C                     u1125:	
  4292  012C  1003               	clrc
  4293  012D  0CF1               	rrf	??_sendCommand,f
  4294  012E  3EFF               	addlw	-1
  4295  012F  1D03               	skipz
  4296  0130  292C               	goto	u1125
  4297  0131  0871               	movf	??_sendCommand,w
  4298  0132  390F               	andlw	15
  4299  0133  1283               	bcf	3,5	;RP0=0, select bank0
  4300  0134  1303               	bcf	3,6	;RP1=0, select bank0
  4301  0135  0086               	movwf	6	;volatile
  4302                           
  4303                           ;lcd.c: 19: PORTBbits.RB4 = 0;
  4304  0136  1206               	bcf	6,4	;volatile
  4305                           
  4306                           ;lcd.c: 20: PORTBbits.RB5 = 1;
  4307  0137  1686               	bsf	6,5	;volatile
  4308                           
  4309                           ;lcd.c: 21: _delay((unsigned long)((5)*(4000000/4000.0)));
  4310  0138  3007               	movlw	7
  4311  0139  00F2               	movwf	??_sendCommand+1
  4312  013A  307D               	movlw	125
  4313  013B  00F1               	movwf	??_sendCommand
  4314  013C                     u2007:	
  4315  013C  0BF1               	decfsz	??_sendCommand,f
  4316  013D  293C               	goto	u2007
  4317  013E  0BF2               	decfsz	??_sendCommand+1,f
  4318  013F  293C               	goto	u2007
  4319                           
  4320                           ;lcd.c: 22: PORTBbits.RB5 = 0;
  4321  0140  1283               	bcf	3,5	;RP0=0, select bank0
  4322  0141  1303               	bcf	3,6	;RP1=0, select bank0
  4323  0142  1286               	bcf	6,5	;volatile
  4324                           
  4325                           ;lcd.c: 24: _delay((unsigned long)((5)*(4000000/4000.0)));
  4326  0143  3007               	movlw	7
  4327  0144  00F2               	movwf	??_sendCommand+1
  4328  0145  307D               	movlw	125
  4329  0146  00F1               	movwf	??_sendCommand
  4330  0147                     u2017:	
  4331  0147  0BF1               	decfsz	??_sendCommand,f
  4332  0148  2947               	goto	u2017
  4333  0149  0BF2               	decfsz	??_sendCommand+1,f
  4334  014A  2947               	goto	u2017
  4335                           
  4336                           ;lcd.c: 26: PORTB = (cmd & 0x0F);
  4337  014B  0873               	movf	sendCommand@cmd,w
  4338  014C  390F               	andlw	15
  4339  014D  1283               	bcf	3,5	;RP0=0, select bank0
  4340  014E  1303               	bcf	3,6	;RP1=0, select bank0
  4341  014F  0086               	movwf	6	;volatile
  4342                           
  4343                           ;lcd.c: 27: PORTBbits.RB4 = 0;
  4344  0150  1206               	bcf	6,4	;volatile
  4345                           
  4346                           ;lcd.c: 28: PORTBbits.RB5 = 1;
  4347  0151  1686               	bsf	6,5	;volatile
  4348                           
  4349                           ;lcd.c: 29: _delay((unsigned long)((5)*(4000000/4000.0)));
  4350  0152  3007               	movlw	7
  4351  0153  00F2               	movwf	??_sendCommand+1
  4352  0154  307D               	movlw	125
  4353  0155  00F1               	movwf	??_sendCommand
  4354  0156                     u2027:	
  4355  0156  0BF1               	decfsz	??_sendCommand,f
  4356  0157  2956               	goto	u2027
  4357  0158  0BF2               	decfsz	??_sendCommand+1,f
  4358  0159  2956               	goto	u2027
  4359                           
  4360                           ;lcd.c: 30: PORTBbits.RB5 = 0;
  4361  015A  1283               	bcf	3,5	;RP0=0, select bank0
  4362  015B  1303               	bcf	3,6	;RP1=0, select bank0
  4363  015C  1286               	bcf	6,5	;volatile
  4364                           
  4365                           ;lcd.c: 32: _delay((unsigned long)((5)*(4000000/4000.0)));
  4366  015D  3007               	movlw	7
  4367  015E  00F2               	movwf	??_sendCommand+1
  4368  015F  307D               	movlw	125
  4369  0160  00F1               	movwf	??_sendCommand
  4370  0161                     u2037:	
  4371  0161  0BF1               	decfsz	??_sendCommand,f
  4372  0162  2961               	goto	u2037
  4373  0163  0BF2               	decfsz	??_sendCommand+1,f
  4374  0164  2961               	goto	u2037
  4375  0165  0008               	return
  4376  0166                     __end_of_sendCommand:	
  4377                           
  4378                           	psect	text25
  4379  0FDF                     __ptext25:	
  4380 ;; *************** function ___wmul *****************
  4381 ;; Defined at:
  4382 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  multiplier      2    0[COMMON] unsigned int 
  4385 ;;  multiplicand    2    2[COMMON] unsigned int 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  product         2    4[COMMON] unsigned int 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  2    0[COMMON] unsigned int 
  4390 ;; Registers used:
  4391 ;;		wreg, status,2, status,0
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4397 ;;      Params:         4       0       0       0       0
  4398 ;;      Locals:         2       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0
  4400 ;;      Totals:         6       0       0       0       0
  4401 ;;Total ram usage:        6 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_main
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           
  4411                           ;psect for function ___wmul
  4412  0FDF                     ___wmul:	
  4413                           
  4414                           ;incstack = 0
  4415                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4416  0FDF  01F5               	clrf	___wmul@product
  4417  0FE0  01F6               	clrf	___wmul@product+1
  4418  0FE1                     l1745:	
  4419  0FE1  1C71               	btfss	___wmul@multiplier,0
  4420  0FE2  2FE9               	goto	l297
  4421  0FE3  0873               	movf	___wmul@multiplicand,w
  4422  0FE4  07F5               	addwf	___wmul@product,f
  4423  0FE5  1803               	skipnc
  4424  0FE6  0AF6               	incf	___wmul@product+1,f
  4425  0FE7  0874               	movf	___wmul@multiplicand+1,w
  4426  0FE8  07F6               	addwf	___wmul@product+1,f
  4427  0FE9                     l297:	
  4428  0FE9  3001               	movlw	1
  4429  0FEA                     u1835:	
  4430  0FEA  1003               	clrc
  4431  0FEB  0DF3               	rlf	___wmul@multiplicand,f
  4432  0FEC  0DF4               	rlf	___wmul@multiplicand+1,f
  4433  0FED  3EFF               	addlw	-1
  4434  0FEE  1D03               	skipz
  4435  0FEF  2FEA               	goto	u1835
  4436  0FF0  3001               	movlw	1
  4437  0FF1                     u1845:	
  4438  0FF1  1003               	clrc
  4439  0FF2  0CF2               	rrf	___wmul@multiplier+1,f
  4440  0FF3  0CF1               	rrf	___wmul@multiplier,f
  4441  0FF4  3EFF               	addlw	-1
  4442  0FF5  1D03               	skipz
  4443  0FF6  2FF1               	goto	u1845
  4444  0FF7  0871               	movf	___wmul@multiplier,w
  4445  0FF8  0472               	iorwf	___wmul@multiplier+1,w
  4446  0FF9  1D03               	btfss	3,2
  4447  0FFA  2FE1               	goto	l1745
  4448  0FFB  0876               	movf	___wmul@product+1,w
  4449  0FFC  00F2               	movwf	?___wmul+1
  4450  0FFD  0875               	movf	___wmul@product,w
  4451  0FFE  00F1               	movwf	?___wmul
  4452  0FFF  0008               	return
  4453  1000                     __end_of___wmul:	
  4454  007E                     btemp	set	126	;btemp
  4455  007E                     wtemp0	set	126


Data Sizes:
    Strings     37
    Constant    10
    Data        10
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     79      80
    BANK1            80      0      18
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> main@posDesejada_str(BANK0[10]), main@posAtual_str(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    printLine@s	PTR unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[4]), main@posDesejada_str(BANK0[10]), main@posAtual_str(BANK0[10]), STR_2(CODE[13]), 
		 -> STR_1(CODE[17]), 

    input	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _main->_setupSerial
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setupSerial->___lldiv
    _setupDisplay->_sendCommand
    _setCursor->_sendCommand
    _rotacionarParaDireita->___awtoft
    ___lwtoft->___ftpack
    ___fttol->___awtoft
    ___ftmul->___lwtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _printLine->_sendCharToLCD
    _clearDisplay->_sendCommand

Critical Paths under _main in BANK0

    _main->_rotacionarParaDireita
    _sprintf->___lwmod
    _setupSerial->___lldiv
    _rotacionarParaDireita->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___awtoft

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0   12270
                                             48 BANK0     31    31      0
                             ___wmul
                       _clearDisplay
                            _getChar
                    _getPosicaoAtual
                 _getPosicaoDesejada
                          _printLine
              _rotacionarParaDireita
                      _sendCharToLCD
                          _setCursor
                 _setPosicaoDesejada
                       _setupDisplay
                        _setupSerial
                       _setupStepper
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1276
                                              1 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 COMMON     5     1      4
                                              0 BANK0      1     1      0
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setupStepper                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupSerial                                         10     8      2     366
                                              9 COMMON     4     4      0
                                              5 BANK0      6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _setupDisplay                                         2     2      0      44
                                              3 COMMON     2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (1) _setPosicaoDesejada                                   2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     423
                                              3 COMMON     4     3      1
                        _sendCommand
 ---------------------------------------------------------------------------------
 (1) _rotacionarParaDireita                               19    19      0    8937
                                             31 BANK0     17    17      0
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                    _setPosicaoAtual
 ---------------------------------------------------------------------------------
 (2) _setPosicaoAtual                                      2     0      2     128
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    1835
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     464
                                             17 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2245
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2199
                                              1 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1904
                                              8 COMMON     5     2      3
                                              0 BANK0      1     1      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _printLine                                            2     0      2     354
                                              3 COMMON     2     0      2
                      _sendCharToLCD
 ---------------------------------------------------------------------------------
 (1) _sendCharToLCD                                        3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _getPosicaoDesejada                                   2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getPosicaoAtual                                      2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getChar                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clearDisplay                                         0     0      0      44
                        _sendCommand
 ---------------------------------------------------------------------------------
 (2) _sendCommand                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _clearDisplay
     _sendCommand
   _getChar
   _getPosicaoAtual
   _getPosicaoDesejada
   _printLine
     _sendCharToLCD
   _rotacionarParaDireita
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _setPosicaoAtual
   _sendCharToLCD
   _setCursor
     _sendCommand
   _setPosicaoDesejada
   _setupDisplay
     _sendCommand
   _setupSerial
     ___lldiv
   _setupStepper
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      12       7       22.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      D       D       1      100.0%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6F      12        0.0%
ABS                  0      0      6F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Feb 02 05:04:04 2018

                                 pc 0002                         __CFG_CP$OFF 0000  
                                l91 0F63                                  _ch 006F  
                                fsr 0004                 ___wmul@multiplicand 0073  
            rotacionarParaDireita@i 004C              rotacionarParaDireita@j 004E  
                   sendCharToLCD@ch 0073                                 l170 060F  
                               l297 0FE9                                 l465 0295  
                               l466 029D                                 l458 0280  
                               l549 032A               __end_of_sendCharToLCD 01A4  
                      __CFG_CPD$OFF 0000                                 fsr0 0004  
                               indf 0000                        __CFG_IESO$ON 0000  
                      __CFG_LVP$OFF 0000                        ___ftdiv@cntr 002B  
        rotacionarParaDireita@F1704 00A4                        ___ftdiv@sign 0030  
                              l1421 0414                                l1407 03D6  
                              l1503 033B                                l1513 01FC  
                              l1291 026A                                l1283 0252  
                              l1451 0491                                l1443 0479  
                              l1427 042A                                l1523 0234  
                              l1515 020C                                l1541 00F4  
                              l1701 04D6                                l1287 0259  
                              l1455 04A1                                l1439 0469  
                              l1471 02D0                                l1527 0241  
                              l1543 0102                                l1703 059E  
                              l1625 0046                                l1297 0285  
                              l1289 0265                                l1369 0075  
                              l1385 0372                                l1633 0FCE  
                              l1553 0123                                l1299 028F  
                              l1379 035C                                l1491 0312  
                              l1571 00DC                                l1637 0FD5  
                              l1549 0118                                l1565 00C0  
                              l1399 03B7                                l1567 00CE  
                              l1575 00E7                                l1663 050C  
                              l1831 0790                                l1815 075B  
                              l1745 0FE1                                l1497 031F  
                              l1489 0302                                l1737 066A  
                              l1729 0620                                l1673 0523  
                              l1657 04F6                                l1499 032D  
                              l1739 0671                                l1691 0559  
                              l1835 07AE                                l1827 0782  
                              l1685 054A                                l1679 0529  
                              l1839 07C2                                l1777 06BE  
                              l1699 055D                                STR_1 001E  
                              STR_2 002F                                STR_3 0040  
                              STR_4 0040                                STR_5 003C  
                              u1015 025E                                u1115 016A  
                              u1035 0279                                u1125 012C  
                              u1205 03D7                                u2007 013C  
                              u1055 0288                                u2017 0147  
                              u2027 0156                                u2037 0161  
                              u1165 0384                                u1245 0436  
                              u1405 0303                                u1095 02A4  
                              u1175 0396                                u1335 04A2  
                              u1255 0448                                u1185 03B8  
                              u1345 04AA                                u1505 0223  
                              u1195 03C9                                u1435 0321  
                              u1515 0235                                u1285 047A  
                              u1295 0482                                u1375 02D7  
                              u1615 00C3                                u1545 00F7  
                              u1475 0200                                u1635 00D4  
                              u1565 0103                                u1645 00DD  
                              u1815 0615                                u1495 020E  
                              u1575 010F                                u1735 0540  
                              u1665 01D8                                u1585 0119  
                              u1835 0FEA                                u1845 0FF1  
                              u1875 0743                                u1957 0090  
                              u1967 017A                                u1977 0185  
                              u1987 0194                                _RCIF 0065  
                              u1997 019F                                _TXIF 0064  
                      __CFG_WRT$OFF 0000                       __CFG_FCMEN$ON 0000  
                              _main 067C                        ___ftpack@arg 0071  
                      ___ftpack@exp 0074                                btemp 007E  
                     __CFG_BOREN$ON 0000                                start 0001  
            ?_rotacionarParaDireita 0071                       __CFG_MCLRE$ON 0000  
                 ??_getPosicaoAtual 0073                        ___ftmul@cntr 002E  
                      ___ftmul@sign 002F                __end_of_clearDisplay 0F63  
                      ___fttol@exp1 003E                        ___fttol@lval 003A  
                             ?_main 0071                       __CFG_WDTE$OFF 0000  
                   __end_of___ftdiv 03FC                     __end_of___lldiv 024A  
                   __end_of___ftmul 04CF                     __end_of___fttol 0344  
                   __end_of___lwdiv 0128                     __end_of___lwmod 00EC  
                             _RCREG 001A                               _RCSTA 0018  
                             _SPBRG 0099                               _PORTB 0006  
                             _PORTD 0008                               _TRISB 0086  
                             _TRISD 0088                               _TXREG 0019  
                   __end_of_getChar 0F6A                       ___awtoft@sign 0020  
                   __end_of_dpowers 001E                        main@posAtual 0067  
                             _input 00A8                       ___ftpack@sign 0075  
                             main@i 006D                               pclath 000A  
                             status 0003                               wtemp0 007E  
                   __end_of_sprintf 05A3         rotacionarParaDireita@ciclos 004A  
       rotacionarParaEsquerda@F1713 00A0                     __initialization 07E3  
                      __end_of_main 07E3                        ?_sendCommand 0071  
                            ??_main 0050                       ___fttol@sign1 0039  
          __size_of_setPosicaoAtual 0007                    __end_of___awtoft 008C  
                  __end_of___ftpack 02B6                              _ANSELH 0189  
                  __end_of___lwtoft 0FC4          __end_of_getPosicaoDesejada 0F78  
        __end_of_setPosicaoDesejada 0F86                      __CFG_PWRTE$OFF 0000  
                            ___wmul 0FDF                           ??___ftdiv 0027  
                         ??___lldiv 0079                           ??___ftmul 0026  
                         ??___fttol 0035                           ??___lwdiv 0075  
                         ??___lwmod 007D                           ??_getChar 0071  
             ___ftmul@f3_as_product 002B                     setupSerial@FOSC 0027  
                      ?_setupSerial 0025                           ??_sprintf 0024  
           __end_of__initialization 07FC               __size_of_clearDisplay 0005  
                        ___ftdiv@f1 0024                          ___ftdiv@f2 0021  
                        ___ftdiv@f3 002C                          ___awtoft@c 0079  
                        ___ftmul@f1 0020                          ___ftmul@f2 0023  
                        ___fttol@f1 0031                      __pcstackCOMMON 0071  
                      __pidataBANK1 0F86                          ___lwtoft@c 0079  
     rotacionarParaDireita@fullStep 0043                        _clearDisplay 0F5E  
                   _getPosicaoAtual 0F6A                          __pbssBANK0 006F  
                        __pbssBANK1 00AA                   ??_setPosicaoAtual 0073  
           ??_rotacionarParaDireita 003F                          __pmaintext 067C  
                           ?___wmul 0071                  __size_of_setCursor 001B  
                         ?___awtoft 0079                           ?___ftpack 0071  
                         ?___lwtoft 0079                __size_of_sendCommand 003E  
  rotacionarParaDireita@anguloCiclo 0047                  __size_of_printLine 0023  
                        __stringtab 0004                 main@posDesejada_str 005D  
            __size_of_sendCharToLCD 003E                             ___ftdiv 0344  
                           ___lldiv 01EA                     __size_of___wmul 0021  
                           ___ftmul 03FC                             ___fttol 02B6  
                           ___lwdiv 00EC                             ___lwmod 00B8  
                        ??___awtoft 007C                          ??___ftpack 0076  
                           _getChar 0F63                             __ptext1 04CF  
                           __ptext2 00B8                             __ptext3 00EC  
                           __ptext4 0F90                             __ptext5 01A4  
                           __ptext6 01EA                             __ptext7 008C  
                           __ptext8 0F7F                             __ptext9 0FC4  
setPosicaoDesejada@posicao_desejada 0071                          ??___lwtoft 007C  
                           _dpowers 0014             __end_of_getPosicaoAtual 0F71  
                           _sprintf 04CF                end_of_initialization 07FC  
                 __end_of_setCursor 0FDF                __size_of_setupSerial 0046  
                   ___lldiv@divisor 0071                     ___lldiv@counter 0024  
                 __end_of_printLine 0069                       ?_setupDisplay 0071  
                _getPosicaoDesejada 0F71                  _setPosicaoDesejada 0F7F  
                         _PORTBbits 0006                       ?_setupStepper 0071  
                        _velocidade 00AE                       _sendCharToLCD 0166  
               ?_getPosicaoDesejada 0071                 ?_setPosicaoDesejada 0071  
                   _posicaoDesejada 00AA                           _TRISCbits 0087  
                       ___ftdiv@exp 002F                           _TXSTAbits 0098  
              ??_getPosicaoDesejada 0073                ??_setPosicaoDesejada 0073  
                    ??_setupDisplay 0074                         ___ftmul@exp 002A  
                    __end_of___wmul 1000                      ??_setupStepper 0071  
                       _BAUDCTLbits 0187                      ?_sendCharToLCD 0071  
                   _setPosicaoAtual 0F78                 start_initialization 07E3  
                  ?_getPosicaoAtual 0071      __size_of_rotacionarParaDireita 00D9  
          __CFG_FOSC$INTRC_NOCLKOUT 0000       __end_of_rotacionarParaDireita 067C  
                          ??___wmul 0075                          init_fetch0 0F9F  
                       __pdataBANK1 00A0                   setCursor@position 0077  
                 __size_of___awtoft 0023                   __size_of___ftpack 006C  
                         ___latbits 0002                   __size_of___lwtoft 0014  
                     __pcstackBANK0 0020                      sendCommand@cmd 0073  
                   setCursor@coluna 0074                         sprintf@flag 0028  
                       sprintf@prec 0029                           _delayTime 00AC  
                  ___lwdiv@dividend 0073                            ?___ftdiv 0021  
                          ?___lldiv 0071                            ?___ftmul 0020  
                          ?___fttol 0031                            ?___lwdiv 0071  
                          ?___lwmod 0079                       ??_sendCommand 0071  
           __end_of_setPosicaoAtual 0F7F                     ??_sendCharToLCD 0071  
                          ?_getChar 0071                           __pstrings 0004  
                  main@posAtual_str 0053                __end_of_setupDisplay 00B8  
                  ___lwdiv@quotient 0076                            ?_sprintf 0021  
              __end_of_setupStepper 0F9F                      ___wmul@product 0075  
                         _setCursor 0FC4                           _printLine 0046  
                       __stringbase 0013                   ___wmul@multiplier 0071  
                        printLine@s 0074                 __end_of_sendCommand 0166  
                         main@value 006B                       ??_setupSerial 007A  
                        ?_setCursor 0074                          ?_printLine 0074  
                  __size_of___ftdiv 00B8                    __size_of___lldiv 0060  
                  ?_setPosicaoAtual 0071                    __size_of___ftmul 00D3  
                  __size_of___fttol 008E                    __size_of___lwdiv 003C  
                  __size_of___lwmod 0034                            ___awtoft 0069  
                          ___ftpack 024A                  __end_of__stringtab 0014  
                  __size_of_getChar 0007                            ___lwtoft 0FB0  
               setupSerial@baudrate 0025                      setCursor@linha 0076  
                        sprintf@val 002A                     ___lwdiv@divisor 0071  
                   ___lwdiv@counter 0078                     main@posDesejada 0069  
                     ?_clearDisplay 0071                            __ptext10 05A3  
                          __ptext11 0F78                            __ptext20 0F71  
                          __ptext12 0FB0                            __ptext21 0F6A  
                          __ptext13 02B6                            __ptext22 0F63  
                          __ptext14 03FC                            __ptext23 0F5E  
                          __ptext15 0344                            __ptext24 0128  
                          __ptext16 0069                            __ptext25 0FDF  
                          __ptext17 024A                            __ptext18 0046  
                          __ptext19 0166                   __CFG_BOR4V$BOR40V 0000  
                  __size_of_sprintf 00D4                       __size_of_main 0167  
               __end_of_setupSerial 01EA         __size_of_getPosicaoDesejada 0007  
       __size_of_setPosicaoDesejada 0007                         _sendCommand 0128  
             __size_of_setupDisplay 002C        setPosicaoAtual@posicao_atual 0071  
                    ??_clearDisplay 0074                            init_ram0 0FA3  
             __size_of_setupStepper 000F                           sprintf@ap 0027  
                         sprintf@sp 002C            __size_of_getPosicaoAtual 0007  
                  ___lwmod@dividend 007B                    ___lldiv@dividend 0075  
                       ??_setCursor 0075                           stringcode 000E  
             _rotacionarParaDireita 05A3                        _setupDisplay 008C  
                      _posicaoAtual 00B0                         ??_printLine 0076  
                      _setupStepper 0F90                            sprintf@c 002D  
                          sprintf@f 0021                    ___lldiv@quotient 0020  
                   ___lwmod@divisor 0079                     ___lwmod@counter 0020  
                          stringdir 000E                            stringtab 0004  
                       _setupSerial 01A4  
