

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jul 02 23:10:54 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 1.45
    38                           ; Generated 16/11/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383                           
   384                           	psect	idataBANK1
   385  0DB3                     __pidataBANK1:	
   386                           
   387                           ;initializer for sentido_anti_horario_wave_step@F1722
   388  0DB3  3409               	retlw	9
   389  0DB4  3403               	retlw	3
   390  0DB5  3406               	retlw	6
   391  0DB6  340C               	retlw	12
   392                           
   393                           ;initializer for sentido_horario_wave_step@F1713
   394  0DB7  340C               	retlw	12
   395  0DB8  3406               	retlw	6
   396  0DB9  3403               	retlw	3
   397  0DBA  3409               	retlw	9
   398                           
   399                           ;initializer for _velocidade
   400  0DBB  3432               	retlw	50
   401  0DBC  3400               	retlw	0
   402  0DBD  3400               	retlw	0
   403  0DBE  3400               	retlw	0
   404  0008                     _PORTD	set	8
   405  0013                     _SSPBUF	set	19
   406  0014                     _SSPCON	set	20
   407  000C                     _PIR1bits	set	12
   408  000C                     _PIR1	set	12
   409  001E                     _ADRESH	set	30
   410  001F                     _ADCON0	set	31
   411  0008                     _PORTDbits	set	8
   412  0006                     _PORTBbits	set	6
   413  0091                     _SSPCON2	set	145
   414  0087                     _TRISCbits	set	135
   415  0094                     _SSPSTAT	set	148
   416  0093                     _SSPADD	set	147
   417  009E                     _ADRESL	set	158
   418  009F                     _ADCON1	set	159
   419  0088                     _TRISDbits	set	136
   420  0085                     _TRISAbits	set	133
   421  0086                     _TRISBbits	set	134
   422  0188                     _ANSELbits	set	392
   423  0189                     _ANSELH	set	393
   424                           
   425                           	psect	strings
   426  0800                     __pstrings:	
   427  0800                     stringtab:	
   428  0800                     __stringtab:	
   429  0800                     stringcode:	
   430                           ;	String table - string pointers are 1 byte each
   431                           
   432  0800                     stringdir:	
   433  0800  3008               	movlw	high stringdir
   434  0801  008A               	movwf	10
   435  0802  0804               	movf	4,w
   436  0803  0A84               	incf	4,f
   437  0804  0782               	addwf	2,f
   438  0805                     __stringbase:	
   439  0805  3400               	retlw	0
   440  0806                     __end_of__stringtab:	
   441  0806                     STR_2:	
   442  0806  3450               	retlw	80	;'P'
   443  0807  346F               	retlw	111	;'o'
   444  0808  3473               	retlw	115	;'s'
   445  0809  3469               	retlw	105	;'i'
   446  080A  3463               	retlw	99	;'c'
   447  080B  3461               	retlw	97	;'a'
   448  080C  346F               	retlw	111	;'o'
   449  080D  343A               	retlw	58	;':'
   450  080E  3420               	retlw	32	;' '
   451  080F  3400               	retlw	0
   452  0810                     STR_3:	
   453  0810  3441               	retlw	65	;'A'
   454  0811  346E               	retlw	110	;'n'
   455  0812  3467               	retlw	103	;'g'
   456  0813  343A               	retlw	58	;':'
   457  0814  3420               	retlw	32	;' '
   458  0815  3400               	retlw	0
   459  0816                     STR_4:	
   460  0816  3456               	retlw	86	;'V'
   461  0817  3465               	retlw	101	;'e'
   462  0818  346C               	retlw	108	;'l'
   463  0819  343A               	retlw	58	;':'
   464  081A  3420               	retlw	32	;' '
   465  081B  3400               	retlw	0
   466  081C                     STR_1:	
   467  081C  3450               	retlw	80	;'P'
   468  081D  3400               	retlw	0
   469                           
   470                           ; #config settings
   471  0000                     
   472                           	psect	cinit
   473  07E0                     start_initialization:	
   474  07E0                     __initialization:	
   475                           
   476                           ; Initialize objects allocated to BANK1
   477  07E0  1383               	bcf	3,7	;select IRP bank0
   478  07E1  30BE               	movlw	low (__pdataBANK1+12)
   479  07E2  00FD               	movwf	btemp+-1
   480  07E3  300D               	movlw	high __pidataBANK1
   481  07E4  00FE               	movwf	btemp
   482  07E5  30B3               	movlw	low __pidataBANK1
   483  07E6  00FF               	movwf	btemp+1
   484  07E7  30B2               	movlw	low __pdataBANK1
   485  07E8  0084               	movwf	4
   486  07E9  120A  158A  25E1  120A  118A  	fcall	init_ram0
   487                           
   488                           ; Clear objects allocated to BANK1
   489  07EE  30A0               	movlw	low __pbssBANK1
   490  07EF  0084               	movwf	4
   491  07F0  30B2               	movlw	low (__pbssBANK1+18)
   492  07F1  120A  158A  2599  120A  118A  	fcall	clear_ram0
   493                           
   494                           ; Clear objects allocated to BANK0
   495  07F6  304E               	movlw	low __pbssBANK0
   496  07F7  0084               	movwf	4
   497  07F8  3070               	movlw	low (__pbssBANK0+34)
   498  07F9  120A  158A  2599   	fcall	clear_ram0
   499  07FC                     end_of_initialization:	
   500                           ;End of C runtime variable initialization code
   501                           
   502  07FC                     __end_of__initialization:	
   503  07FC  0183               	clrf	3
   504  07FD  120A  118A  2B0C   	ljmp	_main	;jump to C main() function
   505                           
   506                           	psect	bssBANK0
   507  004E                     __pbssBANK0:	
   508  004E                     _j:	
   509  004E                     	ds	4
   510  0052                     _angulo_atual:	
   511  0052                     	ds	4
   512  0056                     _contador:	
   513  0056                     	ds	4
   514  005A                     _valor_anterior:	
   515  005A                     	ds	4
   516  005E                     _div:	
   517  005E                     	ds	4
   518  0062                     _posicaoAtual:	
   519  0062                     	ds	2
   520  0064                     _nibbleinf:	
   521  0064                     	ds	1
   522  0065                     _nibblesup:	
   523  0065                     	ds	1
   524  0066                     _p3:	
   525  0066                     	ds	1
   526  0067                     _ang3:	
   527  0067                     	ds	1
   528  0068                     _valor:	
   529  0068                     	ds	4
   530  006C                     _p2:	
   531  006C                     	ds	1
   532  006D                     _p1:	
   533  006D                     	ds	1
   534  006E                     _ang2:	
   535  006E                     	ds	1
   536  006F                     _ang1:	
   537  006F                     	ds	1
   538                           
   539                           	psect	bssBANK1
   540  00A0                     __pbssBANK1:	
   541  00A0                     _p:	
   542  00A0                     	ds	4
   543  00A4                     _i:	
   544  00A4                     	ds	4
   545  00A8                     _angulo:	
   546  00A8                     	ds	4
   547  00AC                     _delta:	
   548  00AC                     	ds	4
   549  00B0                     _posicaoDesejada:	
   550  00B0                     	ds	2
   551                           
   552                           	psect	dataBANK1
   553  00B2                     __pdataBANK1:	
   554  00B2                     sentido_anti_horario_wave_step@F1722:	
   555  00B2                     	ds	4
   556  00B6                     sentido_horario_wave_step@F1713:	
   557  00B6                     	ds	4
   558  00BA                     _velocidade:	
   559  00BA                     	ds	4
   560                           
   561                           	psect	inittext
   562  0DDD                     init_fetch0:	
   563                           ;	Called with low address in FSR and high address in W
   564                           
   565  0DDD  087E               	movf	126,w
   566  0DDE  008A               	movwf	10
   567  0DDF  087F               	movf	127,w
   568  0DE0  0082               	movwf	2
   569  0DE1                     init_ram0:	
   570                           ;Called with:
   571                           ;	high address of idata address in btemp 
   572                           ;	low address of idata address in btemp+1 
   573                           ;	low address of data in FSR
   574                           ;	high address + 1 of data in btemp-1
   575                           
   576  0DE1  25DD  120A  158A   	fcall	init_fetch0
   577  0DE4  0080               	movwf	0
   578  0DE5  0A84               	incf	4,f
   579  0DE6  0804               	movf	4,w
   580  0DE7  067D               	xorwf	125,w
   581  0DE8  1903               	btfsc	3,2
   582  0DE9  3400               	retlw	0
   583  0DEA  0AFF               	incf	127,f
   584  0DEB  1903               	btfsc	3,2
   585  0DEC  0AFE               	incf	126,f
   586  0DED  2DE1               	goto	init_ram0
   587                           
   588                           	psect	clrtext
   589  0D99                     clear_ram0:	
   590                           ;	Called with FSR containing the base address, and
   591                           ;	W with the last address+1
   592                           
   593  0D99  0064               	clrwdt	;clear the watchdog before getting into this loop
   594  0D9A                     clrloop0:	
   595  0D9A  0180               	clrf	0	;clear RAM location pointed to by FSR
   596  0D9B  0A84               	incf	4,f	;increment pointer
   597  0D9C  0604               	xorwf	4,w	;XOR with final address
   598  0D9D  1903               	btfsc	3,2	;have we reached the end yet?
   599  0D9E  3400               	retlw	0	;all done for this memory range, return
   600  0D9F  0604               	xorwf	4,w	;XOR again to restore value
   601  0DA0  2D9A               	goto	clrloop0	;do the next byte
   602                           
   603                           	psect	cstackCOMMON
   604  0070                     __pcstackCOMMON:	
   605  0070                     ?_displaySendCmd:	
   606  0070                     ?_displaySendData:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_serialStart:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ??_serialStart:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_serialWrite:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ??_serialWrite:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_serialStop:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ??_serialStop:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_setupStepper:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ??_setupStepper:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_veloc:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_calculaDelta:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_setupDisplay:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_displaySendString:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_clearDisplay:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_apresenta:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_serialWait:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ??_serialWait:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?___bmul:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_main:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?___wmul:	
   664                           ; 2 bytes @ 0x0
   665                           
   666  0070                     ?___lmul:	
   667                           ; 2 bytes @ 0x0
   668                           
   669  0070                     serialWrite@data:	
   670                           ; 4 bytes @ 0x0
   671                           
   672  0070                     ___bmul@multiplicand:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ___wmul@multiplier:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ___lmul@multiplier:	
   679                           ; 2 bytes @ 0x0
   680                           
   681                           
   682                           ; 4 bytes @ 0x0
   683  0070                     	ds	1
   684  0071                     ??_displaySendCmd:	
   685  0071                     ??_displaySendData:	
   686                           ; 1 bytes @ 0x1
   687                           
   688  0071                     ??___bmul:	
   689                           ; 1 bytes @ 0x1
   690                           
   691                           
   692                           ; 1 bytes @ 0x1
   693  0071                     	ds	1
   694  0072                     ___bmul@product:	
   695  0072                     ___wmul@multiplicand:	
   696                           ; 1 bytes @ 0x2
   697                           
   698                           
   699                           ; 2 bytes @ 0x2
   700  0072                     	ds	1
   701  0073                     displaySendCmd@data:	
   702  0073                     displaySendData@data:	
   703                           ; 1 bytes @ 0x3
   704                           
   705  0073                     ___bmul@multiplier:	
   706                           ; 1 bytes @ 0x3
   707                           
   708                           
   709                           ; 1 bytes @ 0x3
   710  0073                     	ds	1
   711  0074                     ??___wmul:	
   712  0074                     displaySendCmd@data_l:	
   713                           ; 1 bytes @ 0x4
   714                           
   715  0074                     displaySendData@data_l:	
   716                           ; 1 bytes @ 0x4
   717                           
   718  0074                     ___wmul@product:	
   719                           ; 1 bytes @ 0x4
   720                           
   721  0074                     ___lmul@multiplicand:	
   722                           ; 2 bytes @ 0x4
   723                           
   724                           
   725                           ; 4 bytes @ 0x4
   726  0074                     	ds	1
   727  0075                     displaySendCmd@data_u:	
   728  0075                     displaySendData@data_u:	
   729                           ; 1 bytes @ 0x5
   730                           
   731                           
   732                           ; 1 bytes @ 0x5
   733  0075                     	ds	1
   734  0076                     ??_veloc:	
   735  0076                     ??_setupDisplay:	
   736                           ; 1 bytes @ 0x6
   737                           
   738  0076                     ??_displaySendString:	
   739                           ; 1 bytes @ 0x6
   740                           
   741  0076                     ??_clearDisplay:	
   742                           ; 1 bytes @ 0x6
   743                           
   744  0076                     ??_apresenta:	
   745                           ; 1 bytes @ 0x6
   746                           
   747                           
   748                           ; 1 bytes @ 0x6
   749  0076                     	ds	1
   750  0077                     displaySendString@str:	
   751                           
   752                           ; 1 bytes @ 0x7
   753  0077                     	ds	1
   754  0078                     ??___lmul:	
   755                           
   756                           ; 1 bytes @ 0x8
   757  0078                     	ds	1
   758  0079                     ___lmul@product:	
   759                           
   760                           ; 4 bytes @ 0x9
   761  0079                     	ds	4
   762  007D                     ??___lldiv:	
   763                           
   764                           ; 1 bytes @ 0xD
   765  007D                     	ds	1
   766  007E                     ??_sentido_anti_horario_wave_step:	
   767  007E                     ??_sentido_horario_wave_step:	
   768                           ; 1 bytes @ 0xE
   769                           
   770                           
   771                           	psect	cstackBANK0
   772  0020                     __pcstackBANK0:	
   773                           ; 1 bytes @ 0xE
   774                           
   775  0020                     ?___lldiv:	
   776  0020                     ___lldiv@divisor:	
   777                           ; 4 bytes @ 0x0
   778                           
   779                           
   780                           ; 4 bytes @ 0x0
   781  0020                     	ds	4
   782  0024                     ___lldiv@dividend:	
   783                           
   784                           ; 4 bytes @ 0x4
   785  0024                     	ds	4
   786  0028                     ___lldiv@quotient:	
   787                           
   788                           ; 4 bytes @ 0x8
   789  0028                     	ds	4
   790  002C                     ___lldiv@counter:	
   791                           
   792                           ; 1 bytes @ 0xC
   793  002C                     	ds	1
   794  002D                     ?_setupSerial:	
   795  002D                     ?_sentido_anti_horario_wave_step:	
   796                           ; 1 bytes @ 0xD
   797                           
   798  002D                     ?_sentido_horario_wave_step:	
   799                           ; 1 bytes @ 0xD
   800                           
   801  002D                     setupSerial@clock:	
   802                           ; 1 bytes @ 0xD
   803                           
   804  002D                     sentido_horario_wave_step@g:	
   805                           ; 4 bytes @ 0xD
   806                           
   807  002D                     sentido_anti_horario_wave_step@g:	
   808                           ; 4 bytes @ 0xD
   809                           
   810                           
   811                           ; 4 bytes @ 0xD
   812  002D                     	ds	4
   813  0031                     ??_setupSerial:	
   814  0031                     sentido_horario_wave_step@x:	
   815                           ; 1 bytes @ 0x11
   816                           
   817  0031                     sentido_anti_horario_wave_step@x:	
   818                           ; 4 bytes @ 0x11
   819                           
   820                           
   821                           ; 4 bytes @ 0x11
   822  0031                     	ds	4
   823  0035                     sentido_horario_wave_step@move_horario:	
   824  0035                     sentido_anti_horario_wave_step@move_anti_horario:	
   825                           ; 4 bytes @ 0x15
   826                           
   827                           
   828                           ; 4 bytes @ 0x15
   829  0035                     	ds	4
   830  0039                     ??_calculaDelta:	
   831                           
   832                           ; 1 bytes @ 0x19
   833  0039                     	ds	11
   834  0044                     calculaDelta@polaridade:	
   835                           
   836                           ; 1 bytes @ 0x24
   837  0044                     	ds	1
   838  0045                     ??_main:	
   839                           
   840                           ; 1 bytes @ 0x25
   841  0045                     	ds	8
   842  004D                     main@polaridade:	
   843                           
   844                           ; 1 bytes @ 0x2D
   845  004D                     	ds	1
   846                           
   847                           	psect	maintext
   848  030C                     __pmaintext:	
   849 ;;
   850 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   851 ;;
   852 ;; *************** function _main *****************
   853 ;; Defined at:
   854 ;;		line 57 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\Main.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  polaridade      1   45[BANK0 ] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  2  120[None  ] int 
   861 ;; Registers used:
   862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : B00/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         0       0       0       0       0
   869 ;;      Locals:         0       1       0       0       0
   870 ;;      Temps:          0       8       0       0       0
   871 ;;      Totals:         0       9       0       0       0
   872 ;;Total ram usage:        9 bytes
   873 ;; Hardware stack levels required when called:    5
   874 ;; This function calls:
   875 ;;		___lldiv
   876 ;;		___lmul
   877 ;;		_calculaDelta
   878 ;;		_clearDisplay
   879 ;;		_displaySendCmd
   880 ;;		_displaySendString
   881 ;;		_setupDisplay
   882 ;;		_setupSerial
   883 ;;		_setupStepper
   884 ;;		_veloc
   885 ;; This function is called by:
   886 ;;		Startup code after reset
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           
   891                           ;psect for function _main
   892  030C                     _main:	
   893                           
   894                           ;Main.c: 60: TRISBbits.TRISB2 = 1;
   895                           
   896                           ;incstack = 0
   897                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   898  030C  1683               	bsf	3,5	;RP0=1, select bank1
   899  030D  1303               	bcf	3,6	;RP1=0, select bank1
   900  030E  1506               	bsf	6,2	;volatile
   901                           
   902                           ;Main.c: 63: ANSELH=0x00;
   903  030F  1683               	bsf	3,5	;RP0=1, select bank3
   904  0310  1703               	bsf	3,6	;RP1=1, select bank3
   905  0311  0189               	clrf	9	;volatile
   906                           
   907                           ;Main.c: 66: TRISAbits.TRISA2 = 1;
   908  0312  1683               	bsf	3,5	;RP0=1, select bank1
   909  0313  1303               	bcf	3,6	;RP1=0, select bank1
   910  0314  1505               	bsf	5,2	;volatile
   911                           
   912                           ;Main.c: 69: TRISDbits.TRISD0 = 0;
   913  0315  1008               	bcf	8,0	;volatile
   914                           
   915                           ;Main.c: 70: TRISDbits.TRISD1 = 0;
   916  0316  1088               	bcf	8,1	;volatile
   917                           
   918                           ;Main.c: 71: TRISDbits.TRISD2 = 0;
   919  0317  1108               	bcf	8,2	;volatile
   920                           
   921                           ;Main.c: 72: TRISDbits.TRISD3 = 0;
   922  0318  1188               	bcf	8,3	;volatile
   923                           
   924                           ;Main.c: 73: ANSELbits.ANS2 = 1;
   925  0319  1683               	bsf	3,5	;RP0=1, select bank3
   926  031A  1703               	bsf	3,6	;RP1=1, select bank3
   927  031B  1508               	bsf	8,2	;volatile
   928                           
   929                           ;Main.c: 76: PORTBbits.RB2 = 0;
   930  031C  1283               	bcf	3,5	;RP0=0, select bank0
   931  031D  1303               	bcf	3,6	;RP1=0, select bank0
   932  031E  1106               	bcf	6,2	;volatile
   933                           
   934                           ;Main.c: 77: PORTDbits.RD0 = 0;
   935  031F  1008               	bcf	8,0	;volatile
   936                           
   937                           ;Main.c: 78: PORTDbits.RD1 = 0;
   938  0320  1088               	bcf	8,1	;volatile
   939                           
   940                           ;Main.c: 79: PORTDbits.RD2 = 0;
   941  0321  1108               	bcf	8,2	;volatile
   942                           
   943                           ;Main.c: 80: PORTDbits.RD3 = 0;
   944  0322  1188               	bcf	8,3	;volatile
   945                           
   946                           ;Main.c: 83: setupStepper();
   947  0323  120A  158A  2658  120A  118A  	fcall	_setupStepper
   948                           
   949                           ;Main.c: 84: setupSerial(100000);
   950  0328  3000               	movlw	0
   951  0329  1283               	bcf	3,5	;RP0=0, select bank0
   952  032A  1303               	bcf	3,6	;RP1=0, select bank0
   953  032B  00B0               	movwf	setupSerial@clock+3
   954  032C  3001               	movlw	1
   955  032D  00AF               	movwf	setupSerial@clock+2
   956  032E  3086               	movlw	134
   957  032F  00AE               	movwf	setupSerial@clock+1
   958  0330  30A0               	movlw	160
   959  0331  00AD               	movwf	setupSerial@clock
   960  0332  120A  158A  2621  120A  118A  	fcall	_setupSerial
   961                           
   962                           ;Main.c: 85: setupDisplay();
   963  0337  120A  158A  25EE  120A  118A  	fcall	_setupDisplay
   964                           
   965                           ;Main.c: 87: displaySendCmd(0xC0);
   966  033C  30C0               	movlw	192
   967  033D  120A  158A  2693  120A  118A  	fcall	_displaySendCmd
   968                           
   969                           ;Main.c: 88: _delay((unsigned long)((5000)*(4000000/4000.0)));
   970  0342  301A               	movlw	26
   971  0343  1283               	bcf	3,5	;RP0=0, select bank0
   972  0344  1303               	bcf	3,6	;RP1=0, select bank0
   973  0345  00C7               	movwf	??_main+2
   974  0346  305E               	movlw	94
   975  0347  00C6               	movwf	??_main+1
   976  0348  306D               	movlw	109
   977  0349  00C5               	movwf	??_main
   978  034A                     u1237:	
   979  034A  0BC5               	decfsz	??_main,f
   980  034B  2B4A               	goto	u1237
   981  034C  0BC6               	decfsz	??_main+1,f
   982  034D  2B4A               	goto	u1237
   983  034E  0BC7               	decfsz	??_main+2,f
   984  034F  2B4A               	goto	u1237
   985  0350  2B51               	nop2
   986                           
   987                           ;Main.c: 90: clearDisplay();
   988  0351  120A  158A  258D  120A  118A  	fcall	_clearDisplay
   989                           
   990                           ;Main.c: 93: nibblesup = 0;
   991  0356  1283               	bcf	3,5	;RP0=0, select bank0
   992  0357  1303               	bcf	3,6	;RP1=0, select bank0
   993  0358  01E5               	clrf	_nibblesup
   994                           
   995                           ;Main.c: 94: nibbleinf = 0;
   996  0359  01E4               	clrf	_nibbleinf
   997                           
   998                           ;Main.c: 95: ADCON0 = 0x49;
   999  035A  3049               	movlw	73
  1000  035B  009F               	movwf	31	;volatile
  1001                           
  1002                           ;Main.c: 96: ADCON1 = 0x80;
  1003  035C  3080               	movlw	128
  1004  035D  1683               	bsf	3,5	;RP0=1, select bank1
  1005  035E  1303               	bcf	3,6	;RP1=0, select bank1
  1006  035F  009F               	movwf	31	;volatile
  1007                           
  1008                           ;Main.c: 97: ADRESH = 0x00;
  1009  0360  1283               	bcf	3,5	;RP0=0, select bank0
  1010  0361  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0362  019E               	clrf	30	;volatile
  1012                           
  1013                           ;Main.c: 98: ADRESL = 0x00;
  1014  0363  1683               	bsf	3,5	;RP0=1, select bank1
  1015  0364  1303               	bcf	3,6	;RP1=0, select bank1
  1016  0365  019E               	clrf	30	;volatile
  1017                           
  1018                           ;Main.c: 100: PIR1 &= ~(1<<6);
  1019  0366  30BF               	movlw	191
  1020  0367  1283               	bcf	3,5	;RP0=0, select bank0
  1021  0368  1303               	bcf	3,6	;RP1=0, select bank0
  1022  0369  00C5               	movwf	??_main
  1023  036A  0845               	movf	??_main,w
  1024  036B  058C               	andwf	12,f	;volatile
  1025                           
  1026                           ;Main.c: 104: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1027  036C  3005               	movlw	5
  1028  036D  1283               	bcf	3,5	;RP0=0, select bank0
  1029  036E  1303               	bcf	3,6	;RP1=0, select bank0
  1030  036F  00C5               	movwf	??_main
  1031  0370                     u1247:	
  1032  0370  0BC5               	decfsz	??_main,f
  1033  0371  2B70               	goto	u1247
  1034  0372  2B73               	nop2
  1035                           
  1036                           ;Main.c: 105: ADCON0 |= (1<<1);
  1037  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0375  149F               	bsf	31,1	;volatile
  1040                           
  1041                           ;Main.c: 108: displaySendCmd(0x80);
  1042  0376  3080               	movlw	128
  1043  0377  120A  158A  2693  120A  118A  	fcall	_displaySendCmd
  1044                           
  1045                           ;Main.c: 109: displaySendString("P");
  1046  037C  3017               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1047  037D  120A  158A  2605  120A  118A  	fcall	_displaySendString
  1048                           
  1049                           ;Main.c: 110: displaySendCmd(0x80);
  1050  0382  3080               	movlw	128
  1051  0383  120A  158A  2693  120A  118A  	fcall	_displaySendCmd
  1052                           
  1053                           ;Main.c: 111: displaySendString("Posicao: ");
  1054  0388  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1055  0389  120A  158A  2605  120A  118A  	fcall	_displaySendString
  1056                           
  1057                           ;Main.c: 112: displaySendCmd(0xC0);
  1058  038E  30C0               	movlw	192
  1059  038F  120A  158A  2693  120A  118A  	fcall	_displaySendCmd
  1060                           
  1061                           ;Main.c: 113: displaySendString("Ang: ");
  1062  0394  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1063  0395  120A  158A  2605  120A  118A  	fcall	_displaySendString
  1064                           
  1065                           ;Main.c: 114: displaySendCmd(0xC9);
  1066  039A  30C9               	movlw	201
  1067  039B  120A  158A  2693  120A  118A  	fcall	_displaySendCmd
  1068                           
  1069                           ;Main.c: 115: displaySendString("Vel: ");
  1070  03A0  3011               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1071  03A1  120A  158A  2605  120A  118A  	fcall	_displaySendString
  1072  03A6                     l1453:	
  1073                           ;Main.c: 117: while (1)
  1074                           
  1075                           
  1076                           ;Main.c: 118: {
  1077                           ;Main.c: 120: _delay((unsigned long)((500)*(4000000/4000000.0)));
  1078  03A6  30A5               	movlw	165
  1079  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  1080  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  1081  03A9  00C5               	movwf	??_main
  1082  03AA                     u1257:	
  1083  03AA  0BC5               	decfsz	??_main,f
  1084  03AB  2BAA               	goto	u1257
  1085  03AC  2BAD               	nop2
  1086                           
  1087                           ;Main.c: 123: if(PORTBbits.RB2){
  1088  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  1089  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  1090  03AF  1D06               	btfss	6,2	;volatile
  1091  03B0  2BBA               	goto	l122
  1092                           
  1093                           ;Main.c: 125: veloc();
  1094  03B1  120A  118A  2025  120A  118A  	fcall	_veloc
  1095  03B6                     l123:	
  1096                           ;Main.c: 126: while(PORTBbits.RB2){}
  1097                           
  1098  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1099  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1100  03B8  1906               	btfsc	6,2	;volatile
  1101  03B9  2BB6               	goto	l123
  1102  03BA                     l122:	
  1103                           
  1104                           ;Main.c: 127: }
  1105                           ;Main.c: 132: if(PIR1bits.ADIF)
  1106  03BA  1F0C               	btfss	12,6	;volatile
  1107  03BB  2BA6               	goto	l1453
  1108                           
  1109                           ;Main.c: 133: {
  1110                           ;Main.c: 135: nibblesup = ADRESH;
  1111  03BC  081E               	movf	30,w	;volatile
  1112  03BD  00C5               	movwf	??_main
  1113  03BE  0845               	movf	??_main,w
  1114  03BF  00E5               	movwf	_nibblesup
  1115                           
  1116                           ;Main.c: 136: nibbleinf = ADRESL;
  1117  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  1118  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  1119  03C2  081E               	movf	30,w	;volatile
  1120  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  1121  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  1122  03C5  00C5               	movwf	??_main
  1123  03C6  0845               	movf	??_main,w
  1124  03C7  00E4               	movwf	_nibbleinf
  1125                           
  1126                           ;Main.c: 140: valor = (nibblesup<<8) + nibbleinf;
  1127  03C8  0865               	movf	_nibblesup,w
  1128  03C9  00C5               	movwf	??_main
  1129  03CA  01C6               	clrf	??_main+1
  1130  03CB  0845               	movf	??_main,w
  1131  03CC  00C6               	movwf	??_main+1
  1132  03CD  01C5               	clrf	??_main
  1133  03CE  0864               	movf	_nibbleinf,w
  1134  03CF  0745               	addwf	??_main,w
  1135  03D0  00E8               	movwf	_valor
  1136  03D1  3000               	movlw	0
  1137  03D2  1803               	skipnc
  1138  03D3  3001               	movlw	1
  1139  03D4  0746               	addwf	??_main+1,w
  1140  03D5  00E9               	movwf	_valor+1
  1141  03D6  01EA               	clrf	_valor+2
  1142  03D7  1BE9               	btfsc	_valor+1,7
  1143  03D8  03EA               	decf	_valor+2,f
  1144  03D9  086A               	movf	_valor+2,w
  1145  03DA  00EB               	movwf	_valor+3
  1146                           
  1147                           ;Main.c: 141: valor = (int)(360*valor/1023);
  1148  03DB  3000               	movlw	0
  1149  03DC  00A3               	movwf	___lldiv@divisor+3
  1150  03DD  3000               	movlw	0
  1151  03DE  00A2               	movwf	___lldiv@divisor+2
  1152  03DF  3003               	movlw	3
  1153  03E0  00A1               	movwf	___lldiv@divisor+1
  1154  03E1  30FF               	movlw	255
  1155  03E2  00A0               	movwf	___lldiv@divisor
  1156  03E3  086B               	movf	_valor+3,w
  1157  03E4  00F3               	movwf	___lmul@multiplier+3
  1158  03E5  086A               	movf	_valor+2,w
  1159  03E6  00F2               	movwf	___lmul@multiplier+2
  1160  03E7  0869               	movf	_valor+1,w
  1161  03E8  00F1               	movwf	___lmul@multiplier+1
  1162  03E9  0868               	movf	_valor,w
  1163  03EA  00F0               	movwf	___lmul@multiplier
  1164  03EB  3000               	movlw	0
  1165  03EC  00F7               	movwf	___lmul@multiplicand+3
  1166  03ED  3000               	movlw	0
  1167  03EE  00F6               	movwf	___lmul@multiplicand+2
  1168  03EF  3001               	movlw	1
  1169  03F0  00F5               	movwf	___lmul@multiplicand+1
  1170  03F1  3068               	movlw	104
  1171  03F2  00F4               	movwf	___lmul@multiplicand
  1172  03F3  120A  158A  2711  120A  118A  	fcall	___lmul
  1173  03F8  0873               	movf	?___lmul+3,w
  1174  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1175  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1176  03FB  00A7               	movwf	___lldiv@dividend+3
  1177  03FC  0872               	movf	?___lmul+2,w
  1178  03FD  00A6               	movwf	___lldiv@dividend+2
  1179  03FE  0871               	movf	?___lmul+1,w
  1180  03FF  00A5               	movwf	___lldiv@dividend+1
  1181  0400  0870               	movf	?___lmul,w
  1182  0401  00A4               	movwf	___lldiv@dividend
  1183  0402  120A  158A  27A0  120A  118A  	fcall	___lldiv
  1184  0407  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0408  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0409  0820               	movf	?___lldiv,w
  1187  040A  00E8               	movwf	_valor
  1188  040B  0821               	movf	?___lldiv+1,w
  1189  040C  00E9               	movwf	_valor+1
  1190  040D  3000               	movlw	0
  1191  040E  1BE9               	btfsc	_valor+1,7
  1192  040F  30FF               	movlw	255
  1193  0410  00EA               	movwf	_valor+2
  1194  0411  00EB               	movwf	_valor+3
  1195                           
  1196                           ;Main.c: 143: char polaridade = '+';
  1197  0412  302B               	movlw	43
  1198  0413  00C5               	movwf	??_main
  1199  0414  0845               	movf	??_main,w
  1200  0415  00CD               	movwf	main@polaridade
  1201                           
  1202                           ;Main.c: 144: if(valor>valor_anterior)
  1203  0416  086B               	movf	_valor+3,w
  1204  0417  025D               	subwf	_valor_anterior+3,w
  1205  0418  1D03               	skipz
  1206  0419  2C24               	goto	u1195
  1207  041A  086A               	movf	_valor+2,w
  1208  041B  025C               	subwf	_valor_anterior+2,w
  1209  041C  1D03               	skipz
  1210  041D  2C24               	goto	u1195
  1211  041E  0869               	movf	_valor+1,w
  1212  041F  025B               	subwf	_valor_anterior+1,w
  1213  0420  1D03               	skipz
  1214  0421  2C24               	goto	u1195
  1215  0422  0868               	movf	_valor,w
  1216  0423  025A               	subwf	_valor_anterior,w
  1217  0424                     u1195:	
  1218  0424  1803               	skipnc
  1219  0425  2C67               	goto	l1473
  1220                           
  1221                           ;Main.c: 145: {
  1222                           ;Main.c: 146: delta = valor - valor_anterior;
  1223  0426  0868               	movf	_valor,w
  1224  0427  00C5               	movwf	??_main
  1225  0428  0869               	movf	_valor+1,w
  1226  0429  00C6               	movwf	??_main+1
  1227  042A  086A               	movf	_valor+2,w
  1228  042B  00C7               	movwf	??_main+2
  1229  042C  086B               	movf	_valor+3,w
  1230  042D  00C8               	movwf	??_main+3
  1231  042E  095A               	comf	_valor_anterior,w
  1232  042F  00C9               	movwf	??_main+4
  1233  0430  095B               	comf	_valor_anterior+1,w
  1234  0431  00CA               	movwf	??_main+5
  1235  0432  095C               	comf	_valor_anterior+2,w
  1236  0433  00CB               	movwf	??_main+6
  1237  0434  095D               	comf	_valor_anterior+3,w
  1238  0435  00CC               	movwf	??_main+7
  1239  0436  0AC9               	incf	??_main+4,f
  1240  0437  1903               	skipnz
  1241  0438  0ACA               	incf	??_main+5,f
  1242  0439  1903               	skipnz
  1243  043A  0ACB               	incf	??_main+6,f
  1244  043B  1903               	skipnz
  1245  043C  0ACC               	incf	??_main+7,f
  1246  043D  0849               	movf	??_main+4,w
  1247  043E  07C5               	addwf	??_main,f
  1248  043F  084A               	movf	??_main+5,w
  1249  0440  1803               	skipnc
  1250  0441  0F4A               	incfsz	??_main+5,w
  1251  0442  2C44               	goto	u1200
  1252  0443  2C45               	goto	u1201
  1253  0444                     u1200:	
  1254  0444  07C6               	addwf	??_main+1,f
  1255  0445                     u1201:	
  1256  0445  084B               	movf	??_main+6,w
  1257  0446  1803               	skipnc
  1258  0447  0F4B               	incfsz	??_main+6,w
  1259  0448  2C4A               	goto	u1202
  1260  0449  2C4B               	goto	u1203
  1261  044A                     u1202:	
  1262  044A  07C7               	addwf	??_main+2,f
  1263  044B                     u1203:	
  1264  044B  084C               	movf	??_main+7,w
  1265  044C  1803               	skipnc
  1266  044D  0A4C               	incf	??_main+7,w
  1267  044E  07C8               	addwf	??_main+3,f
  1268  044F  0848               	movf	??_main+3,w
  1269  0450  1683               	bsf	3,5	;RP0=1, select bank1
  1270  0451  1303               	bcf	3,6	;RP1=0, select bank1
  1271  0452  00AF               	movwf	(_delta+3)^(0+128)
  1272  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0455  0847               	movf	??_main+2,w
  1275  0456  1683               	bsf	3,5	;RP0=1, select bank1
  1276  0457  1303               	bcf	3,6	;RP1=0, select bank1
  1277  0458  00AE               	movwf	(_delta+2)^(0+128)
  1278  0459  1283               	bcf	3,5	;RP0=0, select bank0
  1279  045A  1303               	bcf	3,6	;RP1=0, select bank0
  1280  045B  0846               	movf	??_main+1,w
  1281  045C  1683               	bsf	3,5	;RP0=1, select bank1
  1282  045D  1303               	bcf	3,6	;RP1=0, select bank1
  1283  045E  00AD               	movwf	(_delta+1)^(0+128)
  1284  045F  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0460  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0461  0845               	movf	??_main,w
  1287  0462  1683               	bsf	3,5	;RP0=1, select bank1
  1288  0463  1303               	bcf	3,6	;RP1=0, select bank1
  1289  0464  00AC               	movwf	_delta^(0+128)
  1290                           
  1291                           ;Main.c: 147: polaridade = '+';
  1292  0465  302B               	movlw	43
  1293  0466  2CB7               	goto	L1
  1294  0467                     l1473:	
  1295                           ;Main.c: 148: }
  1296                           
  1297                           
  1298                           ;Main.c: 149: else if(valor<valor_anterior)
  1299  0467  085D               	movf	_valor_anterior+3,w
  1300  0468  026B               	subwf	_valor+3,w
  1301  0469  1D03               	skipz
  1302  046A  2C75               	goto	u1215
  1303  046B  085C               	movf	_valor_anterior+2,w
  1304  046C  026A               	subwf	_valor+2,w
  1305  046D  1D03               	skipz
  1306  046E  2C75               	goto	u1215
  1307  046F  085B               	movf	_valor_anterior+1,w
  1308  0470  0269               	subwf	_valor+1,w
  1309  0471  1D03               	skipz
  1310  0472  2C75               	goto	u1215
  1311  0473  085A               	movf	_valor_anterior,w
  1312  0474  0268               	subwf	_valor,w
  1313  0475                     u1215:	
  1314  0475  1803               	skipnc
  1315  0476  2CBC               	goto	l1479
  1316                           
  1317                           ;Main.c: 150: {
  1318                           ;Main.c: 151: delta = valor_anterior - valor ;
  1319  0477  085A               	movf	_valor_anterior,w
  1320  0478  00C5               	movwf	??_main
  1321  0479  085B               	movf	_valor_anterior+1,w
  1322  047A  00C6               	movwf	??_main+1
  1323  047B  085C               	movf	_valor_anterior+2,w
  1324  047C  00C7               	movwf	??_main+2
  1325  047D  085D               	movf	_valor_anterior+3,w
  1326  047E  00C8               	movwf	??_main+3
  1327  047F  0968               	comf	_valor,w
  1328  0480  00C9               	movwf	??_main+4
  1329  0481  0969               	comf	_valor+1,w
  1330  0482  00CA               	movwf	??_main+5
  1331  0483  096A               	comf	_valor+2,w
  1332  0484  00CB               	movwf	??_main+6
  1333  0485  096B               	comf	_valor+3,w
  1334  0486  00CC               	movwf	??_main+7
  1335  0487  0AC9               	incf	??_main+4,f
  1336  0488  1903               	skipnz
  1337  0489  0ACA               	incf	??_main+5,f
  1338  048A  1903               	skipnz
  1339  048B  0ACB               	incf	??_main+6,f
  1340  048C  1903               	skipnz
  1341  048D  0ACC               	incf	??_main+7,f
  1342  048E  0849               	movf	??_main+4,w
  1343  048F  07C5               	addwf	??_main,f
  1344  0490  084A               	movf	??_main+5,w
  1345  0491  1803               	skipnc
  1346  0492  0F4A               	incfsz	??_main+5,w
  1347  0493  2C95               	goto	u1220
  1348  0494  2C96               	goto	u1221
  1349  0495                     u1220:	
  1350  0495  07C6               	addwf	??_main+1,f
  1351  0496                     u1221:	
  1352  0496  084B               	movf	??_main+6,w
  1353  0497  1803               	skipnc
  1354  0498  0F4B               	incfsz	??_main+6,w
  1355  0499  2C9B               	goto	u1222
  1356  049A  2C9C               	goto	u1223
  1357  049B                     u1222:	
  1358  049B  07C7               	addwf	??_main+2,f
  1359  049C                     u1223:	
  1360  049C  084C               	movf	??_main+7,w
  1361  049D  1803               	skipnc
  1362  049E  0A4C               	incf	??_main+7,w
  1363  049F  07C8               	addwf	??_main+3,f
  1364  04A0  0848               	movf	??_main+3,w
  1365  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  1366  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  1367  04A3  00AF               	movwf	(_delta+3)^(0+128)
  1368  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  1369  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  1370  04A6  0847               	movf	??_main+2,w
  1371  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  1372  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  1373  04A9  00AE               	movwf	(_delta+2)^(0+128)
  1374  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1375  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1376  04AC  0846               	movf	??_main+1,w
  1377  04AD  1683               	bsf	3,5	;RP0=1, select bank1
  1378  04AE  1303               	bcf	3,6	;RP1=0, select bank1
  1379  04AF  00AD               	movwf	(_delta+1)^(0+128)
  1380  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  1381  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  1382  04B2  0845               	movf	??_main,w
  1383  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  1384  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  1385  04B5  00AC               	movwf	_delta^(0+128)
  1386                           
  1387                           ;Main.c: 152: polaridade = '-';
  1388  04B6  302D               	movlw	45
  1389  04B7                     L1:	
  1390  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1391  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1392  04B9  00C5               	movwf	??_main
  1393  04BA  0845               	movf	??_main,w
  1394  04BB  00CD               	movwf	main@polaridade
  1395  04BC                     l1479:	
  1396                           
  1397                           ;Main.c: 153: }
  1398                           ;Main.c: 156: calculaDelta(polaridade);
  1399  04BC  084D               	movf	main@polaridade,w
  1400  04BD  120A  118A  24CF  120A  118A  	fcall	_calculaDelta
  1401                           
  1402                           ;Main.c: 159: valor_anterior=valor;
  1403  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  1404  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  1405  04C4  086B               	movf	_valor+3,w
  1406  04C5  00DD               	movwf	_valor_anterior+3
  1407  04C6  086A               	movf	_valor+2,w
  1408  04C7  00DC               	movwf	_valor_anterior+2
  1409  04C8  0869               	movf	_valor+1,w
  1410  04C9  00DB               	movwf	_valor_anterior+1
  1411  04CA  0868               	movf	_valor,w
  1412  04CB  00DA               	movwf	_valor_anterior
  1413                           
  1414                           ;Main.c: 160: PIR1bits.ADIF = 0;
  1415  04CC  130C               	bcf	12,6	;volatile
  1416                           
  1417                           ;Main.c: 161: ADCON0 |= (1<<1);
  1418  04CD  149F               	bsf	31,1	;volatile
  1419  04CE  2BA6               	goto	l1453
  1420  04CF                     __end_of_main:	
  1421                           
  1422                           	psect	text1
  1423  0025                     __ptext1:	
  1424 ;; *************** function _veloc *****************
  1425 ;; Defined at:
  1426 ;;		line 47 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\stepper.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0
  1442 ;;      Temps:          4       0       0       0       0
  1443 ;;      Totals:         4       0       0       0       0
  1444 ;;Total ram usage:        4 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    3
  1447 ;; This function calls:
  1448 ;;		_displaySendCmd
  1449 ;;		_displaySendData
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           
  1456                           ;psect for function _veloc
  1457  0025                     _veloc:	
  1458                           
  1459                           ;stepper.c: 50: if(contador < 3)
  1460                           
  1461                           ;incstack = 0
  1462                           ; Regs used in _veloc: [wreg+status,2+status,0+pclath+cstack]
  1463  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1464  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1465  0027  0859               	movf	_contador+3,w
  1466  0028  1D03               	btfss	3,2
  1467  0029  287C               	goto	l1315
  1468  002A  0858               	movf	_contador+2,w
  1469  002B  1D03               	btfss	3,2
  1470  002C  287C               	goto	l1315
  1471  002D  0857               	movf	_contador+1,w
  1472  002E  1D03               	btfss	3,2
  1473  002F  287C               	goto	l1315
  1474  0030  3003               	movlw	3
  1475  0031  0256               	subwf	_contador,w
  1476  0032  1D03               	skipz
  1477  0033  2834               	goto	u973
  1478  0034                     u973:	
  1479  0034  1803               	btfsc	3,0
  1480  0035  287C               	goto	l1315
  1481                           
  1482                           ;stepper.c: 51: {
  1483                           ;stepper.c: 52: contador = contador+1;
  1484  0036  3001               	movlw	1
  1485  0037  00F6               	movwf	??_veloc
  1486  0038  3000               	movlw	0
  1487  0039  00F7               	movwf	??_veloc+1
  1488  003A  3000               	movlw	0
  1489  003B  00F8               	movwf	??_veloc+2
  1490  003C  3000               	movlw	0
  1491  003D  00F9               	movwf	??_veloc+3
  1492  003E  0856               	movf	_contador,w
  1493  003F  07F6               	addwf	??_veloc,f
  1494  0040  0857               	movf	_contador+1,w
  1495  0041  1803               	skipnc
  1496  0042  0F57               	incfsz	_contador+1,w
  1497  0043  2845               	goto	u980
  1498  0044  2846               	goto	u981
  1499  0045                     u980:	
  1500  0045  07F7               	addwf	??_veloc+1,f
  1501  0046                     u981:	
  1502  0046  0858               	movf	_contador+2,w
  1503  0047  1803               	skipnc
  1504  0048  0F58               	incfsz	_contador+2,w
  1505  0049  284B               	goto	u982
  1506  004A  284C               	goto	u983
  1507  004B                     u982:	
  1508  004B  07F8               	addwf	??_veloc+2,f
  1509  004C                     u983:	
  1510  004C  0859               	movf	_contador+3,w
  1511  004D  1803               	skipnc
  1512  004E  0A59               	incf	_contador+3,w
  1513  004F  07F9               	addwf	??_veloc+3,f
  1514  0050  0879               	movf	??_veloc+3,w
  1515  0051  00D9               	movwf	_contador+3
  1516  0052  0878               	movf	??_veloc+2,w
  1517  0053  00D8               	movwf	_contador+2
  1518  0054  0877               	movf	??_veloc+1,w
  1519  0055  00D7               	movwf	_contador+1
  1520  0056  0876               	movf	??_veloc,w
  1521  0057  00D6               	movwf	_contador
  1522                           
  1523                           ;stepper.c: 53: velocidade = velocidade+50;
  1524  0058  3032               	movlw	50
  1525  0059  00F6               	movwf	??_veloc
  1526  005A  3000               	movlw	0
  1527  005B  00F7               	movwf	??_veloc+1
  1528  005C  3000               	movlw	0
  1529  005D  00F8               	movwf	??_veloc+2
  1530  005E  3000               	movlw	0
  1531  005F  00F9               	movwf	??_veloc+3
  1532  0060  1683               	bsf	3,5	;RP0=1, select bank1
  1533  0061  1303               	bcf	3,6	;RP1=0, select bank1
  1534  0062  083A               	movf	_velocidade^(0+128),w
  1535  0063  07F6               	addwf	??_veloc,f
  1536  0064  083B               	movf	(_velocidade+1)^(0+128),w
  1537  0065  1803               	skipnc
  1538  0066  0F3B               	incfsz	(_velocidade+1)^(0+128),w
  1539  0067  2869               	goto	u990
  1540  0068  286A               	goto	u991
  1541  0069                     u990:	
  1542  0069  07F7               	addwf	??_veloc+1,f
  1543  006A                     u991:	
  1544  006A  083C               	movf	(_velocidade+2)^(0+128),w
  1545  006B  1803               	skipnc
  1546  006C  0F3C               	incfsz	(_velocidade+2)^(0+128),w
  1547  006D  286F               	goto	u992
  1548  006E  2870               	goto	u993
  1549  006F                     u992:	
  1550  006F  07F8               	addwf	??_veloc+2,f
  1551  0070                     u993:	
  1552  0070  083D               	movf	(_velocidade+3)^(0+128),w
  1553  0071  1803               	skipnc
  1554  0072  0A3D               	incf	(_velocidade+3)^(0+128),w
  1555  0073  07F9               	addwf	??_veloc+3,f
  1556  0074  0879               	movf	??_veloc+3,w
  1557  0075  00BD               	movwf	(_velocidade+3)^(0+128)
  1558  0076  0878               	movf	??_veloc+2,w
  1559  0077  00BC               	movwf	(_velocidade+2)^(0+128)
  1560  0078  0877               	movf	??_veloc+1,w
  1561  0079  00BB               	movwf	(_velocidade+1)^(0+128)
  1562  007A  0876               	movf	??_veloc,w
  1563  007B  2895               	goto	L2
  1564  007C                     l1315:	
  1565                           ;stepper.c: 54: }
  1566                           
  1567                           
  1568                           ;stepper.c: 55: else if(contador == 3)
  1569  007C  3003               	movlw	3
  1570  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1571  007E  0656               	xorwf	_contador,w
  1572  007F  0457               	iorwf	_contador+1,w
  1573  0080  0458               	iorwf	_contador+2,w
  1574  0081  0459               	iorwf	_contador+3,w
  1575  0082  1D03               	btfss	3,2
  1576  0083  2896               	goto	l1319
  1577                           
  1578                           ;stepper.c: 56: {
  1579                           ;stepper.c: 57: contador = 0;
  1580  0084  3000               	movlw	0
  1581  0085  00D9               	movwf	_contador+3
  1582  0086  3000               	movlw	0
  1583  0087  00D8               	movwf	_contador+2
  1584  0088  3000               	movlw	0
  1585  0089  00D7               	movwf	_contador+1
  1586  008A  3000               	movlw	0
  1587  008B  00D6               	movwf	_contador
  1588                           
  1589                           ;stepper.c: 58: velocidade = 50;
  1590  008C  3000               	movlw	0
  1591  008D  1683               	bsf	3,5	;RP0=1, select bank1
  1592  008E  1303               	bcf	3,6	;RP1=0, select bank1
  1593  008F  00BD               	movwf	(_velocidade+3)^(0+128)
  1594  0090  3000               	movlw	0
  1595  0091  00BC               	movwf	(_velocidade+2)^(0+128)
  1596  0092  3000               	movlw	0
  1597  0093  00BB               	movwf	(_velocidade+1)^(0+128)
  1598  0094  3032               	movlw	50
  1599  0095                     L2:	
  1600  0095  00BA               	movwf	_velocidade^(0+128)
  1601  0096                     l1319:	
  1602                           
  1603                           ;stepper.c: 59: }
  1604                           ;stepper.c: 61: displaySendCmd(0xCD);
  1605  0096  30CD               	movlw	205
  1606  0097  120A  158A  2693  120A  118A  	fcall	_displaySendCmd
  1607                           
  1608                           ;stepper.c: 62: displaySendData(0x30+contador+1);
  1609  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1610  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1611  009E  0856               	movf	_contador,w
  1612  009F  3E31               	addlw	49
  1613  00A0  120A  158A  26D2   	fcall	_displaySendData
  1614  00A3  0008               	return
  1615  00A4                     __end_of_veloc:	
  1616                           
  1617                           	psect	text2
  1618  0E58                     __ptext2:	
  1619 ;; *************** function _setupStepper *****************
  1620 ;; Defined at:
  1621 ;;		line 16 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\stepper.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0
  1638 ;;      Totals:         0       0       0       0       0
  1639 ;;Total ram usage:        0 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           
  1649                           ;psect for function _setupStepper
  1650  0E58                     _setupStepper:	
  1651                           
  1652                           ;stepper.c: 19: i = 0;
  1653                           
  1654                           ;incstack = 0
  1655                           ; Regs used in _setupStepper: [wreg+status,2]
  1656  0E58  3000               	movlw	0
  1657  0E59  1683               	bsf	3,5	;RP0=1, select bank1
  1658  0E5A  1303               	bcf	3,6	;RP1=0, select bank1
  1659  0E5B  00A7               	movwf	(_i+3)^(0+128)
  1660  0E5C  3000               	movlw	0
  1661  0E5D  00A6               	movwf	(_i+2)^(0+128)
  1662  0E5E  3000               	movlw	0
  1663  0E5F  00A5               	movwf	(_i+1)^(0+128)
  1664  0E60  3000               	movlw	0
  1665  0E61  00A4               	movwf	_i^(0+128)
  1666                           
  1667                           ;stepper.c: 20: j = 0;
  1668  0E62  3000               	movlw	0
  1669  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  1670  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  1671  0E65  00D1               	movwf	_j+3
  1672  0E66  3000               	movlw	0
  1673  0E67  00D0               	movwf	_j+2
  1674  0E68  3000               	movlw	0
  1675  0E69  00CF               	movwf	_j+1
  1676  0E6A  3000               	movlw	0
  1677  0E6B  00CE               	movwf	_j
  1678                           
  1679                           ;stepper.c: 21: p = 0;
  1680  0E6C  3000               	movlw	0
  1681  0E6D  1683               	bsf	3,5	;RP0=1, select bank1
  1682  0E6E  1303               	bcf	3,6	;RP1=0, select bank1
  1683  0E6F  00A3               	movwf	(_p+3)^(0+128)
  1684  0E70  3000               	movlw	0
  1685  0E71  00A2               	movwf	(_p+2)^(0+128)
  1686  0E72  3000               	movlw	0
  1687  0E73  00A1               	movwf	(_p+1)^(0+128)
  1688  0E74  3000               	movlw	0
  1689  0E75  00A0               	movwf	_p^(0+128)
  1690                           
  1691                           ;stepper.c: 24: contador = 0;
  1692  0E76  3000               	movlw	0
  1693  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  1694  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  1695  0E79  00D9               	movwf	_contador+3
  1696  0E7A  3000               	movlw	0
  1697  0E7B  00D8               	movwf	_contador+2
  1698  0E7C  3000               	movlw	0
  1699  0E7D  00D7               	movwf	_contador+1
  1700  0E7E  3000               	movlw	0
  1701  0E7F  00D6               	movwf	_contador
  1702                           
  1703                           ;stepper.c: 25: velocidade = 50;
  1704  0E80  3000               	movlw	0
  1705  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  1706  0E82  1303               	bcf	3,6	;RP1=0, select bank1
  1707  0E83  00BD               	movwf	(_velocidade+3)^(0+128)
  1708  0E84  3000               	movlw	0
  1709  0E85  00BC               	movwf	(_velocidade+2)^(0+128)
  1710  0E86  3000               	movlw	0
  1711  0E87  00BB               	movwf	(_velocidade+1)^(0+128)
  1712  0E88  3032               	movlw	50
  1713  0E89  00BA               	movwf	_velocidade^(0+128)
  1714                           
  1715                           ;stepper.c: 28: posicaoAtual = 0;
  1716  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  1717  0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  1718  0E8C  01E2               	clrf	_posicaoAtual
  1719  0E8D  01E3               	clrf	_posicaoAtual+1
  1720                           
  1721                           ;stepper.c: 29: posicaoDesejada = 0;
  1722  0E8E  1683               	bsf	3,5	;RP0=1, select bank1
  1723  0E8F  1303               	bcf	3,6	;RP1=0, select bank1
  1724  0E90  01B0               	clrf	_posicaoDesejada^(0+128)
  1725  0E91  01B1               	clrf	(_posicaoDesejada+1)^(0+128)
  1726  0E92  0008               	return
  1727  0E93                     __end_of_setupStepper:	
  1728                           
  1729                           	psect	text3
  1730  0E21                     __ptext3:	
  1731 ;; *************** function _setupSerial *****************
  1732 ;; Defined at:
  1733 ;;		line 4 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\serial.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  clock           4   13[BANK0 ] const unsigned long 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       4       0       0       0
  1748 ;;      Locals:         0       0       0       0       0
  1749 ;;      Temps:          0       4       0       0       0
  1750 ;;      Totals:         0       8       0       0       0
  1751 ;;Total ram usage:        8 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    1
  1754 ;; This function calls:
  1755 ;;		___lldiv
  1756 ;; This function is called by:
  1757 ;;		_main
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           
  1762                           ;psect for function _setupSerial
  1763  0E21                     _setupSerial:	
  1764                           
  1765                           ;serial.c: 6: SSPADD = (4000000/(4*clock))-1;
  1766                           
  1767                           ;incstack = 0
  1768                           ; Regs used in _setupSerial: [wreg+status,2+status,0+pclath+cstack]
  1769  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0E22  1303               	bcf	3,6	;RP1=0, select bank0
  1771  0E23  082D               	movf	setupSerial@clock,w
  1772  0E24  00B1               	movwf	??_setupSerial
  1773  0E25  082E               	movf	setupSerial@clock+1,w
  1774  0E26  00B2               	movwf	??_setupSerial+1
  1775  0E27  082F               	movf	setupSerial@clock+2,w
  1776  0E28  00B3               	movwf	??_setupSerial+2
  1777  0E29  0830               	movf	setupSerial@clock+3,w
  1778  0E2A  00B4               	movwf	??_setupSerial+3
  1779  0E2B  3002               	movlw	2
  1780  0E2C                     u965:	
  1781  0E2C  1003               	clrc
  1782  0E2D  0DB1               	rlf	??_setupSerial,f
  1783  0E2E  0DB2               	rlf	??_setupSerial+1,f
  1784  0E2F  0DB3               	rlf	??_setupSerial+2,f
  1785  0E30  0DB4               	rlf	??_setupSerial+3,f
  1786  0E31  3EFF               	addlw	-1
  1787  0E32  1D03               	skipz
  1788  0E33  2E2C               	goto	u965
  1789  0E34  0834               	movf	??_setupSerial+3,w
  1790  0E35  00A3               	movwf	___lldiv@divisor+3
  1791  0E36  0833               	movf	??_setupSerial+2,w
  1792  0E37  00A2               	movwf	___lldiv@divisor+2
  1793  0E38  0832               	movf	??_setupSerial+1,w
  1794  0E39  00A1               	movwf	___lldiv@divisor+1
  1795  0E3A  0831               	movf	??_setupSerial,w
  1796  0E3B  00A0               	movwf	___lldiv@divisor
  1797  0E3C  3000               	movlw	0
  1798  0E3D  00A7               	movwf	___lldiv@dividend+3
  1799  0E3E  303D               	movlw	61
  1800  0E3F  00A6               	movwf	___lldiv@dividend+2
  1801  0E40  3009               	movlw	9
  1802  0E41  00A5               	movwf	___lldiv@dividend+1
  1803  0E42  3000               	movlw	0
  1804  0E43  00A4               	movwf	___lldiv@dividend
  1805  0E44  120A  158A  27A0   	fcall	___lldiv
  1806  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0E49  0820               	movf	?___lldiv,w
  1809  0E4A  3EFF               	addlw	255
  1810  0E4B  1683               	bsf	3,5	;RP0=1, select bank1
  1811  0E4C  1303               	bcf	3,6	;RP1=0, select bank1
  1812  0E4D  0093               	movwf	19	;volatile
  1813                           
  1814                           ;serial.c: 7: SSPCON = 0b00101000;
  1815  0E4E  3028               	movlw	40
  1816  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0E51  0094               	movwf	20	;volatile
  1819                           
  1820                           ;serial.c: 11: SSPSTAT = 0;
  1821  0E52  1683               	bsf	3,5	;RP0=1, select bank1
  1822  0E53  1303               	bcf	3,6	;RP1=0, select bank1
  1823  0E54  0194               	clrf	20	;volatile
  1824                           
  1825                           ;serial.c: 12: TRISCbits.TRISC3 = 1;
  1826  0E55  1587               	bsf	7,3	;volatile
  1827                           
  1828                           ;serial.c: 13: TRISCbits.TRISC4 = 1;
  1829  0E56  1607               	bsf	7,4	;volatile
  1830  0E57  0008               	return
  1831  0E58                     __end_of_setupSerial:	
  1832                           
  1833                           	psect	text4
  1834  0DEE                     __ptext4:	
  1835 ;; *************** function _setupDisplay *****************
  1836 ;; Defined at:
  1837 ;;		line 5 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\lcd.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, status,2, status,0, pclath, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1851 ;;      Params:         0       0       0       0       0
  1852 ;;      Locals:         0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0
  1854 ;;      Totals:         0       0       0       0       0
  1855 ;;Total ram usage:        0 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    3
  1858 ;; This function calls:
  1859 ;;		_displaySendCmd
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           
  1866                           ;psect for function _setupDisplay
  1867  0DEE                     _setupDisplay:	
  1868                           
  1869                           ;lcd.c: 7: displaySendCmd(0x02);
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in _setupDisplay: [wreg+status,2+status,0+pclath+cstack]
  1873  0DEE  3002               	movlw	2
  1874  0DEF  120A  158A  2693  120A  158A  	fcall	_displaySendCmd
  1875                           
  1876                           ;lcd.c: 8: displaySendCmd(0x28);
  1877  0DF4  3028               	movlw	40
  1878  0DF5  120A  158A  2693  120A  158A  	fcall	_displaySendCmd
  1879                           
  1880                           ;lcd.c: 9: displaySendCmd(0x0c);
  1881  0DFA  300C               	movlw	12
  1882  0DFB  120A  158A  2693  120A  158A  	fcall	_displaySendCmd
  1883                           
  1884                           ;lcd.c: 10: displaySendCmd(0x80);
  1885  0E00  3080               	movlw	128
  1886  0E01  120A  158A  2693   	fcall	_displaySendCmd
  1887  0E04  0008               	return
  1888  0E05                     __end_of_setupDisplay:	
  1889                           
  1890                           	psect	text5
  1891  0E05                     __ptext5:	
  1892 ;; *************** function _displaySendString *****************
  1893 ;; Defined at:
  1894 ;;		line 13 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\lcd.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  str             1    wreg     PTR const unsigned char 
  1897 ;;		 -> STR_4(6), STR_3(6), STR_2(10), STR_1(2), 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  str             1    7[COMMON] PTR const unsigned char 
  1900 ;;		 -> STR_4(6), STR_3(6), STR_2(10), STR_1(2), 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1910 ;;      Params:         0       0       0       0       0
  1911 ;;      Locals:         1       0       0       0       0
  1912 ;;      Temps:          1       0       0       0       0
  1913 ;;      Totals:         2       0       0       0       0
  1914 ;;Total ram usage:        2 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    3
  1917 ;; This function calls:
  1918 ;;		_displaySendData
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _displaySendString
  1926  0E05                     _displaySendString:	
  1927                           
  1928                           ;incstack = 0
  1929                           ; Regs used in _displaySendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1930                           ;displaySendString@str stored from wreg
  1931  0E05  00F7               	movwf	displaySendString@str
  1932  0E06                     l1291:	
  1933                           ;lcd.c: 15: while (*str) displaySendData(*str++);
  1934                           
  1935  0E06  0877               	movf	displaySendString@str,w
  1936  0E07  0084               	movwf	4
  1937  0E08  120A  158A  2000  120A  158A  	fcall	stringdir
  1938  0E0D  3A00               	xorlw	0
  1939  0E0E  1903               	btfsc	3,2
  1940  0E0F  0008               	return
  1941  0E10  0877               	movf	displaySendString@str,w
  1942  0E11  0084               	movwf	4
  1943  0E12  120A  158A  2000  120A  158A  	fcall	stringdir
  1944  0E17  120A  158A  26D2  120A  158A  	fcall	_displaySendData
  1945  0E1C  3001               	movlw	1
  1946  0E1D  00F6               	movwf	??_displaySendString
  1947  0E1E  0876               	movf	??_displaySendString,w
  1948  0E1F  07F7               	addwf	displaySendString@str,f
  1949  0E20  2E06               	goto	l1291
  1950  0E21                     __end_of_displaySendString:	
  1951                           
  1952                           	psect	text6
  1953  0D8D                     __ptext6:	
  1954 ;; *************** function _clearDisplay *****************
  1955 ;; Defined at:
  1956 ;;		line 52 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\lcd.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;		None
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0, pclath, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1970 ;;      Params:         0       0       0       0       0
  1971 ;;      Locals:         0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0
  1973 ;;      Totals:         0       0       0       0       0
  1974 ;;Total ram usage:        0 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    3
  1977 ;; This function calls:
  1978 ;;		_displaySendCmd
  1979 ;; This function is called by:
  1980 ;;		_main
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           
  1985                           ;psect for function _clearDisplay
  1986  0D8D                     _clearDisplay:	
  1987                           
  1988                           ;lcd.c: 54: displaySendCmd(0x01);
  1989                           
  1990                           ;incstack = 0
  1991                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  1992  0D8D  3001               	movlw	1
  1993  0D8E  120A  158A  2693   	fcall	_displaySendCmd
  1994  0D91  0008               	return
  1995  0D92                     __end_of_clearDisplay:	
  1996                           
  1997                           	psect	text7
  1998  04CF                     __ptext7:	
  1999 ;; *************** function _calculaDelta *****************
  2000 ;; Defined at:
  2001 ;;		line 185 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\Main.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  polaridade      1    wreg     unsigned char 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  polaridade      1   36[BANK0 ] unsigned char 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0, pclath, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2015 ;;      Params:         0       0       0       0       0
  2016 ;;      Locals:         0       1       0       0       0
  2017 ;;      Temps:          0      11       0       0       0
  2018 ;;      Totals:         0      12       0       0       0
  2019 ;;Total ram usage:       12 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    4
  2022 ;; This function calls:
  2023 ;;		___bmul
  2024 ;;		___lldiv
  2025 ;;		___wmul
  2026 ;;		_apresenta
  2027 ;;		_sentido_anti_horario_wave_step
  2028 ;;		_sentido_horario_wave_step
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _calculaDelta
  2036  04CF                     _calculaDelta:	
  2037                           
  2038                           ;incstack = 0
  2039                           ; Regs used in _calculaDelta: [wreg+status,2+status,0+pclath+cstack]
  2040                           ;calculaDelta@polaridade stored from wreg
  2041  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2042  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2043  04D1  00C4               	movwf	calculaDelta@polaridade
  2044                           
  2045                           ;Main.c: 187: angulo=delta;
  2046  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  2047  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  2048  04D4  082F               	movf	(_delta+3)^(0+128),w
  2049  04D5  00AB               	movwf	(_angulo+3)^(0+128)
  2050  04D6  082E               	movf	(_delta+2)^(0+128),w
  2051  04D7  00AA               	movwf	(_angulo+2)^(0+128)
  2052  04D8  082D               	movf	(_delta+1)^(0+128),w
  2053  04D9  00A9               	movwf	(_angulo+1)^(0+128)
  2054  04DA  082C               	movf	_delta^(0+128),w
  2055  04DB  00A8               	movwf	_angulo^(0+128)
  2056                           
  2057                           ;Main.c: 190: if(polaridade == '-')
  2058  04DC  302D               	movlw	45
  2059  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2060  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2061  04DF  0644               	xorwf	calculaDelta@polaridade,w
  2062  04E0  1D03               	btfss	3,2
  2063  04E1  2D1C               	goto	l1329
  2064                           
  2065                           ;Main.c: 191: {
  2066                           ;Main.c: 192: angulo_atual = (angulo_atual - angulo);
  2067  04E2  0852               	movf	_angulo_atual,w
  2068  04E3  00B9               	movwf	??_calculaDelta
  2069  04E4  0853               	movf	_angulo_atual+1,w
  2070  04E5  00BA               	movwf	??_calculaDelta+1
  2071  04E6  0854               	movf	_angulo_atual+2,w
  2072  04E7  00BB               	movwf	??_calculaDelta+2
  2073  04E8  0855               	movf	_angulo_atual+3,w
  2074  04E9  00BC               	movwf	??_calculaDelta+3
  2075  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  2076  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  2077  04EC  0928               	comf	_angulo^(0+128),w
  2078  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2079  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2080  04EF  00BD               	movwf	??_calculaDelta+4
  2081  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  2082  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  2083  04F2  0929               	comf	(_angulo+1)^(0+128),w
  2084  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2085  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  2086  04F5  00BE               	movwf	??_calculaDelta+5
  2087  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  2088  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  2089  04F8  092A               	comf	(_angulo+2)^(0+128),w
  2090  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  2091  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  2092  04FB  00BF               	movwf	??_calculaDelta+6
  2093  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  2094  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  2095  04FE  092B               	comf	(_angulo+3)^(0+128),w
  2096  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0500  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0501  00C0               	movwf	??_calculaDelta+7
  2099  0502  0ABD               	incf	??_calculaDelta+4,f
  2100  0503  1903               	skipnz
  2101  0504  0ABE               	incf	??_calculaDelta+5,f
  2102  0505  1903               	skipnz
  2103  0506  0ABF               	incf	??_calculaDelta+6,f
  2104  0507  1903               	skipnz
  2105  0508  0AC0               	incf	??_calculaDelta+7,f
  2106  0509  083D               	movf	??_calculaDelta+4,w
  2107  050A  07B9               	addwf	??_calculaDelta,f
  2108  050B  083E               	movf	??_calculaDelta+5,w
  2109  050C  1803               	skipnc
  2110  050D  0F3E               	incfsz	??_calculaDelta+5,w
  2111  050E  2D10               	goto	u1020
  2112  050F  2D11               	goto	u1021
  2113  0510                     u1020:	
  2114  0510  07BA               	addwf	??_calculaDelta+1,f
  2115  0511                     u1021:	
  2116  0511  083F               	movf	??_calculaDelta+6,w
  2117  0512  1803               	skipnc
  2118  0513  0F3F               	incfsz	??_calculaDelta+6,w
  2119  0514  2D16               	goto	u1022
  2120  0515  2D17               	goto	u1023
  2121  0516                     u1022:	
  2122  0516  07BB               	addwf	??_calculaDelta+2,f
  2123  0517                     u1023:	
  2124  0517  0840               	movf	??_calculaDelta+7,w
  2125  0518  1803               	skipnc
  2126  0519  0A40               	incf	??_calculaDelta+7,w
  2127  051A  07BC               	addwf	??_calculaDelta+3,f
  2128  051B  2D4B               	goto	L3
  2129  051C                     l1329:	
  2130                           ;Main.c: 193: }
  2131                           
  2132                           
  2133                           ;Main.c: 194: else if(polaridade == '+')
  2134  051C  302B               	movlw	43
  2135  051D  0644               	xorwf	calculaDelta@polaridade,w
  2136  051E  1D03               	btfss	3,2
  2137  051F  2D53               	goto	l139
  2138                           
  2139                           ;Main.c: 195: {
  2140                           ;Main.c: 196: angulo_atual = angulo_atual + angulo;
  2141  0520  0852               	movf	_angulo_atual,w
  2142  0521  1683               	bsf	3,5	;RP0=1, select bank1
  2143  0522  1303               	bcf	3,6	;RP1=0, select bank1
  2144  0523  0728               	addwf	_angulo^(0+128),w
  2145  0524  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0525  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0526  00B9               	movwf	??_calculaDelta
  2148  0527  3000               	movlw	0
  2149  0528  1803               	skipnc
  2150  0529  3001               	movlw	1
  2151  052A  0753               	addwf	_angulo_atual+1,w
  2152  052B  01BB               	clrf	??_calculaDelta+2
  2153  052C  1803               	skipnc
  2154  052D  0ABB               	incf	??_calculaDelta+2,f
  2155  052E  1683               	bsf	3,5	;RP0=1, select bank1
  2156  052F  1303               	bcf	3,6	;RP1=0, select bank1
  2157  0530  0729               	addwf	(_angulo+1)^(0+128),w
  2158  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0533  00BA               	movwf	??_calculaDelta+1
  2161  0534  1803               	skipnc
  2162  0535  0ABB               	incf	??_calculaDelta+2,f
  2163  0536  0854               	movf	_angulo_atual+2,w
  2164  0537  073B               	addwf	??_calculaDelta+2,w
  2165  0538  01BC               	clrf	??_calculaDelta+3
  2166  0539  1803               	skipnc
  2167  053A  0ABC               	incf	??_calculaDelta+3,f
  2168  053B  1683               	bsf	3,5	;RP0=1, select bank1
  2169  053C  1303               	bcf	3,6	;RP1=0, select bank1
  2170  053D  072A               	addwf	(_angulo+2)^(0+128),w
  2171  053E  1283               	bcf	3,5	;RP0=0, select bank0
  2172  053F  1303               	bcf	3,6	;RP1=0, select bank0
  2173  0540  00BB               	movwf	??_calculaDelta+2
  2174  0541  1803               	skipnc
  2175  0542  0ABC               	incf	??_calculaDelta+3,f
  2176  0543  0855               	movf	_angulo_atual+3,w
  2177  0544  073C               	addwf	??_calculaDelta+3,w
  2178  0545  1683               	bsf	3,5	;RP0=1, select bank1
  2179  0546  1303               	bcf	3,6	;RP1=0, select bank1
  2180  0547  072B               	addwf	(_angulo+3)^(0+128),w
  2181  0548  1283               	bcf	3,5	;RP0=0, select bank0
  2182  0549  1303               	bcf	3,6	;RP1=0, select bank0
  2183  054A  00BC               	movwf	??_calculaDelta+3
  2184  054B                     L3:	
  2185  054B  083C               	movf	??_calculaDelta+3,w
  2186  054C  00D5               	movwf	_angulo_atual+3
  2187  054D  083B               	movf	??_calculaDelta+2,w
  2188  054E  00D4               	movwf	_angulo_atual+2
  2189  054F  083A               	movf	??_calculaDelta+1,w
  2190  0550  00D3               	movwf	_angulo_atual+1
  2191  0551  0839               	movf	??_calculaDelta,w
  2192  0552  00D2               	movwf	_angulo_atual
  2193  0553                     l139:	
  2194                           
  2195                           ;Main.c: 197: }
  2196                           ;Main.c: 201: div=valor;
  2197  0553  086B               	movf	_valor+3,w
  2198  0554  00E1               	movwf	_div+3
  2199  0555  086A               	movf	_valor+2,w
  2200  0556  00E0               	movwf	_div+2
  2201  0557  0869               	movf	_valor+1,w
  2202  0558  00DF               	movwf	_div+1
  2203  0559  0868               	movf	_valor,w
  2204  055A  00DE               	movwf	_div
  2205                           
  2206                           ;Main.c: 202: if(div>99){
  2207  055B  0861               	movf	_div+3,w
  2208  055C  1D03               	btfss	3,2
  2209  055D  2D6A               	goto	l1335
  2210  055E  0860               	movf	_div+2,w
  2211  055F  1D03               	btfss	3,2
  2212  0560  2D6A               	goto	l1335
  2213  0561  085F               	movf	_div+1,w
  2214  0562  1D03               	btfss	3,2
  2215  0563  2D6A               	goto	l1335
  2216  0564  3064               	movlw	100
  2217  0565  025E               	subwf	_div,w
  2218  0566  1D03               	skipz
  2219  0567  2D68               	goto	u1043
  2220  0568                     u1043:	
  2221  0568  1C03               	btfss	3,0
  2222  0569  2E00               	goto	l1337
  2223  056A                     l1335:	
  2224                           
  2225                           ;Main.c: 203: ang1=(int)(div/100);
  2226  056A  3000               	movlw	0
  2227  056B  00A3               	movwf	___lldiv@divisor+3
  2228  056C  3000               	movlw	0
  2229  056D  00A2               	movwf	___lldiv@divisor+2
  2230  056E  3000               	movlw	0
  2231  056F  00A1               	movwf	___lldiv@divisor+1
  2232  0570  3064               	movlw	100
  2233  0571  00A0               	movwf	___lldiv@divisor
  2234  0572  0861               	movf	_div+3,w
  2235  0573  00A7               	movwf	___lldiv@dividend+3
  2236  0574  0860               	movf	_div+2,w
  2237  0575  00A6               	movwf	___lldiv@dividend+2
  2238  0576  085F               	movf	_div+1,w
  2239  0577  00A5               	movwf	___lldiv@dividend+1
  2240  0578  085E               	movf	_div,w
  2241  0579  00A4               	movwf	___lldiv@dividend
  2242  057A  120A  158A  27A0  120A  118A  	fcall	___lldiv
  2243  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0581  0820               	movf	?___lldiv,w
  2246  0582  00B9               	movwf	??_calculaDelta
  2247  0583  0839               	movf	??_calculaDelta,w
  2248  0584  00EF               	movwf	_ang1
  2249                           
  2250                           ;Main.c: 204: ang2=(int)((div - ang1*100)/10);
  2251  0585  3000               	movlw	0
  2252  0586  00A3               	movwf	___lldiv@divisor+3
  2253  0587  3000               	movlw	0
  2254  0588  00A2               	movwf	___lldiv@divisor+2
  2255  0589  3000               	movlw	0
  2256  058A  00A1               	movwf	___lldiv@divisor+1
  2257  058B  300A               	movlw	10
  2258  058C  00A0               	movwf	___lldiv@divisor
  2259  058D  085E               	movf	_div,w
  2260  058E  00B9               	movwf	??_calculaDelta
  2261  058F  085F               	movf	_div+1,w
  2262  0590  00BA               	movwf	??_calculaDelta+1
  2263  0591  0860               	movf	_div+2,w
  2264  0592  00BB               	movwf	??_calculaDelta+2
  2265  0593  0861               	movf	_div+3,w
  2266  0594  00BC               	movwf	??_calculaDelta+3
  2267  0595  086F               	movf	_ang1,w
  2268  0596  00BD               	movwf	??_calculaDelta+4
  2269  0597  01BE               	clrf	??_calculaDelta+5
  2270  0598  083D               	movf	??_calculaDelta+4,w
  2271  0599  00F0               	movwf	___wmul@multiplier
  2272  059A  083E               	movf	??_calculaDelta+5,w
  2273  059B  00F1               	movwf	___wmul@multiplier+1
  2274  059C  3064               	movlw	100
  2275  059D  00F2               	movwf	___wmul@multiplicand
  2276  059E  3000               	movlw	0
  2277  059F  00F3               	movwf	___wmul@multiplicand+1
  2278  05A0  120A  118A  2004  120A  118A  	fcall	___wmul
  2279  05A5  0870               	movf	?___wmul,w
  2280  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  2281  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  2282  05A8  00BF               	movwf	??_calculaDelta+6
  2283  05A9  0871               	movf	?___wmul+1,w
  2284  05AA  00C0               	movwf	??_calculaDelta+7
  2285  05AB  3000               	movlw	0
  2286  05AC  1BC0               	btfsc	??_calculaDelta+7,7
  2287  05AD  30FF               	movlw	255
  2288  05AE  00C1               	movwf	??_calculaDelta+8
  2289  05AF  00C2               	movwf	??_calculaDelta+9
  2290  05B0  09BF               	comf	??_calculaDelta+6,f
  2291  05B1  09C0               	comf	??_calculaDelta+7,f
  2292  05B2  09C1               	comf	??_calculaDelta+8,f
  2293  05B3  09C2               	comf	??_calculaDelta+9,f
  2294  05B4  0ABF               	incf	??_calculaDelta+6,f
  2295  05B5  1903               	skipnz
  2296  05B6  0AC0               	incf	??_calculaDelta+7,f
  2297  05B7  1903               	skipnz
  2298  05B8  0AC1               	incf	??_calculaDelta+8,f
  2299  05B9  1903               	skipnz
  2300  05BA  0AC2               	incf	??_calculaDelta+9,f
  2301  05BB  083F               	movf	??_calculaDelta+6,w
  2302  05BC  07B9               	addwf	??_calculaDelta,f
  2303  05BD  0840               	movf	??_calculaDelta+7,w
  2304  05BE  1803               	skipnc
  2305  05BF  0F40               	incfsz	??_calculaDelta+7,w
  2306  05C0  2DC2               	goto	u1050
  2307  05C1  2DC3               	goto	u1051
  2308  05C2                     u1050:	
  2309  05C2  07BA               	addwf	??_calculaDelta+1,f
  2310  05C3                     u1051:	
  2311  05C3  0841               	movf	??_calculaDelta+8,w
  2312  05C4  1803               	skipnc
  2313  05C5  0F41               	incfsz	??_calculaDelta+8,w
  2314  05C6  2DC8               	goto	u1052
  2315  05C7  2DC9               	goto	u1053
  2316  05C8                     u1052:	
  2317  05C8  07BB               	addwf	??_calculaDelta+2,f
  2318  05C9                     u1053:	
  2319  05C9  0842               	movf	??_calculaDelta+9,w
  2320  05CA  1803               	skipnc
  2321  05CB  0A42               	incf	??_calculaDelta+9,w
  2322  05CC  07BC               	addwf	??_calculaDelta+3,f
  2323  05CD  083C               	movf	??_calculaDelta+3,w
  2324  05CE  00A7               	movwf	___lldiv@dividend+3
  2325  05CF  083B               	movf	??_calculaDelta+2,w
  2326  05D0  00A6               	movwf	___lldiv@dividend+2
  2327  05D1  083A               	movf	??_calculaDelta+1,w
  2328  05D2  00A5               	movwf	___lldiv@dividend+1
  2329  05D3  0839               	movf	??_calculaDelta,w
  2330  05D4  00A4               	movwf	___lldiv@dividend
  2331  05D5  120A  158A  27A0  120A  118A  	fcall	___lldiv
  2332  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2333  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2334  05DC  0820               	movf	?___lldiv,w
  2335  05DD  00C3               	movwf	??_calculaDelta+10
  2336  05DE  0843               	movf	??_calculaDelta+10,w
  2337  05DF  00EE               	movwf	_ang2
  2338                           
  2339                           ;Main.c: 205: ang3=(int)(div - ang1*100 - ang2*10);
  2340  05E0  300A               	movlw	10
  2341  05E1  00B9               	movwf	??_calculaDelta
  2342  05E2  0839               	movf	??_calculaDelta,w
  2343  05E3  00F0               	movwf	___bmul@multiplicand
  2344  05E4  086E               	movf	_ang2,w
  2345  05E5  120A  158A  25CC  120A  118A  	fcall	___bmul
  2346  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  2347  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  2348  05EC  00BA               	movwf	??_calculaDelta+1
  2349  05ED  3064               	movlw	100
  2350  05EE  00BB               	movwf	??_calculaDelta+2
  2351  05EF  083B               	movf	??_calculaDelta+2,w
  2352  05F0  00F0               	movwf	___bmul@multiplicand
  2353  05F1  086F               	movf	_ang1,w
  2354  05F2  120A  158A  25CC  120A  118A  	fcall	___bmul
  2355  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  2356  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  2357  05F9  073A               	addwf	??_calculaDelta+1,w
  2358  05FA  3AFF               	xorlw	255
  2359  05FB  3E01               	addlw	1
  2360  05FC  075E               	addwf	_div,w
  2361  05FD  00BC               	movwf	??_calculaDelta+3
  2362  05FE  083C               	movf	??_calculaDelta+3,w
  2363  05FF  2E60               	goto	L5
  2364  0600                     l1337:	
  2365                           ;Main.c: 206: }
  2366                           
  2367                           
  2368                           ;Main.c: 207: else if(div<100 & div>9) {
  2369  0600  0861               	movf	_div+3,w
  2370  0601  1D03               	btfss	3,2
  2371  0602  2E4C               	goto	l1347
  2372  0603  0860               	movf	_div+2,w
  2373  0604  1D03               	btfss	3,2
  2374  0605  2E4C               	goto	l1347
  2375  0606  085F               	movf	_div+1,w
  2376  0607  1D03               	btfss	3,2
  2377  0608  2E4C               	goto	l1347
  2378  0609  3064               	movlw	100
  2379  060A  025E               	subwf	_div,w
  2380  060B  1D03               	skipz
  2381  060C  2E0D               	goto	u1063
  2382  060D                     u1063:	
  2383  060D  1803               	btfsc	3,0
  2384  060E  2E4C               	goto	l1347
  2385  060F  0861               	movf	_div+3,w
  2386  0610  1D03               	btfss	3,2
  2387  0611  2E1E               	goto	l1341
  2388  0612  0860               	movf	_div+2,w
  2389  0613  1D03               	btfss	3,2
  2390  0614  2E1E               	goto	l1341
  2391  0615  085F               	movf	_div+1,w
  2392  0616  1D03               	btfss	3,2
  2393  0617  2E1E               	goto	l1341
  2394  0618  300A               	movlw	10
  2395  0619  025E               	subwf	_div,w
  2396  061A  1D03               	skipz
  2397  061B  2E1C               	goto	u1073
  2398  061C                     u1073:	
  2399  061C  1C03               	btfss	3,0
  2400  061D  2E4C               	goto	l1347
  2401  061E                     l1341:	
  2402                           
  2403                           ;Main.c: 208: ang1=0;
  2404  061E  01EF               	clrf	_ang1
  2405                           
  2406                           ;Main.c: 209: ang2=(int)(div/10);
  2407  061F  3000               	movlw	0
  2408  0620  00A3               	movwf	___lldiv@divisor+3
  2409  0621  3000               	movlw	0
  2410  0622  00A2               	movwf	___lldiv@divisor+2
  2411  0623  3000               	movlw	0
  2412  0624  00A1               	movwf	___lldiv@divisor+1
  2413  0625  300A               	movlw	10
  2414  0626  00A0               	movwf	___lldiv@divisor
  2415  0627  0861               	movf	_div+3,w
  2416  0628  00A7               	movwf	___lldiv@dividend+3
  2417  0629  0860               	movf	_div+2,w
  2418  062A  00A6               	movwf	___lldiv@dividend+2
  2419  062B  085F               	movf	_div+1,w
  2420  062C  00A5               	movwf	___lldiv@dividend+1
  2421  062D  085E               	movf	_div,w
  2422  062E  00A4               	movwf	___lldiv@dividend
  2423  062F  120A  158A  27A0  120A  118A  	fcall	___lldiv
  2424  0634  1283               	bcf	3,5	;RP0=0, select bank0
  2425  0635  1303               	bcf	3,6	;RP1=0, select bank0
  2426  0636  0820               	movf	?___lldiv,w
  2427  0637  00B9               	movwf	??_calculaDelta
  2428  0638  0839               	movf	??_calculaDelta,w
  2429  0639  00EE               	movwf	_ang2
  2430                           
  2431                           ;Main.c: 210: ang3=(int)(div-(ang2*10));
  2432  063A  300A               	movlw	10
  2433  063B  00B9               	movwf	??_calculaDelta
  2434  063C  0839               	movf	??_calculaDelta,w
  2435  063D  00F0               	movwf	___bmul@multiplicand
  2436  063E  086E               	movf	_ang2,w
  2437  063F  120A  158A  25CC  120A  118A  	fcall	___bmul
  2438  0644  3AFF               	xorlw	255
  2439  0645  3E01               	addlw	1
  2440  0646  1283               	bcf	3,5	;RP0=0, select bank0
  2441  0647  1303               	bcf	3,6	;RP1=0, select bank0
  2442  0648  075E               	addwf	_div,w
  2443  0649  00BA               	movwf	??_calculaDelta+1
  2444  064A  083A               	movf	??_calculaDelta+1,w
  2445  064B  2E60               	goto	L5
  2446  064C                     l1347:	
  2447                           ;Main.c: 211: }
  2448                           
  2449                           
  2450                           ;Main.c: 212: else if(div<10){
  2451  064C  0861               	movf	_div+3,w
  2452  064D  1D03               	btfss	3,2
  2453  064E  2E61               	goto	l1353
  2454  064F  0860               	movf	_div+2,w
  2455  0650  1D03               	btfss	3,2
  2456  0651  2E61               	goto	l1353
  2457  0652  085F               	movf	_div+1,w
  2458  0653  1D03               	btfss	3,2
  2459  0654  2E61               	goto	l1353
  2460  0655  300A               	movlw	10
  2461  0656  025E               	subwf	_div,w
  2462  0657  1D03               	skipz
  2463  0658  2E59               	goto	u1083
  2464  0659                     u1083:	
  2465  0659  1803               	btfsc	3,0
  2466  065A  2E61               	goto	l1353
  2467                           
  2468                           ;Main.c: 213: ang1=0;
  2469  065B  01EF               	clrf	_ang1
  2470                           
  2471                           ;Main.c: 214: ang2=0;
  2472  065C  01EE               	clrf	_ang2
  2473                           
  2474                           ;Main.c: 215: ang3=(div);
  2475  065D  085E               	movf	_div,w
  2476  065E  00B9               	movwf	??_calculaDelta
  2477  065F  0839               	movf	??_calculaDelta,w
  2478  0660                     L5:	
  2479  0660  00E7               	movwf	_ang3
  2480  0661                     l1353:	
  2481                           
  2482                           ;Main.c: 216: }
  2483                           ;Main.c: 218: if(angulo_atual>99){
  2484  0661  0855               	movf	_angulo_atual+3,w
  2485  0662  1D03               	btfss	3,2
  2486  0663  2E70               	goto	l1355
  2487  0664  0854               	movf	_angulo_atual+2,w
  2488  0665  1D03               	btfss	3,2
  2489  0666  2E70               	goto	l1355
  2490  0667  0853               	movf	_angulo_atual+1,w
  2491  0668  1D03               	btfss	3,2
  2492  0669  2E70               	goto	l1355
  2493  066A  3064               	movlw	100
  2494  066B  0252               	subwf	_angulo_atual,w
  2495  066C  1D03               	skipz
  2496  066D  2E6E               	goto	u1093
  2497  066E                     u1093:	
  2498  066E  1C03               	btfss	3,0
  2499  066F  2F06               	goto	l1357
  2500  0670                     l1355:	
  2501                           
  2502                           ;Main.c: 219: p1=(int)(angulo_atual/100);
  2503  0670  3000               	movlw	0
  2504  0671  00A3               	movwf	___lldiv@divisor+3
  2505  0672  3000               	movlw	0
  2506  0673  00A2               	movwf	___lldiv@divisor+2
  2507  0674  3000               	movlw	0
  2508  0675  00A1               	movwf	___lldiv@divisor+1
  2509  0676  3064               	movlw	100
  2510  0677  00A0               	movwf	___lldiv@divisor
  2511  0678  0855               	movf	_angulo_atual+3,w
  2512  0679  00A7               	movwf	___lldiv@dividend+3
  2513  067A  0854               	movf	_angulo_atual+2,w
  2514  067B  00A6               	movwf	___lldiv@dividend+2
  2515  067C  0853               	movf	_angulo_atual+1,w
  2516  067D  00A5               	movwf	___lldiv@dividend+1
  2517  067E  0852               	movf	_angulo_atual,w
  2518  067F  00A4               	movwf	___lldiv@dividend
  2519  0680  120A  158A  27A0  120A  118A  	fcall	___lldiv
  2520  0685  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0686  1303               	bcf	3,6	;RP1=0, select bank0
  2522  0687  0820               	movf	?___lldiv,w
  2523  0688  00B9               	movwf	??_calculaDelta
  2524  0689  0839               	movf	??_calculaDelta,w
  2525  068A  00ED               	movwf	_p1
  2526                           
  2527                           ;Main.c: 220: p2=(int)((angulo_atual - p1*100)/10);
  2528  068B  3000               	movlw	0
  2529  068C  00A3               	movwf	___lldiv@divisor+3
  2530  068D  3000               	movlw	0
  2531  068E  00A2               	movwf	___lldiv@divisor+2
  2532  068F  3000               	movlw	0
  2533  0690  00A1               	movwf	___lldiv@divisor+1
  2534  0691  300A               	movlw	10
  2535  0692  00A0               	movwf	___lldiv@divisor
  2536  0693  0852               	movf	_angulo_atual,w
  2537  0694  00B9               	movwf	??_calculaDelta
  2538  0695  0853               	movf	_angulo_atual+1,w
  2539  0696  00BA               	movwf	??_calculaDelta+1
  2540  0697  0854               	movf	_angulo_atual+2,w
  2541  0698  00BB               	movwf	??_calculaDelta+2
  2542  0699  0855               	movf	_angulo_atual+3,w
  2543  069A  00BC               	movwf	??_calculaDelta+3
  2544  069B  086D               	movf	_p1,w
  2545  069C  00BD               	movwf	??_calculaDelta+4
  2546  069D  01BE               	clrf	??_calculaDelta+5
  2547  069E  083D               	movf	??_calculaDelta+4,w
  2548  069F  00F0               	movwf	___wmul@multiplier
  2549  06A0  083E               	movf	??_calculaDelta+5,w
  2550  06A1  00F1               	movwf	___wmul@multiplier+1
  2551  06A2  3064               	movlw	100
  2552  06A3  00F2               	movwf	___wmul@multiplicand
  2553  06A4  3000               	movlw	0
  2554  06A5  00F3               	movwf	___wmul@multiplicand+1
  2555  06A6  120A  118A  2004  120A  118A  	fcall	___wmul
  2556  06AB  0870               	movf	?___wmul,w
  2557  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  2558  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  2559  06AE  00BF               	movwf	??_calculaDelta+6
  2560  06AF  0871               	movf	?___wmul+1,w
  2561  06B0  00C0               	movwf	??_calculaDelta+7
  2562  06B1  3000               	movlw	0
  2563  06B2  1BC0               	btfsc	??_calculaDelta+7,7
  2564  06B3  30FF               	movlw	255
  2565  06B4  00C1               	movwf	??_calculaDelta+8
  2566  06B5  00C2               	movwf	??_calculaDelta+9
  2567  06B6  09BF               	comf	??_calculaDelta+6,f
  2568  06B7  09C0               	comf	??_calculaDelta+7,f
  2569  06B8  09C1               	comf	??_calculaDelta+8,f
  2570  06B9  09C2               	comf	??_calculaDelta+9,f
  2571  06BA  0ABF               	incf	??_calculaDelta+6,f
  2572  06BB  1903               	skipnz
  2573  06BC  0AC0               	incf	??_calculaDelta+7,f
  2574  06BD  1903               	skipnz
  2575  06BE  0AC1               	incf	??_calculaDelta+8,f
  2576  06BF  1903               	skipnz
  2577  06C0  0AC2               	incf	??_calculaDelta+9,f
  2578  06C1  083F               	movf	??_calculaDelta+6,w
  2579  06C2  07B9               	addwf	??_calculaDelta,f
  2580  06C3  0840               	movf	??_calculaDelta+7,w
  2581  06C4  1803               	skipnc
  2582  06C5  0F40               	incfsz	??_calculaDelta+7,w
  2583  06C6  2EC8               	goto	u1100
  2584  06C7  2EC9               	goto	u1101
  2585  06C8                     u1100:	
  2586  06C8  07BA               	addwf	??_calculaDelta+1,f
  2587  06C9                     u1101:	
  2588  06C9  0841               	movf	??_calculaDelta+8,w
  2589  06CA  1803               	skipnc
  2590  06CB  0F41               	incfsz	??_calculaDelta+8,w
  2591  06CC  2ECE               	goto	u1102
  2592  06CD  2ECF               	goto	u1103
  2593  06CE                     u1102:	
  2594  06CE  07BB               	addwf	??_calculaDelta+2,f
  2595  06CF                     u1103:	
  2596  06CF  0842               	movf	??_calculaDelta+9,w
  2597  06D0  1803               	skipnc
  2598  06D1  0A42               	incf	??_calculaDelta+9,w
  2599  06D2  07BC               	addwf	??_calculaDelta+3,f
  2600  06D3  083C               	movf	??_calculaDelta+3,w
  2601  06D4  00A7               	movwf	___lldiv@dividend+3
  2602  06D5  083B               	movf	??_calculaDelta+2,w
  2603  06D6  00A6               	movwf	___lldiv@dividend+2
  2604  06D7  083A               	movf	??_calculaDelta+1,w
  2605  06D8  00A5               	movwf	___lldiv@dividend+1
  2606  06D9  0839               	movf	??_calculaDelta,w
  2607  06DA  00A4               	movwf	___lldiv@dividend
  2608  06DB  120A  158A  27A0  120A  118A  	fcall	___lldiv
  2609  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  2610  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  2611  06E2  0820               	movf	?___lldiv,w
  2612  06E3  00C3               	movwf	??_calculaDelta+10
  2613  06E4  0843               	movf	??_calculaDelta+10,w
  2614  06E5  00EC               	movwf	_p2
  2615                           
  2616                           ;Main.c: 221: p3=(int)(angulo_atual - p1*100 - p2*10);
  2617  06E6  300A               	movlw	10
  2618  06E7  00B9               	movwf	??_calculaDelta
  2619  06E8  0839               	movf	??_calculaDelta,w
  2620  06E9  00F0               	movwf	___bmul@multiplicand
  2621  06EA  086C               	movf	_p2,w
  2622  06EB  120A  158A  25CC  120A  118A  	fcall	___bmul
  2623  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  2624  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  2625  06F2  00BA               	movwf	??_calculaDelta+1
  2626  06F3  3064               	movlw	100
  2627  06F4  00BB               	movwf	??_calculaDelta+2
  2628  06F5  083B               	movf	??_calculaDelta+2,w
  2629  06F6  00F0               	movwf	___bmul@multiplicand
  2630  06F7  086D               	movf	_p1,w
  2631  06F8  120A  158A  25CC  120A  118A  	fcall	___bmul
  2632  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  2633  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  2634  06FF  073A               	addwf	??_calculaDelta+1,w
  2635  0700  3AFF               	xorlw	255
  2636  0701  3E01               	addlw	1
  2637  0702  0752               	addwf	_angulo_atual,w
  2638  0703  00BC               	movwf	??_calculaDelta+3
  2639  0704  083C               	movf	??_calculaDelta+3,w
  2640  0705  2F66               	goto	L7
  2641  0706                     l1357:	
  2642                           ;Main.c: 222: }
  2643                           
  2644                           
  2645                           ;Main.c: 223: else if(angulo_atual<100 & angulo_atual>9) {
  2646  0706  0855               	movf	_angulo_atual+3,w
  2647  0707  1D03               	btfss	3,2
  2648  0708  2F52               	goto	l1367
  2649  0709  0854               	movf	_angulo_atual+2,w
  2650  070A  1D03               	btfss	3,2
  2651  070B  2F52               	goto	l1367
  2652  070C  0853               	movf	_angulo_atual+1,w
  2653  070D  1D03               	btfss	3,2
  2654  070E  2F52               	goto	l1367
  2655  070F  3064               	movlw	100
  2656  0710  0252               	subwf	_angulo_atual,w
  2657  0711  1D03               	skipz
  2658  0712  2F13               	goto	u1113
  2659  0713                     u1113:	
  2660  0713  1803               	btfsc	3,0
  2661  0714  2F52               	goto	l1367
  2662  0715  0855               	movf	_angulo_atual+3,w
  2663  0716  1D03               	btfss	3,2
  2664  0717  2F24               	goto	l1361
  2665  0718  0854               	movf	_angulo_atual+2,w
  2666  0719  1D03               	btfss	3,2
  2667  071A  2F24               	goto	l1361
  2668  071B  0853               	movf	_angulo_atual+1,w
  2669  071C  1D03               	btfss	3,2
  2670  071D  2F24               	goto	l1361
  2671  071E  300A               	movlw	10
  2672  071F  0252               	subwf	_angulo_atual,w
  2673  0720  1D03               	skipz
  2674  0721  2F22               	goto	u1123
  2675  0722                     u1123:	
  2676  0722  1C03               	btfss	3,0
  2677  0723  2F52               	goto	l1367
  2678  0724                     l1361:	
  2679                           
  2680                           ;Main.c: 224: p1=0;
  2681  0724  01ED               	clrf	_p1
  2682                           
  2683                           ;Main.c: 225: p2=(int)(angulo_atual/10);
  2684  0725  3000               	movlw	0
  2685  0726  00A3               	movwf	___lldiv@divisor+3
  2686  0727  3000               	movlw	0
  2687  0728  00A2               	movwf	___lldiv@divisor+2
  2688  0729  3000               	movlw	0
  2689  072A  00A1               	movwf	___lldiv@divisor+1
  2690  072B  300A               	movlw	10
  2691  072C  00A0               	movwf	___lldiv@divisor
  2692  072D  0855               	movf	_angulo_atual+3,w
  2693  072E  00A7               	movwf	___lldiv@dividend+3
  2694  072F  0854               	movf	_angulo_atual+2,w
  2695  0730  00A6               	movwf	___lldiv@dividend+2
  2696  0731  0853               	movf	_angulo_atual+1,w
  2697  0732  00A5               	movwf	___lldiv@dividend+1
  2698  0733  0852               	movf	_angulo_atual,w
  2699  0734  00A4               	movwf	___lldiv@dividend
  2700  0735  120A  158A  27A0  120A  118A  	fcall	___lldiv
  2701  073A  1283               	bcf	3,5	;RP0=0, select bank0
  2702  073B  1303               	bcf	3,6	;RP1=0, select bank0
  2703  073C  0820               	movf	?___lldiv,w
  2704  073D  00B9               	movwf	??_calculaDelta
  2705  073E  0839               	movf	??_calculaDelta,w
  2706  073F  00EC               	movwf	_p2
  2707                           
  2708                           ;Main.c: 226: p3=(int)(angulo_atual-p2*10);
  2709  0740  300A               	movlw	10
  2710  0741  00B9               	movwf	??_calculaDelta
  2711  0742  0839               	movf	??_calculaDelta,w
  2712  0743  00F0               	movwf	___bmul@multiplicand
  2713  0744  086C               	movf	_p2,w
  2714  0745  120A  158A  25CC  120A  118A  	fcall	___bmul
  2715  074A  3AFF               	xorlw	255
  2716  074B  3E01               	addlw	1
  2717  074C  1283               	bcf	3,5	;RP0=0, select bank0
  2718  074D  1303               	bcf	3,6	;RP1=0, select bank0
  2719  074E  0752               	addwf	_angulo_atual,w
  2720  074F  00BA               	movwf	??_calculaDelta+1
  2721  0750  083A               	movf	??_calculaDelta+1,w
  2722  0751  2F66               	goto	L7
  2723  0752                     l1367:	
  2724                           ;Main.c: 227: }
  2725                           
  2726                           
  2727                           ;Main.c: 228: else if(angulo_atual<10){
  2728  0752  0855               	movf	_angulo_atual+3,w
  2729  0753  1D03               	btfss	3,2
  2730  0754  2F67               	goto	l1373
  2731  0755  0854               	movf	_angulo_atual+2,w
  2732  0756  1D03               	btfss	3,2
  2733  0757  2F67               	goto	l1373
  2734  0758  0853               	movf	_angulo_atual+1,w
  2735  0759  1D03               	btfss	3,2
  2736  075A  2F67               	goto	l1373
  2737  075B  300A               	movlw	10
  2738  075C  0252               	subwf	_angulo_atual,w
  2739  075D  1D03               	skipz
  2740  075E  2F5F               	goto	u1133
  2741  075F                     u1133:	
  2742  075F  1803               	btfsc	3,0
  2743  0760  2F67               	goto	l1373
  2744                           
  2745                           ;Main.c: 229: p1=0;
  2746  0761  01ED               	clrf	_p1
  2747                           
  2748                           ;Main.c: 230: p2=0;
  2749  0762  01EC               	clrf	_p2
  2750                           
  2751                           ;Main.c: 231: p3=(angulo_atual);
  2752  0763  0852               	movf	_angulo_atual,w
  2753  0764  00B9               	movwf	??_calculaDelta
  2754  0765  0839               	movf	??_calculaDelta,w
  2755  0766                     L7:	
  2756  0766  00E6               	movwf	_p3
  2757  0767                     l1373:	
  2758                           
  2759                           ;Main.c: 232: }
  2760                           ;Main.c: 235: if(polaridade == '-')
  2761  0767  302D               	movlw	45
  2762  0768  0644               	xorwf	calculaDelta@polaridade,w
  2763  0769  1D03               	btfss	3,2
  2764  076A  2FA1               	goto	l1377
  2765                           
  2766                           ;Main.c: 236: {
  2767                           ;Main.c: 237: sentido_anti_horario_wave_step(angulo,velocidade);
  2768  076B  1683               	bsf	3,5	;RP0=1, select bank1
  2769  076C  1303               	bcf	3,6	;RP1=0, select bank1
  2770  076D  082B               	movf	(_angulo+3)^(0+128),w
  2771  076E  1283               	bcf	3,5	;RP0=0, select bank0
  2772  076F  1303               	bcf	3,6	;RP1=0, select bank0
  2773  0770  00B0               	movwf	sentido_anti_horario_wave_step@g+3
  2774  0771  1683               	bsf	3,5	;RP0=1, select bank1
  2775  0772  1303               	bcf	3,6	;RP1=0, select bank1
  2776  0773  082A               	movf	(_angulo+2)^(0+128),w
  2777  0774  1283               	bcf	3,5	;RP0=0, select bank0
  2778  0775  1303               	bcf	3,6	;RP1=0, select bank0
  2779  0776  00AF               	movwf	sentido_anti_horario_wave_step@g+2
  2780  0777  1683               	bsf	3,5	;RP0=1, select bank1
  2781  0778  1303               	bcf	3,6	;RP1=0, select bank1
  2782  0779  0829               	movf	(_angulo+1)^(0+128),w
  2783  077A  1283               	bcf	3,5	;RP0=0, select bank0
  2784  077B  1303               	bcf	3,6	;RP1=0, select bank0
  2785  077C  00AE               	movwf	sentido_anti_horario_wave_step@g+1
  2786  077D  1683               	bsf	3,5	;RP0=1, select bank1
  2787  077E  1303               	bcf	3,6	;RP1=0, select bank1
  2788  077F  0828               	movf	_angulo^(0+128),w
  2789  0780  1283               	bcf	3,5	;RP0=0, select bank0
  2790  0781  1303               	bcf	3,6	;RP1=0, select bank0
  2791  0782  00AD               	movwf	sentido_anti_horario_wave_step@g
  2792  0783  1683               	bsf	3,5	;RP0=1, select bank1
  2793  0784  1303               	bcf	3,6	;RP1=0, select bank1
  2794  0785  083D               	movf	(_velocidade+3)^(0+128),w
  2795  0786  1283               	bcf	3,5	;RP0=0, select bank0
  2796  0787  1303               	bcf	3,6	;RP1=0, select bank0
  2797  0788  00B4               	movwf	sentido_anti_horario_wave_step@x+3
  2798  0789  1683               	bsf	3,5	;RP0=1, select bank1
  2799  078A  1303               	bcf	3,6	;RP1=0, select bank1
  2800  078B  083C               	movf	(_velocidade+2)^(0+128),w
  2801  078C  1283               	bcf	3,5	;RP0=0, select bank0
  2802  078D  1303               	bcf	3,6	;RP1=0, select bank0
  2803  078E  00B3               	movwf	sentido_anti_horario_wave_step@x+2
  2804  078F  1683               	bsf	3,5	;RP0=1, select bank1
  2805  0790  1303               	bcf	3,6	;RP1=0, select bank1
  2806  0791  083B               	movf	(_velocidade+1)^(0+128),w
  2807  0792  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0793  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0794  00B2               	movwf	sentido_anti_horario_wave_step@x+1
  2810  0795  1683               	bsf	3,5	;RP0=1, select bank1
  2811  0796  1303               	bcf	3,6	;RP1=0, select bank1
  2812  0797  083A               	movf	_velocidade^(0+128),w
  2813  0798  1283               	bcf	3,5	;RP0=0, select bank0
  2814  0799  1303               	bcf	3,6	;RP1=0, select bank0
  2815  079A  00B1               	movwf	sentido_anti_horario_wave_step@x
  2816  079B  120A  118A  20A4  120A  118A  	fcall	_sentido_anti_horario_wave_step
  2817                           
  2818                           ;Main.c: 238: }
  2819  07A0  2FDC               	goto	l152
  2820  07A1                     l1377:	
  2821                           
  2822                           ;Main.c: 239: else if(polaridade == '+')
  2823  07A1  302B               	movlw	43
  2824  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  2825  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  2826  07A4  0644               	xorwf	calculaDelta@polaridade,w
  2827  07A5  1D03               	btfss	3,2
  2828  07A6  2FDC               	goto	l152
  2829                           
  2830                           ;Main.c: 240: {
  2831                           ;Main.c: 241: sentido_horario_wave_step(angulo,velocidade);
  2832  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  2833  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  2834  07A9  082B               	movf	(_angulo+3)^(0+128),w
  2835  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  2836  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  2837  07AC  00B0               	movwf	sentido_horario_wave_step@g+3
  2838  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  2839  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  2840  07AF  082A               	movf	(_angulo+2)^(0+128),w
  2841  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  2842  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  2843  07B2  00AF               	movwf	sentido_horario_wave_step@g+2
  2844  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  2845  07B4  1303               	bcf	3,6	;RP1=0, select bank1
  2846  07B5  0829               	movf	(_angulo+1)^(0+128),w
  2847  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  2848  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  2849  07B8  00AE               	movwf	sentido_horario_wave_step@g+1
  2850  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  2851  07BA  1303               	bcf	3,6	;RP1=0, select bank1
  2852  07BB  0828               	movf	_angulo^(0+128),w
  2853  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  2854  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  2855  07BE  00AD               	movwf	sentido_horario_wave_step@g
  2856  07BF  1683               	bsf	3,5	;RP0=1, select bank1
  2857  07C0  1303               	bcf	3,6	;RP1=0, select bank1
  2858  07C1  083D               	movf	(_velocidade+3)^(0+128),w
  2859  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  2860  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  2861  07C4  00B4               	movwf	sentido_horario_wave_step@x+3
  2862  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  2863  07C6  1303               	bcf	3,6	;RP1=0, select bank1
  2864  07C7  083C               	movf	(_velocidade+2)^(0+128),w
  2865  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  2866  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  2867  07CA  00B3               	movwf	sentido_horario_wave_step@x+2
  2868  07CB  1683               	bsf	3,5	;RP0=1, select bank1
  2869  07CC  1303               	bcf	3,6	;RP1=0, select bank1
  2870  07CD  083B               	movf	(_velocidade+1)^(0+128),w
  2871  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2872  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2873  07D0  00B2               	movwf	sentido_horario_wave_step@x+1
  2874  07D1  1683               	bsf	3,5	;RP0=1, select bank1
  2875  07D2  1303               	bcf	3,6	;RP1=0, select bank1
  2876  07D3  083A               	movf	_velocidade^(0+128),w
  2877  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  2878  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  2879  07D6  00B1               	movwf	sentido_horario_wave_step@x
  2880  07D7  120A  118A  21D8  120A  118A  	fcall	_sentido_horario_wave_step
  2881  07DC                     l152:	
  2882                           
  2883                           ;Main.c: 242: }
  2884                           ;Main.c: 244: apresenta();
  2885  07DC  120A  158A  2750   	fcall	_apresenta
  2886  07DF  0008               	return
  2887  07E0                     __end_of_calculaDelta:	
  2888                           
  2889                           	psect	text8
  2890  01D8                     __ptext8:	
  2891 ;; *************** function _sentido_horario_wave_step *****************
  2892 ;; Defined at:
  2893 ;;		line 65 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\stepper.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  g               4   13[BANK0 ] unsigned long 
  2896 ;;  x               4   17[BANK0 ] unsigned long 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;  move_horario    4   21[BANK0 ] unsigned char [4]
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0, pclath, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2908 ;;      Params:         0       8       0       0       0
  2909 ;;      Locals:         0       4       0       0       0
  2910 ;;      Temps:          0       0       0       0       0
  2911 ;;      Totals:         0      12       0       0       0
  2912 ;;Total ram usage:       12 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:    1
  2915 ;; This function calls:
  2916 ;;		___lldiv
  2917 ;;		___lmul
  2918 ;; This function is called by:
  2919 ;;		_calculaDelta
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           
  2924                           ;psect for function _sentido_horario_wave_step
  2925  01D8                     _sentido_horario_wave_step:	
  2926                           
  2927                           ;stepper.c: 70: char move_horario[4] = {0b00001100,0b00000110,0b00000011, 0b00001001};
  2928                           
  2929                           ;incstack = 0
  2930                           ; Regs used in _sentido_horario_wave_step: [wreg+status,2+status,0+pclath+cstack]
  2931  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2932  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2933  01DA  0839               	movf	(sentido_horario_wave_step@F1713+3)^(0+128),w
  2934  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2935  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2936  01DD  00B8               	movwf	sentido_horario_wave_step@move_horario+3
  2937  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  2938  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  2939  01E0  0838               	movf	(sentido_horario_wave_step@F1713+2)^(0+128),w
  2940  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2941  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  2942  01E3  00B7               	movwf	sentido_horario_wave_step@move_horario+2
  2943  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  2944  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  2945  01E6  0837               	movf	(sentido_horario_wave_step@F1713+1)^(0+128),w
  2946  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2947  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2948  01E9  00B6               	movwf	sentido_horario_wave_step@move_horario+1
  2949  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  2950  01EB  1303               	bcf	3,6	;RP1=0, select bank1
  2951  01EC  0836               	movf	sentido_horario_wave_step@F1713^(0+128),w
  2952  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2953  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2954  01EF  00B5               	movwf	sentido_horario_wave_step@move_horario
  2955                           
  2956                           ;stepper.c: 72: p = (int)((g*140)/100);
  2957  01F0  3000               	movlw	0
  2958  01F1  00A3               	movwf	___lldiv@divisor+3
  2959  01F2  3000               	movlw	0
  2960  01F3  00A2               	movwf	___lldiv@divisor+2
  2961  01F4  3000               	movlw	0
  2962  01F5  00A1               	movwf	___lldiv@divisor+1
  2963  01F6  3064               	movlw	100
  2964  01F7  00A0               	movwf	___lldiv@divisor
  2965  01F8  0830               	movf	sentido_horario_wave_step@g+3,w
  2966  01F9  00F3               	movwf	___lmul@multiplier+3
  2967  01FA  082F               	movf	sentido_horario_wave_step@g+2,w
  2968  01FB  00F2               	movwf	___lmul@multiplier+2
  2969  01FC  082E               	movf	sentido_horario_wave_step@g+1,w
  2970  01FD  00F1               	movwf	___lmul@multiplier+1
  2971  01FE  082D               	movf	sentido_horario_wave_step@g,w
  2972  01FF  00F0               	movwf	___lmul@multiplier
  2973  0200  3000               	movlw	0
  2974  0201  00F7               	movwf	___lmul@multiplicand+3
  2975  0202  3000               	movlw	0
  2976  0203  00F6               	movwf	___lmul@multiplicand+2
  2977  0204  3000               	movlw	0
  2978  0205  00F5               	movwf	___lmul@multiplicand+1
  2979  0206  308C               	movlw	140
  2980  0207  00F4               	movwf	___lmul@multiplicand
  2981  0208  120A  158A  2711  120A  118A  	fcall	___lmul
  2982  020D  0873               	movf	?___lmul+3,w
  2983  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2984  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2985  0210  00A7               	movwf	___lldiv@dividend+3
  2986  0211  0872               	movf	?___lmul+2,w
  2987  0212  00A6               	movwf	___lldiv@dividend+2
  2988  0213  0871               	movf	?___lmul+1,w
  2989  0214  00A5               	movwf	___lldiv@dividend+1
  2990  0215  0870               	movf	?___lmul,w
  2991  0216  00A4               	movwf	___lldiv@dividend
  2992  0217  120A  158A  27A0  120A  118A  	fcall	___lldiv
  2993  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2994  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2995  021E  0820               	movf	?___lldiv,w
  2996  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2997  0220  1303               	bcf	3,6	;RP1=0, select bank1
  2998  0221  00A0               	movwf	_p^(0+128)
  2999  0222  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0223  1303               	bcf	3,6	;RP1=0, select bank0
  3001  0224  0821               	movf	?___lldiv+1,w
  3002  0225  1683               	bsf	3,5	;RP0=1, select bank1
  3003  0226  1303               	bcf	3,6	;RP1=0, select bank1
  3004  0227  00A1               	movwf	(_p+1)^(0+128)
  3005  0228  3000               	movlw	0
  3006  0229  1BA1               	btfsc	(_p+1)^(0+128),7
  3007  022A  30FF               	movlw	255
  3008  022B  00A2               	movwf	(_p+2)^(0+128)
  3009  022C  00A3               	movwf	(_p+3)^(0+128)
  3010                           
  3011                           ;stepper.c: 74: for (i = 0; i < p; i++)
  3012  022D  3000               	movlw	0
  3013  022E  00A7               	movwf	(_i+3)^(0+128)
  3014  022F  3000               	movlw	0
  3015  0230  00A6               	movwf	(_i+2)^(0+128)
  3016  0231  3000               	movlw	0
  3017  0232  00A5               	movwf	(_i+1)^(0+128)
  3018  0233  3000               	movlw	0
  3019  0234  00A4               	movwf	_i^(0+128)
  3020  0235                     l234:	
  3021  0235  0823               	movf	(_p+3)^(0+128),w
  3022  0236  0227               	subwf	(_i+3)^(0+128),w
  3023  0237  1D03               	skipz
  3024  0238  2A43               	goto	u885
  3025  0239  0822               	movf	(_p+2)^(0+128),w
  3026  023A  0226               	subwf	(_i+2)^(0+128),w
  3027  023B  1D03               	skipz
  3028  023C  2A43               	goto	u885
  3029  023D  0821               	movf	(_p+1)^(0+128),w
  3030  023E  0225               	subwf	(_i+1)^(0+128),w
  3031  023F  1D03               	skipz
  3032  0240  2A43               	goto	u885
  3033  0241  0820               	movf	_p^(0+128),w
  3034  0242  0224               	subwf	_i^(0+128),w
  3035  0243                     u885:	
  3036  0243  1803               	btfsc	3,0
  3037  0244  2B08               	goto	l1253
  3038                           
  3039                           ;stepper.c: 75: {
  3040                           ;stepper.c: 76: PORTD=move_horario[0];
  3041  0245  1283               	bcf	3,5	;RP0=0, select bank0
  3042  0246  1303               	bcf	3,6	;RP1=0, select bank0
  3043  0247  0835               	movf	sentido_horario_wave_step@move_horario,w
  3044  0248  0088               	movwf	8	;volatile
  3045                           
  3046                           ;stepper.c: 77: for (j = 0; j < x; j++)
  3047  0249  3000               	movlw	0
  3048  024A  00D1               	movwf	_j+3
  3049  024B  3000               	movlw	0
  3050  024C  00D0               	movwf	_j+2
  3051  024D  3000               	movlw	0
  3052  024E  00CF               	movwf	_j+1
  3053  024F  3000               	movlw	0
  3054  0250  00CE               	movwf	_j
  3055  0251                     l236:	
  3056  0251  0834               	movf	sentido_horario_wave_step@x+3,w
  3057  0252  0251               	subwf	_j+3,w
  3058  0253  1D03               	skipz
  3059  0254  2A5F               	goto	u845
  3060  0255  0833               	movf	sentido_horario_wave_step@x+2,w
  3061  0256  0250               	subwf	_j+2,w
  3062  0257  1D03               	skipz
  3063  0258  2A5F               	goto	u845
  3064  0259  0832               	movf	sentido_horario_wave_step@x+1,w
  3065  025A  024F               	subwf	_j+1,w
  3066  025B  1D03               	skipz
  3067  025C  2A5F               	goto	u845
  3068  025D  0831               	movf	sentido_horario_wave_step@x,w
  3069  025E  024E               	subwf	_j,w
  3070  025F                     u845:	
  3071  025F  1803               	btfsc	3,0
  3072  0260  2A73               	goto	l1239
  3073                           
  3074                           ;stepper.c: 78: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3075  0261  0000               	nop
  3076  0262  3001               	movlw	1
  3077  0263  1283               	bcf	3,5	;RP0=0, select bank0
  3078  0264  1303               	bcf	3,6	;RP1=0, select bank0
  3079  0265  07CE               	addwf	_j,f
  3080  0266  3000               	movlw	0
  3081  0267  1803               	skipnc
  3082  0268  3001               	movlw	1
  3083  0269  07CF               	addwf	_j+1,f
  3084  026A  3000               	movlw	0
  3085  026B  1803               	skipnc
  3086  026C  3001               	movlw	1
  3087  026D  07D0               	addwf	_j+2,f
  3088  026E  3000               	movlw	0
  3089  026F  1803               	skipnc
  3090  0270  3001               	movlw	1
  3091  0271  07D1               	addwf	_j+3,f
  3092  0272  2A51               	goto	l236
  3093  0273                     l1239:	
  3094                           
  3095                           ;stepper.c: 80: PORTD=move_horario[1];
  3096  0273  0836               	movf	sentido_horario_wave_step@move_horario+1,w
  3097  0274  0088               	movwf	8	;volatile
  3098                           
  3099                           ;stepper.c: 81: for (j = 0; j < x; j++)
  3100  0275  3000               	movlw	0
  3101  0276  00D1               	movwf	_j+3
  3102  0277  3000               	movlw	0
  3103  0278  00D0               	movwf	_j+2
  3104  0279  3000               	movlw	0
  3105  027A  00CF               	movwf	_j+1
  3106  027B  3000               	movlw	0
  3107  027C  00CE               	movwf	_j
  3108  027D                     l239:	
  3109  027D  0834               	movf	sentido_horario_wave_step@x+3,w
  3110  027E  0251               	subwf	_j+3,w
  3111  027F  1D03               	skipz
  3112  0280  2A8B               	goto	u855
  3113  0281  0833               	movf	sentido_horario_wave_step@x+2,w
  3114  0282  0250               	subwf	_j+2,w
  3115  0283  1D03               	skipz
  3116  0284  2A8B               	goto	u855
  3117  0285  0832               	movf	sentido_horario_wave_step@x+1,w
  3118  0286  024F               	subwf	_j+1,w
  3119  0287  1D03               	skipz
  3120  0288  2A8B               	goto	u855
  3121  0289  0831               	movf	sentido_horario_wave_step@x,w
  3122  028A  024E               	subwf	_j,w
  3123  028B                     u855:	
  3124  028B  1803               	btfsc	3,0
  3125  028C  2A9F               	goto	l1243
  3126                           
  3127                           ;stepper.c: 82: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3128  028D  0000               	nop
  3129  028E  3001               	movlw	1
  3130  028F  1283               	bcf	3,5	;RP0=0, select bank0
  3131  0290  1303               	bcf	3,6	;RP1=0, select bank0
  3132  0291  07CE               	addwf	_j,f
  3133  0292  3000               	movlw	0
  3134  0293  1803               	skipnc
  3135  0294  3001               	movlw	1
  3136  0295  07CF               	addwf	_j+1,f
  3137  0296  3000               	movlw	0
  3138  0297  1803               	skipnc
  3139  0298  3001               	movlw	1
  3140  0299  07D0               	addwf	_j+2,f
  3141  029A  3000               	movlw	0
  3142  029B  1803               	skipnc
  3143  029C  3001               	movlw	1
  3144  029D  07D1               	addwf	_j+3,f
  3145  029E  2A7D               	goto	l239
  3146  029F                     l1243:	
  3147                           
  3148                           ;stepper.c: 84: PORTD=move_horario[2];
  3149  029F  0837               	movf	sentido_horario_wave_step@move_horario+2,w
  3150  02A0  0088               	movwf	8	;volatile
  3151                           
  3152                           ;stepper.c: 85: for (j = 0; j < x; j++)
  3153  02A1  3000               	movlw	0
  3154  02A2  00D1               	movwf	_j+3
  3155  02A3  3000               	movlw	0
  3156  02A4  00D0               	movwf	_j+2
  3157  02A5  3000               	movlw	0
  3158  02A6  00CF               	movwf	_j+1
  3159  02A7  3000               	movlw	0
  3160  02A8  00CE               	movwf	_j
  3161  02A9                     l242:	
  3162  02A9  0834               	movf	sentido_horario_wave_step@x+3,w
  3163  02AA  0251               	subwf	_j+3,w
  3164  02AB  1D03               	skipz
  3165  02AC  2AB7               	goto	u865
  3166  02AD  0833               	movf	sentido_horario_wave_step@x+2,w
  3167  02AE  0250               	subwf	_j+2,w
  3168  02AF  1D03               	skipz
  3169  02B0  2AB7               	goto	u865
  3170  02B1  0832               	movf	sentido_horario_wave_step@x+1,w
  3171  02B2  024F               	subwf	_j+1,w
  3172  02B3  1D03               	skipz
  3173  02B4  2AB7               	goto	u865
  3174  02B5  0831               	movf	sentido_horario_wave_step@x,w
  3175  02B6  024E               	subwf	_j,w
  3176  02B7                     u865:	
  3177  02B7  1803               	btfsc	3,0
  3178  02B8  2ACB               	goto	l1247
  3179                           
  3180                           ;stepper.c: 86: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3181  02B9  0000               	nop
  3182  02BA  3001               	movlw	1
  3183  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  3184  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  3185  02BD  07CE               	addwf	_j,f
  3186  02BE  3000               	movlw	0
  3187  02BF  1803               	skipnc
  3188  02C0  3001               	movlw	1
  3189  02C1  07CF               	addwf	_j+1,f
  3190  02C2  3000               	movlw	0
  3191  02C3  1803               	skipnc
  3192  02C4  3001               	movlw	1
  3193  02C5  07D0               	addwf	_j+2,f
  3194  02C6  3000               	movlw	0
  3195  02C7  1803               	skipnc
  3196  02C8  3001               	movlw	1
  3197  02C9  07D1               	addwf	_j+3,f
  3198  02CA  2AA9               	goto	l242
  3199  02CB                     l1247:	
  3200                           
  3201                           ;stepper.c: 88: PORTD=move_horario[3];
  3202  02CB  0838               	movf	sentido_horario_wave_step@move_horario+3,w
  3203  02CC  0088               	movwf	8	;volatile
  3204                           
  3205                           ;stepper.c: 89: for (j = 0; j < x; j++)
  3206  02CD  3000               	movlw	0
  3207  02CE  00D1               	movwf	_j+3
  3208  02CF  3000               	movlw	0
  3209  02D0  00D0               	movwf	_j+2
  3210  02D1  3000               	movlw	0
  3211  02D2  00CF               	movwf	_j+1
  3212  02D3  3000               	movlw	0
  3213  02D4  00CE               	movwf	_j
  3214  02D5                     l245:	
  3215  02D5  0834               	movf	sentido_horario_wave_step@x+3,w
  3216  02D6  0251               	subwf	_j+3,w
  3217  02D7  1D03               	skipz
  3218  02D8  2AE3               	goto	u875
  3219  02D9  0833               	movf	sentido_horario_wave_step@x+2,w
  3220  02DA  0250               	subwf	_j+2,w
  3221  02DB  1D03               	skipz
  3222  02DC  2AE3               	goto	u875
  3223  02DD  0832               	movf	sentido_horario_wave_step@x+1,w
  3224  02DE  024F               	subwf	_j+1,w
  3225  02DF  1D03               	skipz
  3226  02E0  2AE3               	goto	u875
  3227  02E1  0831               	movf	sentido_horario_wave_step@x,w
  3228  02E2  024E               	subwf	_j,w
  3229  02E3                     u875:	
  3230  02E3  1803               	btfsc	3,0
  3231  02E4  2AF7               	goto	l1251
  3232                           
  3233                           ;stepper.c: 90: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3234  02E5  0000               	nop
  3235  02E6  3001               	movlw	1
  3236  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  3237  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  3238  02E9  07CE               	addwf	_j,f
  3239  02EA  3000               	movlw	0
  3240  02EB  1803               	skipnc
  3241  02EC  3001               	movlw	1
  3242  02ED  07CF               	addwf	_j+1,f
  3243  02EE  3000               	movlw	0
  3244  02EF  1803               	skipnc
  3245  02F0  3001               	movlw	1
  3246  02F1  07D0               	addwf	_j+2,f
  3247  02F2  3000               	movlw	0
  3248  02F3  1803               	skipnc
  3249  02F4  3001               	movlw	1
  3250  02F5  07D1               	addwf	_j+3,f
  3251  02F6  2AD5               	goto	l245
  3252  02F7                     l1251:	
  3253  02F7  3001               	movlw	1
  3254  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  3255  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  3256  02FA  07A4               	addwf	_i^(0+128),f
  3257  02FB  3000               	movlw	0
  3258  02FC  1803               	skipnc
  3259  02FD  3001               	movlw	1
  3260  02FE  07A5               	addwf	(_i+1)^(0+128),f
  3261  02FF  3000               	movlw	0
  3262  0300  1803               	skipnc
  3263  0301  3001               	movlw	1
  3264  0302  07A6               	addwf	(_i+2)^(0+128),f
  3265  0303  3000               	movlw	0
  3266  0304  1803               	skipnc
  3267  0305  3001               	movlw	1
  3268  0306  07A7               	addwf	(_i+3)^(0+128),f
  3269  0307  2A35               	goto	l234
  3270  0308                     l1253:	
  3271                           
  3272                           ;stepper.c: 91: }
  3273                           ;stepper.c: 93: PORTD=0x00;
  3274  0308  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0309  1303               	bcf	3,6	;RP1=0, select bank0
  3276  030A  0188               	clrf	8	;volatile
  3277  030B  0008               	return
  3278  030C                     __end_of_sentido_horario_wave_step:	
  3279                           
  3280                           	psect	text9
  3281  00A4                     __ptext9:	
  3282 ;; *************** function _sentido_anti_horario_wave_step *****************
  3283 ;; Defined at:
  3284 ;;		line 96 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\stepper.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  g               4   13[BANK0 ] unsigned long 
  3287 ;;  x               4   17[BANK0 ] unsigned long 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  move_anti_ho    4   21[BANK0 ] unsigned char [4]
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0, pclath, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3299 ;;      Params:         0       8       0       0       0
  3300 ;;      Locals:         0       4       0       0       0
  3301 ;;      Temps:          0       0       0       0       0
  3302 ;;      Totals:         0      12       0       0       0
  3303 ;;Total ram usage:       12 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    1
  3306 ;; This function calls:
  3307 ;;		___lldiv
  3308 ;;		___lmul
  3309 ;; This function is called by:
  3310 ;;		_calculaDelta
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           
  3315                           ;psect for function _sentido_anti_horario_wave_step
  3316  00A4                     _sentido_anti_horario_wave_step:	
  3317                           
  3318                           ;stepper.c: 101: char move_anti_horario[4] = {0b00001001,0b00000011,0b00000110,0b0000110
      +                          0};
  3319                           
  3320                           ;incstack = 0
  3321                           ; Regs used in _sentido_anti_horario_wave_step: [wreg+status,2+status,0+pclath+cstack]
  3322  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  3323  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  3324  00A6  0835               	movf	(sentido_anti_horario_wave_step@F1722+3)^(0+128),w
  3325  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  3326  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  3327  00A9  00B8               	movwf	sentido_anti_horario_wave_step@move_anti_horario+3
  3328  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  3329  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  3330  00AC  0834               	movf	(sentido_anti_horario_wave_step@F1722+2)^(0+128),w
  3331  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  3332  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  3333  00AF  00B7               	movwf	sentido_anti_horario_wave_step@move_anti_horario+2
  3334  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  3335  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  3336  00B2  0833               	movf	(sentido_anti_horario_wave_step@F1722+1)^(0+128),w
  3337  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  3338  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  3339  00B5  00B6               	movwf	sentido_anti_horario_wave_step@move_anti_horario+1
  3340  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  3341  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  3342  00B8  0832               	movf	sentido_anti_horario_wave_step@F1722^(0+128),w
  3343  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  3344  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  3345  00BB  00B5               	movwf	sentido_anti_horario_wave_step@move_anti_horario
  3346                           
  3347                           ;stepper.c: 103: p = (int)((g*140)/100);
  3348  00BC  3000               	movlw	0
  3349  00BD  00A3               	movwf	___lldiv@divisor+3
  3350  00BE  3000               	movlw	0
  3351  00BF  00A2               	movwf	___lldiv@divisor+2
  3352  00C0  3000               	movlw	0
  3353  00C1  00A1               	movwf	___lldiv@divisor+1
  3354  00C2  3064               	movlw	100
  3355  00C3  00A0               	movwf	___lldiv@divisor
  3356  00C4  0830               	movf	sentido_anti_horario_wave_step@g+3,w
  3357  00C5  00F3               	movwf	___lmul@multiplier+3
  3358  00C6  082F               	movf	sentido_anti_horario_wave_step@g+2,w
  3359  00C7  00F2               	movwf	___lmul@multiplier+2
  3360  00C8  082E               	movf	sentido_anti_horario_wave_step@g+1,w
  3361  00C9  00F1               	movwf	___lmul@multiplier+1
  3362  00CA  082D               	movf	sentido_anti_horario_wave_step@g,w
  3363  00CB  00F0               	movwf	___lmul@multiplier
  3364  00CC  3000               	movlw	0
  3365  00CD  00F7               	movwf	___lmul@multiplicand+3
  3366  00CE  3000               	movlw	0
  3367  00CF  00F6               	movwf	___lmul@multiplicand+2
  3368  00D0  3000               	movlw	0
  3369  00D1  00F5               	movwf	___lmul@multiplicand+1
  3370  00D2  308C               	movlw	140
  3371  00D3  00F4               	movwf	___lmul@multiplicand
  3372  00D4  120A  158A  2711  120A  118A  	fcall	___lmul
  3373  00D9  0873               	movf	?___lmul+3,w
  3374  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  3375  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  3376  00DC  00A7               	movwf	___lldiv@dividend+3
  3377  00DD  0872               	movf	?___lmul+2,w
  3378  00DE  00A6               	movwf	___lldiv@dividend+2
  3379  00DF  0871               	movf	?___lmul+1,w
  3380  00E0  00A5               	movwf	___lldiv@dividend+1
  3381  00E1  0870               	movf	?___lmul,w
  3382  00E2  00A4               	movwf	___lldiv@dividend
  3383  00E3  120A  158A  27A0  120A  118A  	fcall	___lldiv
  3384  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  3385  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  3386  00EA  0820               	movf	?___lldiv,w
  3387  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  3388  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  3389  00ED  00A0               	movwf	_p^(0+128)
  3390  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  3391  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  3392  00F0  0821               	movf	?___lldiv+1,w
  3393  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  3394  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  3395  00F3  00A1               	movwf	(_p+1)^(0+128)
  3396  00F4  3000               	movlw	0
  3397  00F5  1BA1               	btfsc	(_p+1)^(0+128),7
  3398  00F6  30FF               	movlw	255
  3399  00F7  00A2               	movwf	(_p+2)^(0+128)
  3400  00F8  00A3               	movwf	(_p+3)^(0+128)
  3401                           
  3402                           ;stepper.c: 105: for (i = 0; i < p; i++)
  3403  00F9  3000               	movlw	0
  3404  00FA  00A7               	movwf	(_i+3)^(0+128)
  3405  00FB  3000               	movlw	0
  3406  00FC  00A6               	movwf	(_i+2)^(0+128)
  3407  00FD  3000               	movlw	0
  3408  00FE  00A5               	movwf	(_i+1)^(0+128)
  3409  00FF  3000               	movlw	0
  3410  0100  00A4               	movwf	_i^(0+128)
  3411  0101                     l254:	
  3412  0101  0823               	movf	(_p+3)^(0+128),w
  3413  0102  0227               	subwf	(_i+3)^(0+128),w
  3414  0103  1D03               	skipz
  3415  0104  290F               	goto	u835
  3416  0105  0822               	movf	(_p+2)^(0+128),w
  3417  0106  0226               	subwf	(_i+2)^(0+128),w
  3418  0107  1D03               	skipz
  3419  0108  290F               	goto	u835
  3420  0109  0821               	movf	(_p+1)^(0+128),w
  3421  010A  0225               	subwf	(_i+1)^(0+128),w
  3422  010B  1D03               	skipz
  3423  010C  290F               	goto	u835
  3424  010D  0820               	movf	_p^(0+128),w
  3425  010E  0224               	subwf	_i^(0+128),w
  3426  010F                     u835:	
  3427  010F  1803               	btfsc	3,0
  3428  0110  29D4               	goto	l1227
  3429                           
  3430                           ;stepper.c: 106: {
  3431                           ;stepper.c: 107: PORTD=move_anti_horario[0];
  3432  0111  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0112  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0113  0835               	movf	sentido_anti_horario_wave_step@move_anti_horario,w
  3435  0114  0088               	movwf	8	;volatile
  3436                           
  3437                           ;stepper.c: 108: for (j = 0; j < x; j++)
  3438  0115  3000               	movlw	0
  3439  0116  00D1               	movwf	_j+3
  3440  0117  3000               	movlw	0
  3441  0118  00D0               	movwf	_j+2
  3442  0119  3000               	movlw	0
  3443  011A  00CF               	movwf	_j+1
  3444  011B  3000               	movlw	0
  3445  011C  00CE               	movwf	_j
  3446  011D                     l256:	
  3447  011D  0834               	movf	sentido_anti_horario_wave_step@x+3,w
  3448  011E  0251               	subwf	_j+3,w
  3449  011F  1D03               	skipz
  3450  0120  292B               	goto	u795
  3451  0121  0833               	movf	sentido_anti_horario_wave_step@x+2,w
  3452  0122  0250               	subwf	_j+2,w
  3453  0123  1D03               	skipz
  3454  0124  292B               	goto	u795
  3455  0125  0832               	movf	sentido_anti_horario_wave_step@x+1,w
  3456  0126  024F               	subwf	_j+1,w
  3457  0127  1D03               	skipz
  3458  0128  292B               	goto	u795
  3459  0129  0831               	movf	sentido_anti_horario_wave_step@x,w
  3460  012A  024E               	subwf	_j,w
  3461  012B                     u795:	
  3462  012B  1803               	btfsc	3,0
  3463  012C  293F               	goto	l1213
  3464                           
  3465                           ;stepper.c: 109: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3466  012D  0000               	nop
  3467  012E  3001               	movlw	1
  3468  012F  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0130  1303               	bcf	3,6	;RP1=0, select bank0
  3470  0131  07CE               	addwf	_j,f
  3471  0132  3000               	movlw	0
  3472  0133  1803               	skipnc
  3473  0134  3001               	movlw	1
  3474  0135  07CF               	addwf	_j+1,f
  3475  0136  3000               	movlw	0
  3476  0137  1803               	skipnc
  3477  0138  3001               	movlw	1
  3478  0139  07D0               	addwf	_j+2,f
  3479  013A  3000               	movlw	0
  3480  013B  1803               	skipnc
  3481  013C  3001               	movlw	1
  3482  013D  07D1               	addwf	_j+3,f
  3483  013E  291D               	goto	l256
  3484  013F                     l1213:	
  3485                           
  3486                           ;stepper.c: 111: PORTD=move_anti_horario[1];
  3487  013F  0836               	movf	sentido_anti_horario_wave_step@move_anti_horario+1,w
  3488  0140  0088               	movwf	8	;volatile
  3489                           
  3490                           ;stepper.c: 112: for (j = 0; j < x; j++)
  3491  0141  3000               	movlw	0
  3492  0142  00D1               	movwf	_j+3
  3493  0143  3000               	movlw	0
  3494  0144  00D0               	movwf	_j+2
  3495  0145  3000               	movlw	0
  3496  0146  00CF               	movwf	_j+1
  3497  0147  3000               	movlw	0
  3498  0148  00CE               	movwf	_j
  3499  0149                     l259:	
  3500  0149  0834               	movf	sentido_anti_horario_wave_step@x+3,w
  3501  014A  0251               	subwf	_j+3,w
  3502  014B  1D03               	skipz
  3503  014C  2957               	goto	u805
  3504  014D  0833               	movf	sentido_anti_horario_wave_step@x+2,w
  3505  014E  0250               	subwf	_j+2,w
  3506  014F  1D03               	skipz
  3507  0150  2957               	goto	u805
  3508  0151  0832               	movf	sentido_anti_horario_wave_step@x+1,w
  3509  0152  024F               	subwf	_j+1,w
  3510  0153  1D03               	skipz
  3511  0154  2957               	goto	u805
  3512  0155  0831               	movf	sentido_anti_horario_wave_step@x,w
  3513  0156  024E               	subwf	_j,w
  3514  0157                     u805:	
  3515  0157  1803               	btfsc	3,0
  3516  0158  296B               	goto	l1217
  3517                           
  3518                           ;stepper.c: 113: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3519  0159  0000               	nop
  3520  015A  3001               	movlw	1
  3521  015B  1283               	bcf	3,5	;RP0=0, select bank0
  3522  015C  1303               	bcf	3,6	;RP1=0, select bank0
  3523  015D  07CE               	addwf	_j,f
  3524  015E  3000               	movlw	0
  3525  015F  1803               	skipnc
  3526  0160  3001               	movlw	1
  3527  0161  07CF               	addwf	_j+1,f
  3528  0162  3000               	movlw	0
  3529  0163  1803               	skipnc
  3530  0164  3001               	movlw	1
  3531  0165  07D0               	addwf	_j+2,f
  3532  0166  3000               	movlw	0
  3533  0167  1803               	skipnc
  3534  0168  3001               	movlw	1
  3535  0169  07D1               	addwf	_j+3,f
  3536  016A  2949               	goto	l259
  3537  016B                     l1217:	
  3538                           
  3539                           ;stepper.c: 115: PORTD=move_anti_horario[2];
  3540  016B  0837               	movf	sentido_anti_horario_wave_step@move_anti_horario+2,w
  3541  016C  0088               	movwf	8	;volatile
  3542                           
  3543                           ;stepper.c: 116: for (j = 0; j < x; j++)
  3544  016D  3000               	movlw	0
  3545  016E  00D1               	movwf	_j+3
  3546  016F  3000               	movlw	0
  3547  0170  00D0               	movwf	_j+2
  3548  0171  3000               	movlw	0
  3549  0172  00CF               	movwf	_j+1
  3550  0173  3000               	movlw	0
  3551  0174  00CE               	movwf	_j
  3552  0175                     l262:	
  3553  0175  0834               	movf	sentido_anti_horario_wave_step@x+3,w
  3554  0176  0251               	subwf	_j+3,w
  3555  0177  1D03               	skipz
  3556  0178  2983               	goto	u815
  3557  0179  0833               	movf	sentido_anti_horario_wave_step@x+2,w
  3558  017A  0250               	subwf	_j+2,w
  3559  017B  1D03               	skipz
  3560  017C  2983               	goto	u815
  3561  017D  0832               	movf	sentido_anti_horario_wave_step@x+1,w
  3562  017E  024F               	subwf	_j+1,w
  3563  017F  1D03               	skipz
  3564  0180  2983               	goto	u815
  3565  0181  0831               	movf	sentido_anti_horario_wave_step@x,w
  3566  0182  024E               	subwf	_j,w
  3567  0183                     u815:	
  3568  0183  1803               	btfsc	3,0
  3569  0184  2997               	goto	l1221
  3570                           
  3571                           ;stepper.c: 117: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3572  0185  0000               	nop
  3573  0186  3001               	movlw	1
  3574  0187  1283               	bcf	3,5	;RP0=0, select bank0
  3575  0188  1303               	bcf	3,6	;RP1=0, select bank0
  3576  0189  07CE               	addwf	_j,f
  3577  018A  3000               	movlw	0
  3578  018B  1803               	skipnc
  3579  018C  3001               	movlw	1
  3580  018D  07CF               	addwf	_j+1,f
  3581  018E  3000               	movlw	0
  3582  018F  1803               	skipnc
  3583  0190  3001               	movlw	1
  3584  0191  07D0               	addwf	_j+2,f
  3585  0192  3000               	movlw	0
  3586  0193  1803               	skipnc
  3587  0194  3001               	movlw	1
  3588  0195  07D1               	addwf	_j+3,f
  3589  0196  2975               	goto	l262
  3590  0197                     l1221:	
  3591                           
  3592                           ;stepper.c: 119: PORTD=move_anti_horario[3];
  3593  0197  0838               	movf	sentido_anti_horario_wave_step@move_anti_horario+3,w
  3594  0198  0088               	movwf	8	;volatile
  3595                           
  3596                           ;stepper.c: 120: for (j = 0; j < x; j++)
  3597  0199  3000               	movlw	0
  3598  019A  00D1               	movwf	_j+3
  3599  019B  3000               	movlw	0
  3600  019C  00D0               	movwf	_j+2
  3601  019D  3000               	movlw	0
  3602  019E  00CF               	movwf	_j+1
  3603  019F  3000               	movlw	0
  3604  01A0  00CE               	movwf	_j
  3605  01A1                     l265:	
  3606  01A1  0834               	movf	sentido_anti_horario_wave_step@x+3,w
  3607  01A2  0251               	subwf	_j+3,w
  3608  01A3  1D03               	skipz
  3609  01A4  29AF               	goto	u825
  3610  01A5  0833               	movf	sentido_anti_horario_wave_step@x+2,w
  3611  01A6  0250               	subwf	_j+2,w
  3612  01A7  1D03               	skipz
  3613  01A8  29AF               	goto	u825
  3614  01A9  0832               	movf	sentido_anti_horario_wave_step@x+1,w
  3615  01AA  024F               	subwf	_j+1,w
  3616  01AB  1D03               	skipz
  3617  01AC  29AF               	goto	u825
  3618  01AD  0831               	movf	sentido_anti_horario_wave_step@x,w
  3619  01AE  024E               	subwf	_j,w
  3620  01AF                     u825:	
  3621  01AF  1803               	btfsc	3,0
  3622  01B0  29C3               	goto	l1225
  3623                           
  3624                           ;stepper.c: 121: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3625  01B1  0000               	nop
  3626  01B2  3001               	movlw	1
  3627  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  3628  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  3629  01B5  07CE               	addwf	_j,f
  3630  01B6  3000               	movlw	0
  3631  01B7  1803               	skipnc
  3632  01B8  3001               	movlw	1
  3633  01B9  07CF               	addwf	_j+1,f
  3634  01BA  3000               	movlw	0
  3635  01BB  1803               	skipnc
  3636  01BC  3001               	movlw	1
  3637  01BD  07D0               	addwf	_j+2,f
  3638  01BE  3000               	movlw	0
  3639  01BF  1803               	skipnc
  3640  01C0  3001               	movlw	1
  3641  01C1  07D1               	addwf	_j+3,f
  3642  01C2  29A1               	goto	l265
  3643  01C3                     l1225:	
  3644  01C3  3001               	movlw	1
  3645  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  3646  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  3647  01C6  07A4               	addwf	_i^(0+128),f
  3648  01C7  3000               	movlw	0
  3649  01C8  1803               	skipnc
  3650  01C9  3001               	movlw	1
  3651  01CA  07A5               	addwf	(_i+1)^(0+128),f
  3652  01CB  3000               	movlw	0
  3653  01CC  1803               	skipnc
  3654  01CD  3001               	movlw	1
  3655  01CE  07A6               	addwf	(_i+2)^(0+128),f
  3656  01CF  3000               	movlw	0
  3657  01D0  1803               	skipnc
  3658  01D1  3001               	movlw	1
  3659  01D2  07A7               	addwf	(_i+3)^(0+128),f
  3660  01D3  2901               	goto	l254
  3661  01D4                     l1227:	
  3662                           
  3663                           ;stepper.c: 122: }
  3664                           ;stepper.c: 124: PORTD=0x00;
  3665  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  3666  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  3667  01D6  0188               	clrf	8	;volatile
  3668  01D7  0008               	return
  3669  01D8                     __end_of_sentido_anti_horario_wave_step:	
  3670                           
  3671                           	psect	text10
  3672  0F11                     __ptext10:	
  3673 ;; *************** function ___lmul *****************
  3674 ;; Defined at:
  3675 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  multiplier      4    0[COMMON] unsigned long 
  3678 ;;  multiplicand    4    4[COMMON] unsigned long 
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;  product         4    9[COMMON] unsigned long 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  4    0[COMMON] unsigned long 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3690 ;;      Params:         8       0       0       0       0
  3691 ;;      Locals:         4       0       0       0       0
  3692 ;;      Temps:          1       0       0       0       0
  3693 ;;      Totals:        13       0       0       0       0
  3694 ;;Total ram usage:       13 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_main
  3700 ;;		_sentido_horario_wave_step
  3701 ;;		_sentido_anti_horario_wave_step
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           
  3706                           ;psect for function ___lmul
  3707  0F11                     ___lmul:	
  3708                           
  3709                           ;incstack = 0
  3710                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3711  0F11  3000               	movlw	0
  3712  0F12  00FC               	movwf	___lmul@product+3
  3713  0F13  3000               	movlw	0
  3714  0F14  00FB               	movwf	___lmul@product+2
  3715  0F15  3000               	movlw	0
  3716  0F16  00FA               	movwf	___lmul@product+1
  3717  0F17  3000               	movlw	0
  3718  0F18  00F9               	movwf	___lmul@product
  3719  0F19                     l1165:	
  3720  0F19  1C70               	btfss	___lmul@multiplier,0
  3721  0F1A  2F2F               	goto	l1169
  3722  0F1B  0874               	movf	___lmul@multiplicand,w
  3723  0F1C  07F9               	addwf	___lmul@product,f
  3724  0F1D  0875               	movf	___lmul@multiplicand+1,w
  3725  0F1E  1103               	clrz
  3726  0F1F  1803               	skipnc
  3727  0F20  3E01               	addlw	1
  3728  0F21  1D03               	btfss	3,2
  3729  0F22  07FA               	addwf	___lmul@product+1,f
  3730  0F23  0876               	movf	___lmul@multiplicand+2,w
  3731  0F24  1103               	clrz
  3732  0F25  1803               	skipnc
  3733  0F26  3E01               	addlw	1
  3734  0F27  1D03               	btfss	3,2
  3735  0F28  07FB               	addwf	___lmul@product+2,f
  3736  0F29  0877               	movf	___lmul@multiplicand+3,w
  3737  0F2A  1103               	clrz
  3738  0F2B  1803               	skipnc
  3739  0F2C  3E01               	addlw	1
  3740  0F2D  1D03               	btfss	3,2
  3741  0F2E  07FC               	addwf	___lmul@product+3,f
  3742  0F2F                     l1169:	
  3743  0F2F  3001               	movlw	1
  3744  0F30  00F8               	movwf	??___lmul
  3745  0F31                     u695:	
  3746  0F31  1003               	clrc
  3747  0F32  0DF4               	rlf	___lmul@multiplicand,f
  3748  0F33  0DF5               	rlf	___lmul@multiplicand+1,f
  3749  0F34  0DF6               	rlf	___lmul@multiplicand+2,f
  3750  0F35  0DF7               	rlf	___lmul@multiplicand+3,f
  3751  0F36  0BF8               	decfsz	??___lmul,f
  3752  0F37  2F31               	goto	u695
  3753  0F38  3001               	movlw	1
  3754  0F39                     u705:	
  3755  0F39  1003               	clrc
  3756  0F3A  0CF3               	rrf	___lmul@multiplier+3,f
  3757  0F3B  0CF2               	rrf	___lmul@multiplier+2,f
  3758  0F3C  0CF1               	rrf	___lmul@multiplier+1,f
  3759  0F3D  0CF0               	rrf	___lmul@multiplier,f
  3760  0F3E  3EFF               	addlw	-1
  3761  0F3F  1D03               	skipz
  3762  0F40  2F39               	goto	u705
  3763  0F41  0873               	movf	___lmul@multiplier+3,w
  3764  0F42  0472               	iorwf	___lmul@multiplier+2,w
  3765  0F43  0471               	iorwf	___lmul@multiplier+1,w
  3766  0F44  0470               	iorwf	___lmul@multiplier,w
  3767  0F45  1D03               	skipz
  3768  0F46  2F19               	goto	l1165
  3769  0F47  087C               	movf	___lmul@product+3,w
  3770  0F48  00F3               	movwf	?___lmul+3
  3771  0F49  087B               	movf	___lmul@product+2,w
  3772  0F4A  00F2               	movwf	?___lmul+2
  3773  0F4B  087A               	movf	___lmul@product+1,w
  3774  0F4C  00F1               	movwf	?___lmul+1
  3775  0F4D  0879               	movf	___lmul@product,w
  3776  0F4E  00F0               	movwf	?___lmul
  3777  0F4F  0008               	return
  3778  0F50                     __end_of___lmul:	
  3779                           
  3780                           	psect	text11
  3781  0FA0                     __ptext11:	
  3782 ;; *************** function ___lldiv *****************
  3783 ;; Defined at:
  3784 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  divisor         4    0[BANK0 ] unsigned long 
  3787 ;;  dividend        4    4[BANK0 ] unsigned long 
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;  quotient        4    8[BANK0 ] unsigned long 
  3790 ;;  counter         1   12[BANK0 ] unsigned char 
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  4    0[BANK0 ] unsigned long 
  3793 ;; Registers used:
  3794 ;;		wreg, status,2, status,0
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3800 ;;      Params:         0       8       0       0       0
  3801 ;;      Locals:         0       5       0       0       0
  3802 ;;      Temps:          1       0       0       0       0
  3803 ;;      Totals:         1      13       0       0       0
  3804 ;;Total ram usage:       14 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_main
  3810 ;;		_calculaDelta
  3811 ;;		_setupSerial
  3812 ;;		_sentido_horario_wave_step
  3813 ;;		_sentido_anti_horario_wave_step
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           
  3818                           ;psect for function ___lldiv
  3819  0FA0                     ___lldiv:	
  3820                           
  3821                           ;incstack = 0
  3822                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3823  0FA0  3000               	movlw	0
  3824  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  3825  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  3826  0FA3  00AB               	movwf	___lldiv@quotient+3
  3827  0FA4  3000               	movlw	0
  3828  0FA5  00AA               	movwf	___lldiv@quotient+2
  3829  0FA6  3000               	movlw	0
  3830  0FA7  00A9               	movwf	___lldiv@quotient+1
  3831  0FA8  3000               	movlw	0
  3832  0FA9  00A8               	movwf	___lldiv@quotient
  3833  0FAA  0823               	movf	___lldiv@divisor+3,w
  3834  0FAB  0422               	iorwf	___lldiv@divisor+2,w
  3835  0FAC  0421               	iorwf	___lldiv@divisor+1,w
  3836  0FAD  0420               	iorwf	___lldiv@divisor,w
  3837  0FAE  1903               	skipnz
  3838  0FAF  2FF7               	goto	l1197
  3839  0FB0  01AC               	clrf	___lldiv@counter
  3840  0FB1  0AAC               	incf	___lldiv@counter,f
  3841  0FB2                     l1183:	
  3842  0FB2  1BA3               	btfsc	___lldiv@divisor+3,7
  3843  0FB3  2FC2               	goto	l1185
  3844  0FB4  3001               	movlw	1
  3845  0FB5  00FD               	movwf	??___lldiv
  3846  0FB6                     u735:	
  3847  0FB6  1003               	clrc
  3848  0FB7  0DA0               	rlf	___lldiv@divisor,f
  3849  0FB8  0DA1               	rlf	___lldiv@divisor+1,f
  3850  0FB9  0DA2               	rlf	___lldiv@divisor+2,f
  3851  0FBA  0DA3               	rlf	___lldiv@divisor+3,f
  3852  0FBB  0BFD               	decfsz	??___lldiv,f
  3853  0FBC  2FB6               	goto	u735
  3854  0FBD  3001               	movlw	1
  3855  0FBE  00FD               	movwf	??___lldiv
  3856  0FBF  087D               	movf	??___lldiv,w
  3857  0FC0  07AC               	addwf	___lldiv@counter,f
  3858  0FC1  2FB2               	goto	l1183
  3859  0FC2                     l1185:	
  3860  0FC2  3001               	movlw	1
  3861  0FC3  00FD               	movwf	??___lldiv
  3862  0FC4                     u755:	
  3863  0FC4  1003               	clrc
  3864  0FC5  0DA8               	rlf	___lldiv@quotient,f
  3865  0FC6  0DA9               	rlf	___lldiv@quotient+1,f
  3866  0FC7  0DAA               	rlf	___lldiv@quotient+2,f
  3867  0FC8  0DAB               	rlf	___lldiv@quotient+3,f
  3868  0FC9  0BFD               	decfsz	??___lldiv,f
  3869  0FCA  2FC4               	goto	u755
  3870  0FCB  0823               	movf	___lldiv@divisor+3,w
  3871  0FCC  0227               	subwf	___lldiv@dividend+3,w
  3872  0FCD  1D03               	skipz
  3873  0FCE  2FD9               	goto	u765
  3874  0FCF  0822               	movf	___lldiv@divisor+2,w
  3875  0FD0  0226               	subwf	___lldiv@dividend+2,w
  3876  0FD1  1D03               	skipz
  3877  0FD2  2FD9               	goto	u765
  3878  0FD3  0821               	movf	___lldiv@divisor+1,w
  3879  0FD4  0225               	subwf	___lldiv@dividend+1,w
  3880  0FD5  1D03               	skipz
  3881  0FD6  2FD9               	goto	u765
  3882  0FD7  0820               	movf	___lldiv@divisor,w
  3883  0FD8  0224               	subwf	___lldiv@dividend,w
  3884  0FD9                     u765:	
  3885  0FD9  1C03               	skipc
  3886  0FDA  2FEA               	goto	l1193
  3887  0FDB  0820               	movf	___lldiv@divisor,w
  3888  0FDC  02A4               	subwf	___lldiv@dividend,f
  3889  0FDD  0821               	movf	___lldiv@divisor+1,w
  3890  0FDE  1C03               	skipc
  3891  0FDF  0F21               	incfsz	___lldiv@divisor+1,w
  3892  0FE0  02A5               	subwf	___lldiv@dividend+1,f
  3893  0FE1  0822               	movf	___lldiv@divisor+2,w
  3894  0FE2  1C03               	skipc
  3895  0FE3  0F22               	incfsz	___lldiv@divisor+2,w
  3896  0FE4  02A6               	subwf	___lldiv@dividend+2,f
  3897  0FE5  0823               	movf	___lldiv@divisor+3,w
  3898  0FE6  1C03               	skipc
  3899  0FE7  0F23               	incfsz	___lldiv@divisor+3,w
  3900  0FE8  02A7               	subwf	___lldiv@dividend+3,f
  3901  0FE9  1428               	bsf	___lldiv@quotient,0
  3902  0FEA                     l1193:	
  3903  0FEA  3001               	movlw	1
  3904  0FEB                     u775:	
  3905  0FEB  1003               	clrc
  3906  0FEC  0CA3               	rrf	___lldiv@divisor+3,f
  3907  0FED  0CA2               	rrf	___lldiv@divisor+2,f
  3908  0FEE  0CA1               	rrf	___lldiv@divisor+1,f
  3909  0FEF  0CA0               	rrf	___lldiv@divisor,f
  3910  0FF0  3EFF               	addlw	-1
  3911  0FF1  1D03               	skipz
  3912  0FF2  2FEB               	goto	u775
  3913  0FF3  3001               	movlw	1
  3914  0FF4  02AC               	subwf	___lldiv@counter,f
  3915  0FF5  1D03               	btfss	3,2
  3916  0FF6  2FC2               	goto	l1185
  3917  0FF7                     l1197:	
  3918  0FF7  082B               	movf	___lldiv@quotient+3,w
  3919  0FF8  00A3               	movwf	?___lldiv+3
  3920  0FF9  082A               	movf	___lldiv@quotient+2,w
  3921  0FFA  00A2               	movwf	?___lldiv+2
  3922  0FFB  0829               	movf	___lldiv@quotient+1,w
  3923  0FFC  00A1               	movwf	?___lldiv+1
  3924  0FFD  0828               	movf	___lldiv@quotient,w
  3925  0FFE  00A0               	movwf	?___lldiv
  3926  0FFF  0008               	return
  3927  1000                     __end_of___lldiv:	
  3928                           
  3929                           	psect	text12
  3930  0F50                     __ptext12:	
  3931 ;; *************** function _apresenta *****************
  3932 ;; Defined at:
  3933 ;;		line 166 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\Main.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2, status,0, pclath, cstack
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3947 ;;      Params:         0       0       0       0       0
  3948 ;;      Locals:         0       0       0       0       0
  3949 ;;      Temps:          0       0       0       0       0
  3950 ;;      Totals:         0       0       0       0       0
  3951 ;;Total ram usage:        0 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    3
  3954 ;; This function calls:
  3955 ;;		_displaySendCmd
  3956 ;;		_displaySendData
  3957 ;; This function is called by:
  3958 ;;		_calculaDelta
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           
  3963                           ;psect for function _apresenta
  3964  0F50                     _apresenta:	
  3965                           
  3966                           ;Main.c: 169: displaySendCmd(0x89);
  3967                           
  3968                           ;incstack = 0
  3969                           ; Regs used in _apresenta: [wreg+status,2+status,0+pclath+cstack]
  3970  0F50  3089               	movlw	137
  3971  0F51  120A  158A  2693  120A  158A  	fcall	_displaySendCmd
  3972                           
  3973                           ;Main.c: 170: displaySendData(0x30+p1);
  3974  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3975  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  3976  0F58  086D               	movf	_p1,w
  3977  0F59  3E30               	addlw	48
  3978  0F5A  120A  158A  26D2  120A  158A  	fcall	_displaySendData
  3979                           
  3980                           ;Main.c: 171: displaySendData(0x30+p2);
  3981  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3982  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  3983  0F61  086C               	movf	_p2,w
  3984  0F62  3E30               	addlw	48
  3985  0F63  120A  158A  26D2  120A  158A  	fcall	_displaySendData
  3986                           
  3987                           ;Main.c: 172: displaySendData(0x30+p3);
  3988  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  3989  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  3990  0F6A  0866               	movf	_p3,w
  3991  0F6B  3E30               	addlw	48
  3992  0F6C  120A  158A  26D2  120A  158A  	fcall	_displaySendData
  3993                           
  3994                           ;Main.c: 175: displaySendCmd(0xC5);
  3995  0F71  30C5               	movlw	197
  3996  0F72  120A  158A  2693  120A  158A  	fcall	_displaySendCmd
  3997                           
  3998                           ;Main.c: 176: displaySendData(0x30+ang1);
  3999  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  4000  0F78  1303               	bcf	3,6	;RP1=0, select bank0
  4001  0F79  086F               	movf	_ang1,w
  4002  0F7A  3E30               	addlw	48
  4003  0F7B  120A  158A  26D2  120A  158A  	fcall	_displaySendData
  4004                           
  4005                           ;Main.c: 177: displaySendData(0x30+ang2);
  4006  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  4007  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  4008  0F82  086E               	movf	_ang2,w
  4009  0F83  3E30               	addlw	48
  4010  0F84  120A  158A  26D2  120A  158A  	fcall	_displaySendData
  4011                           
  4012                           ;Main.c: 178: displaySendData(0x30+ang3);
  4013  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  4015  0F8B  0867               	movf	_ang3,w
  4016  0F8C  3E30               	addlw	48
  4017  0F8D  120A  158A  26D2  120A  158A  	fcall	_displaySendData
  4018                           
  4019                           ;Main.c: 181: displaySendCmd(0xCD);
  4020  0F92  30CD               	movlw	205
  4021  0F93  120A  158A  2693  120A  158A  	fcall	_displaySendCmd
  4022                           
  4023                           ;Main.c: 182: displaySendData(0x30+contador+1);
  4024  0F98  1283               	bcf	3,5	;RP0=0, select bank0
  4025  0F99  1303               	bcf	3,6	;RP1=0, select bank0
  4026  0F9A  0856               	movf	_contador,w
  4027  0F9B  3E31               	addlw	49
  4028  0F9C  120A  158A  26D2   	fcall	_displaySendData
  4029  0F9F  0008               	return
  4030  0FA0                     __end_of_apresenta:	
  4031                           
  4032                           	psect	text13
  4033  0ED2                     __ptext13:	
  4034 ;; *************** function _displaySendData *****************
  4035 ;; Defined at:
  4036 ;;		line 35 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\lcd.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  data            1    wreg     unsigned char 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  data            1    3[COMMON] unsigned char 
  4041 ;;  data_u          1    5[COMMON] unsigned char 
  4042 ;;  data_l          1    4[COMMON] unsigned char 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      void 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0, pclath, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4052 ;;      Params:         0       0       0       0       0
  4053 ;;      Locals:         3       0       0       0       0
  4054 ;;      Temps:          2       0       0       0       0
  4055 ;;      Totals:         5       0       0       0       0
  4056 ;;Total ram usage:        5 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:    2
  4059 ;; This function calls:
  4060 ;;		_serialStart
  4061 ;;		_serialStop
  4062 ;;		_serialWrite
  4063 ;; This function is called by:
  4064 ;;		_displaySendString
  4065 ;;		_apresenta
  4066 ;;		_veloc
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           
  4071                           ;psect for function _displaySendData
  4072  0ED2                     _displaySendData:	
  4073                           
  4074                           ;incstack = 0
  4075                           ; Regs used in _displaySendData: [wreg+status,2+status,0+pclath+cstack]
  4076                           ;displaySendData@data stored from wreg
  4077  0ED2  00F3               	movwf	displaySendData@data
  4078                           
  4079                           ;lcd.c: 37: unsigned char data_l, data_u;
  4080                           ;lcd.c: 38: data_l = (data<<4)&0xf0;
  4081  0ED3  0873               	movf	displaySendData@data,w
  4082  0ED4  00F1               	movwf	??_displaySendData
  4083  0ED5  3003               	movlw	3
  4084  0ED6                     u665:	
  4085  0ED6  1003               	clrc
  4086  0ED7  0DF1               	rlf	??_displaySendData,f
  4087  0ED8  3EFF               	addlw	-1
  4088  0ED9  1D03               	skipz
  4089  0EDA  2ED6               	goto	u665
  4090  0EDB  1003               	clrc
  4091  0EDC  0D71               	rlf	??_displaySendData,w
  4092  0EDD  39F0               	andlw	240
  4093  0EDE  00F2               	movwf	??_displaySendData+1
  4094  0EDF  0872               	movf	??_displaySendData+1,w
  4095  0EE0  00F4               	movwf	displaySendData@data_l
  4096                           
  4097                           ;lcd.c: 39: data_u = data&0xf0;
  4098  0EE1  0873               	movf	displaySendData@data,w
  4099  0EE2  39F0               	andlw	240
  4100  0EE3  00F1               	movwf	??_displaySendData
  4101  0EE4  0871               	movf	??_displaySendData,w
  4102  0EE5  00F5               	movwf	displaySendData@data_u
  4103                           
  4104                           ;lcd.c: 41: serialStart();
  4105  0EE6  120A  158A  25BF  120A  158A  	fcall	_serialStart
  4106                           
  4107                           ;lcd.c: 42: serialWrite(0x4E);
  4108  0EEB  304E               	movlw	78
  4109  0EEC  120A  158A  25AA  120A  158A  	fcall	_serialWrite
  4110                           
  4111                           ;lcd.c: 43: serialWrite(data_u|0x0D);
  4112  0EF1  0875               	movf	displaySendData@data_u,w
  4113  0EF2  380D               	iorlw	13
  4114  0EF3  120A  158A  25AA  120A  158A  	fcall	_serialWrite
  4115                           
  4116                           ;lcd.c: 44: serialWrite(data_u|0x09);
  4117  0EF8  0875               	movf	displaySendData@data_u,w
  4118  0EF9  3809               	iorlw	9
  4119  0EFA  120A  158A  25AA  120A  158A  	fcall	_serialWrite
  4120                           
  4121                           ;lcd.c: 46: serialWrite(data_l|0x0D);
  4122  0EFF  0874               	movf	displaySendData@data_l,w
  4123  0F00  380D               	iorlw	13
  4124  0F01  120A  158A  25AA  120A  158A  	fcall	_serialWrite
  4125                           
  4126                           ;lcd.c: 47: serialWrite(data_l|0x09);
  4127  0F06  0874               	movf	displaySendData@data_l,w
  4128  0F07  3809               	iorlw	9
  4129  0F08  120A  158A  25AA  120A  158A  	fcall	_serialWrite
  4130                           
  4131                           ;lcd.c: 49: serialStop();
  4132  0F0D  120A  158A  2592   	fcall	_serialStop
  4133  0F10  0008               	return
  4134  0F11                     __end_of_displaySendData:	
  4135                           
  4136                           	psect	text14
  4137  0E93                     __ptext14:	
  4138 ;; *************** function _displaySendCmd *****************
  4139 ;; Defined at:
  4140 ;;		line 18 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\lcd.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  data            1    wreg     unsigned char 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  data            1    3[COMMON] unsigned char 
  4145 ;;  data_u          1    5[COMMON] unsigned char 
  4146 ;;  data_l          1    4[COMMON] unsigned char 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2, status,0, pclath, cstack
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4156 ;;      Params:         0       0       0       0       0
  4157 ;;      Locals:         3       0       0       0       0
  4158 ;;      Temps:          2       0       0       0       0
  4159 ;;      Totals:         5       0       0       0       0
  4160 ;;Total ram usage:        5 bytes
  4161 ;; Hardware stack levels used:    1
  4162 ;; Hardware stack levels required when called:    2
  4163 ;; This function calls:
  4164 ;;		_serialStart
  4165 ;;		_serialStop
  4166 ;;		_serialWrite
  4167 ;; This function is called by:
  4168 ;;		_setupDisplay
  4169 ;;		_clearDisplay
  4170 ;;		_main
  4171 ;;		_apresenta
  4172 ;;		_veloc
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           
  4177                           ;psect for function _displaySendCmd
  4178  0E93                     _displaySendCmd:	
  4179                           
  4180                           ;incstack = 0
  4181                           ; Regs used in _displaySendCmd: [wreg+status,2+status,0+pclath+cstack]
  4182                           ;displaySendCmd@data stored from wreg
  4183  0E93  00F3               	movwf	displaySendCmd@data
  4184                           
  4185                           ;lcd.c: 20: unsigned char data_l, data_u;
  4186                           ;lcd.c: 21: data_l = (data<<4)&0xf0;
  4187  0E94  0873               	movf	displaySendCmd@data,w
  4188  0E95  00F1               	movwf	??_displaySendCmd
  4189  0E96  3003               	movlw	3
  4190  0E97                     u655:	
  4191  0E97  1003               	clrc
  4192  0E98  0DF1               	rlf	??_displaySendCmd,f
  4193  0E99  3EFF               	addlw	-1
  4194  0E9A  1D03               	skipz
  4195  0E9B  2E97               	goto	u655
  4196  0E9C  1003               	clrc
  4197  0E9D  0D71               	rlf	??_displaySendCmd,w
  4198  0E9E  39F0               	andlw	240
  4199  0E9F  00F2               	movwf	??_displaySendCmd+1
  4200  0EA0  0872               	movf	??_displaySendCmd+1,w
  4201  0EA1  00F4               	movwf	displaySendCmd@data_l
  4202                           
  4203                           ;lcd.c: 22: data_u = data&0xf0;
  4204  0EA2  0873               	movf	displaySendCmd@data,w
  4205  0EA3  39F0               	andlw	240
  4206  0EA4  00F1               	movwf	??_displaySendCmd
  4207  0EA5  0871               	movf	??_displaySendCmd,w
  4208  0EA6  00F5               	movwf	displaySendCmd@data_u
  4209                           
  4210                           ;lcd.c: 24: serialStart();
  4211  0EA7  120A  158A  25BF  120A  158A  	fcall	_serialStart
  4212                           
  4213                           ;lcd.c: 25: serialWrite(0x4E);
  4214  0EAC  304E               	movlw	78
  4215  0EAD  120A  158A  25AA  120A  158A  	fcall	_serialWrite
  4216                           
  4217                           ;lcd.c: 26: serialWrite(data_u|0x0C);
  4218  0EB2  0875               	movf	displaySendCmd@data_u,w
  4219  0EB3  380C               	iorlw	12
  4220  0EB4  120A  158A  25AA  120A  158A  	fcall	_serialWrite
  4221                           
  4222                           ;lcd.c: 27: serialWrite(data_u|0x08);
  4223  0EB9  0875               	movf	displaySendCmd@data_u,w
  4224  0EBA  3808               	iorlw	8
  4225  0EBB  120A  158A  25AA  120A  158A  	fcall	_serialWrite
  4226                           
  4227                           ;lcd.c: 29: serialWrite(data_l|0x0C);
  4228  0EC0  0874               	movf	displaySendCmd@data_l,w
  4229  0EC1  380C               	iorlw	12
  4230  0EC2  120A  158A  25AA  120A  158A  	fcall	_serialWrite
  4231                           
  4232                           ;lcd.c: 30: serialWrite(data_l|0x08);
  4233  0EC7  0874               	movf	displaySendCmd@data_l,w
  4234  0EC8  3808               	iorlw	8
  4235  0EC9  120A  158A  25AA  120A  158A  	fcall	_serialWrite
  4236                           
  4237                           ;lcd.c: 32: serialStop();
  4238  0ECE  120A  158A  2592   	fcall	_serialStop
  4239  0ED1  0008               	return
  4240  0ED2                     __end_of_displaySendCmd:	
  4241                           
  4242                           	psect	text15
  4243  0DAA                     __ptext15:	
  4244 ;; *************** function _serialWrite *****************
  4245 ;; Defined at:
  4246 ;;		line 38 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\serial.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  data            1    wreg     unsigned char 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  data            1    0[COMMON] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0, pclath, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4260 ;;      Params:         0       0       0       0       0
  4261 ;;      Locals:         1       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0
  4263 ;;      Totals:         1       0       0       0       0
  4264 ;;Total ram usage:        1 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    1
  4267 ;; This function calls:
  4268 ;;		_serialWait
  4269 ;; This function is called by:
  4270 ;;		_displaySendCmd
  4271 ;;		_displaySendData
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           
  4276                           ;psect for function _serialWrite
  4277  0DAA                     _serialWrite:	
  4278                           
  4279                           ;incstack = 0
  4280                           ; Regs used in _serialWrite: [wreg+status,2+status,0+pclath+cstack]
  4281                           ;serialWrite@data stored from wreg
  4282  0DAA  00F0               	movwf	serialWrite@data
  4283                           
  4284                           ;serial.c: 40: serialWait();
  4285  0DAB  120A  158A  25A1   	fcall	_serialWait
  4286                           
  4287                           ;serial.c: 41: SSPBUF = data;
  4288  0DAE  0870               	movf	serialWrite@data,w
  4289  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  4290  0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  4291  0DB1  0093               	movwf	19	;volatile
  4292  0DB2  0008               	return
  4293  0DB3                     __end_of_serialWrite:	
  4294                           
  4295                           	psect	text16
  4296  0D92                     __ptext16:	
  4297 ;; *************** function _serialStop *****************
  4298 ;; Defined at:
  4299 ;;		line 31 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\serial.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0, pclath, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4313 ;;      Params:         0       0       0       0       0
  4314 ;;      Locals:         0       0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0
  4316 ;;      Totals:         0       0       0       0       0
  4317 ;;Total ram usage:        0 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; Hardware stack levels required when called:    1
  4320 ;; This function calls:
  4321 ;;		_serialWait
  4322 ;; This function is called by:
  4323 ;;		_displaySendCmd
  4324 ;;		_displaySendData
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           
  4329                           ;psect for function _serialStop
  4330  0D92                     _serialStop:	
  4331                           
  4332                           ;serial.c: 33: serialWait();
  4333                           
  4334                           ;incstack = 0
  4335                           ; Regs used in _serialStop: [wreg+status,2+status,0+pclath+cstack]
  4336  0D92  120A  158A  25A1   	fcall	_serialWait
  4337                           
  4338                           ;serial.c: 34: SSPCON2 |= 0x04;
  4339  0D95  1683               	bsf	3,5	;RP0=1, select bank1
  4340  0D96  1303               	bcf	3,6	;RP1=0, select bank1
  4341  0D97  1511               	bsf	17,2	;volatile
  4342  0D98  0008               	return
  4343  0D99                     __end_of_serialStop:	
  4344                           
  4345                           	psect	text17
  4346  0DBF                     __ptext17:	
  4347 ;; *************** function _serialStart *****************
  4348 ;; Defined at:
  4349 ;;		line 21 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\serial.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;		None
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0, pclath, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4363 ;;      Params:         0       0       0       0       0
  4364 ;;      Locals:         0       0       0       0       0
  4365 ;;      Temps:          0       0       0       0       0
  4366 ;;      Totals:         0       0       0       0       0
  4367 ;;Total ram usage:        0 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    1
  4370 ;; This function calls:
  4371 ;;		_serialWait
  4372 ;; This function is called by:
  4373 ;;		_displaySendCmd
  4374 ;;		_displaySendData
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           
  4379                           ;psect for function _serialStart
  4380  0DBF                     _serialStart:	
  4381                           
  4382                           ;serial.c: 23: serialWait();
  4383                           
  4384                           ;incstack = 0
  4385                           ; Regs used in _serialStart: [wreg+status,2+status,0+pclath+cstack]
  4386  0DBF  120A  158A  25A1  120A  158A  	fcall	_serialWait
  4387                           
  4388                           ;serial.c: 24: SSPCON2 |= 0x01;
  4389  0DC4  1683               	bsf	3,5	;RP0=1, select bank1
  4390  0DC5  1303               	bcf	3,6	;RP1=0, select bank1
  4391  0DC6  1411               	bsf	17,0	;volatile
  4392  0DC7                     l180:	
  4393                           ;serial.c: 27: while(!PIR1bits.SSPIF);
  4394                           
  4395  0DC7  1283               	bcf	3,5	;RP0=0, select bank0
  4396  0DC8  1D8C               	btfss	12,3	;volatile
  4397  0DC9  2DC7               	goto	l180
  4398                           
  4399                           ;serial.c: 28: PIR1bits.SSPIF = 0;
  4400  0DCA  118C               	bcf	12,3	;volatile
  4401  0DCB  0008               	return
  4402  0DCC                     __end_of_serialStart:	
  4403                           
  4404                           	psect	text18
  4405  0DA1                     __ptext18:	
  4406 ;; *************** function _serialWait *****************
  4407 ;; Defined at:
  4408 ;;		line 16 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\serial.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4422 ;;      Params:         0       0       0       0       0
  4423 ;;      Locals:         0       0       0       0       0
  4424 ;;      Temps:          0       0       0       0       0
  4425 ;;      Totals:         0       0       0       0       0
  4426 ;;Total ram usage:        0 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_serialStart
  4432 ;;		_serialStop
  4433 ;;		_serialWrite
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           
  4438                           ;psect for function _serialWait
  4439  0DA1                     _serialWait:	
  4440  0DA1                     l174:	
  4441                           ;serial.c: 18: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4442                           
  4443                           ;incstack = 0
  4444                           ; Regs used in _serialWait: [wreg+status,2]
  4445                           
  4446  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  4447  0DA2  1303               	bcf	3,6	;RP1=0, select bank1
  4448  0DA3  1914               	btfsc	20,2	;volatile
  4449  0DA4  2DA1               	goto	l174
  4450  0DA5  0811               	movf	17,w	;volatile
  4451  0DA6  391F               	andlw	31
  4452  0DA7  1903               	btfsc	3,2
  4453  0DA8  0008               	return
  4454  0DA9  2DA1               	goto	l174
  4455  0DAA                     __end_of_serialWait:	
  4456                           
  4457                           	psect	text19
  4458  0004                     __ptext19:	
  4459 ;; *************** function ___wmul *****************
  4460 ;; Defined at:
  4461 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  multiplier      2    0[COMMON] unsigned int 
  4464 ;;  multiplicand    2    2[COMMON] unsigned int 
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;  product         2    4[COMMON] unsigned int 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  2    0[COMMON] unsigned int 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4476 ;;      Params:         4       0       0       0       0
  4477 ;;      Locals:         2       0       0       0       0
  4478 ;;      Temps:          0       0       0       0       0
  4479 ;;      Totals:         6       0       0       0       0
  4480 ;;Total ram usage:        6 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_calculaDelta
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           
  4490                           ;psect for function ___wmul
  4491  0004                     ___wmul:	
  4492                           
  4493                           ;incstack = 0
  4494                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4495  0004  01F4               	clrf	___wmul@product
  4496  0005  01F5               	clrf	___wmul@product+1
  4497  0006                     l1257:	
  4498  0006  1C70               	btfss	___wmul@multiplier,0
  4499  0007  280E               	goto	l353
  4500  0008  0872               	movf	___wmul@multiplicand,w
  4501  0009  07F4               	addwf	___wmul@product,f
  4502  000A  1803               	skipnc
  4503  000B  0AF5               	incf	___wmul@product+1,f
  4504  000C  0873               	movf	___wmul@multiplicand+1,w
  4505  000D  07F5               	addwf	___wmul@product+1,f
  4506  000E                     l353:	
  4507  000E  3001               	movlw	1
  4508  000F                     u905:	
  4509  000F  1003               	clrc
  4510  0010  0DF2               	rlf	___wmul@multiplicand,f
  4511  0011  0DF3               	rlf	___wmul@multiplicand+1,f
  4512  0012  3EFF               	addlw	-1
  4513  0013  1D03               	skipz
  4514  0014  280F               	goto	u905
  4515  0015  3001               	movlw	1
  4516  0016                     u915:	
  4517  0016  1003               	clrc
  4518  0017  0CF1               	rrf	___wmul@multiplier+1,f
  4519  0018  0CF0               	rrf	___wmul@multiplier,f
  4520  0019  3EFF               	addlw	-1
  4521  001A  1D03               	skipz
  4522  001B  2816               	goto	u915
  4523  001C  0870               	movf	___wmul@multiplier,w
  4524  001D  0471               	iorwf	___wmul@multiplier+1,w
  4525  001E  1D03               	btfss	3,2
  4526  001F  2806               	goto	l1257
  4527  0020  0875               	movf	___wmul@product+1,w
  4528  0021  00F1               	movwf	?___wmul+1
  4529  0022  0874               	movf	___wmul@product,w
  4530  0023  00F0               	movwf	?___wmul
  4531  0024  0008               	return
  4532  0025                     __end_of___wmul:	
  4533                           
  4534                           	psect	text20
  4535  0DCC                     __ptext20:	
  4536 ;; *************** function ___bmul *****************
  4537 ;; Defined at:
  4538 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  multiplier      1    wreg     unsigned char 
  4541 ;;  multiplicand    1    0[COMMON] unsigned char 
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  multiplier      1    3[COMMON] unsigned char 
  4544 ;;  product         1    2[COMMON] unsigned char 
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      unsigned char 
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4554 ;;      Params:         1       0       0       0       0
  4555 ;;      Locals:         2       0       0       0       0
  4556 ;;      Temps:          1       0       0       0       0
  4557 ;;      Totals:         4       0       0       0       0
  4558 ;;Total ram usage:        4 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_calculaDelta
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           
  4568                           ;psect for function ___bmul
  4569  0DCC                     ___bmul:	
  4570                           
  4571                           ;incstack = 0
  4572                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4573                           ;___bmul@multiplier stored from wreg
  4574  0DCC  00F3               	movwf	___bmul@multiplier
  4575  0DCD  01F2               	clrf	___bmul@product
  4576  0DCE                     l1271:	
  4577  0DCE  1C73               	btfss	___bmul@multiplier,0
  4578  0DCF  2DD4               	goto	l1275
  4579  0DD0  0870               	movf	___bmul@multiplicand,w
  4580  0DD1  00F1               	movwf	??___bmul
  4581  0DD2  0871               	movf	??___bmul,w
  4582  0DD3  07F2               	addwf	___bmul@product,f
  4583  0DD4                     l1275:	
  4584  0DD4  1003               	clrc
  4585  0DD5  0DF0               	rlf	___bmul@multiplicand,f
  4586  0DD6  1003               	clrc
  4587  0DD7  0CF3               	rrf	___bmul@multiplier,f
  4588  0DD8  0873               	movf	___bmul@multiplier,w
  4589  0DD9  1D03               	btfss	3,2
  4590  0DDA  2DCE               	goto	l1271
  4591  0DDB  0872               	movf	___bmul@product,w
  4592  0DDC  0008               	return
  4593  0DDD                     __end_of___bmul:	
  4594  007E                     btemp	set	126	;btemp
  4595  007E                     wtemp0	set	126


Data Sizes:
    Strings     24
    Constant    0
    Data        12
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      80
    BANK1            80      0      30
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    displaySendString@str	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->___lldiv
    _veloc->_displaySendCmd
    _veloc->_displaySendData
    _setupSerial->___lldiv
    _setupDisplay->_displaySendCmd
    _displaySendString->_displaySendData
    _clearDisplay->_displaySendCmd
    _calculaDelta->___lldiv
    _sentido_horario_wave_step->___lldiv
    _sentido_anti_horario_wave_step->___lldiv
    ___lldiv->___lmul
    _apresenta->_displaySendCmd
    _apresenta->_displaySendData
    _displaySendData->_serialWrite
    _displaySendCmd->_serialWrite

Critical Paths under _main in BANK0

    _main->_calculaDelta
    _setupSerial->___lldiv
    _calculaDelta->_sentido_anti_horario_wave_step
    _calculaDelta->_sentido_horario_wave_step
    _sentido_horario_wave_step->___lldiv
    _sentido_anti_horario_wave_step->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   10259
                                             37 BANK0      9     9      0
                            ___lldiv
                             ___lmul
                       _calculaDelta
                       _clearDisplay
                     _displaySendCmd
                  _displaySendString
                       _setupDisplay
                        _setupSerial
                       _setupStepper
                              _veloc
 ---------------------------------------------------------------------------------
 (1) _veloc                                                4     4      0     312
                                              6 COMMON     4     4      0
                     _displaySendCmd
                    _displaySendData
 ---------------------------------------------------------------------------------
 (1) _setupStepper                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupSerial                                          8     4      4    1297
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _setupDisplay                                         0     0      0     156
                     _displaySendCmd
 ---------------------------------------------------------------------------------
 (1) _displaySendString                                    2     2      0     309
                                              6 COMMON     2     2      0
                    _displaySendData
 ---------------------------------------------------------------------------------
 (1) _clearDisplay                                         0     0      0     156
                     _displaySendCmd
 ---------------------------------------------------------------------------------
 (1) _calculaDelta                                        12    12      0    6216
                                             25 BANK0     12    12      0
                             ___bmul
                            ___lldiv
                             ___wmul
                          _apresenta
     _sentido_anti_horario_wave_step
          _sentido_horario_wave_step
 ---------------------------------------------------------------------------------
 (2) _sentido_horario_wave_step                           12     4      8    1940
                                             13 BANK0     12     4      8
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _sentido_anti_horario_wave_step                      12     4      8    1940
                                             13 BANK0     12     4      8
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     410
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8    1222
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _apresenta                                            0     0      0     312
                     _displaySendCmd
                    _displaySendData
 ---------------------------------------------------------------------------------
 (2) _displaySendData                                      5     5      0     156
                                              1 COMMON     5     5      0
                        _serialStart
                         _serialStop
                        _serialWrite
 ---------------------------------------------------------------------------------
 (2) _displaySendCmd                                       5     5      0     156
                                              1 COMMON     5     5      0
                        _serialStart
                         _serialStop
                        _serialWrite
 ---------------------------------------------------------------------------------
 (3) _serialWrite                                          1     1      0      22
                                              0 COMMON     1     1      0
                         _serialWait
 ---------------------------------------------------------------------------------
 (3) _serialStop                                           0     0      0       0
                         _serialWait
 ---------------------------------------------------------------------------------
 (3) _serialStart                                          0     0      0       0
                         _serialWait
 ---------------------------------------------------------------------------------
 (4) _serialWait                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     410
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
     ___wmul (ARG)
   ___lmul
   _calculaDelta
     ___bmul
     ___lldiv
       ___lmul (ARG)
       ___wmul (ARG)
     ___wmul
     _apresenta
       _displaySendCmd
         _serialStart
           _serialWait
         _serialStop
           _serialWait
         _serialWrite
           _serialWait
       _displaySendData
         _serialStart
           _serialWait
         _serialStop
           _serialWait
         _serialWrite
           _serialWait
     _sentido_anti_horario_wave_step
       ___lldiv
         ___lmul (ARG)
         ___wmul (ARG)
       ___lmul
     _sentido_horario_wave_step
       ___lldiv
         ___lmul (ARG)
         ___wmul (ARG)
       ___lmul
   _clearDisplay
     _displaySendCmd
       _serialStart
         _serialWait
       _serialStop
         _serialWait
       _serialWrite
         _serialWait
   _displaySendCmd
     _serialStart
       _serialWait
     _serialStop
       _serialWait
     _serialWrite
       _serialWait
   _displaySendString
     _displaySendData
       _serialStart
         _serialWait
       _serialStop
         _serialWait
       _serialWrite
         _serialWait
   _setupDisplay
     _displaySendCmd
       _serialStart
         _serialWait
       _serialStop
         _serialWait
       _serialWrite
         _serialWait
   _setupSerial
     ___lldiv
       ___lmul (ARG)
       ___wmul (ARG)
   _setupStepper
   _veloc
     _displaySendCmd
       _serialStart
         _serialWait
       _serialStop
         _serialWait
       _serialWrite
         _serialWait
     _displaySendData
       _serialStart
         _serialWait
       _serialStop
         _serialWait
       _serialWrite
         _serialWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      1E       7       37.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7C      12        0.0%
ABS                  0      0      7C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jul 02 23:10:54 2022

                         __end_of_displaySendCmd 0ED2                                                _i 00A4  
                                              _j 004E                                                _p 00A0  
                                              pc 0002                                   ___bmul@product 0072  
                        __end_of_displaySendData 0F11                                      __CFG_CP$OFF 0000  
                                             _p1 006D                                               _p2 006C  
                                             _p3 0066                                               fsr 0004  
                            ___wmul@multiplicand 0072                                              l122 03BA  
                                            l123 03B6                                              l152 07DC  
                                            l242 02A9                                              l234 0235  
                                            l139 0553                                              l180 0DC7  
                                            l236 0251                                              l245 02D5  
                                            l174 0DA1                                              l262 0175  
                                            l254 0101                                              l239 027D  
                                            l256 011D                                              l353 000E  
                                            l265 01A1                                              l259 0149  
                    ??_sentido_horario_wave_step 007E                                     __CFG_CPD$OFF 0000  
                                            u705 0F39                                              u805 0157  
                                            u655 0E97                                              u735 0FB6  
                                            u815 0183                                              u905 000F  
                                            u665 0ED6                                              u825 01AF  
                                            u915 0016                                              u755 0FC4  
                                            u835 010F                                              u765 0FD9  
                                            u845 025F                                              u775 0FEB  
                                            u695 0F31                                              u855 028B  
                                            u865 02B7                                              u795 012B  
                                            u875 02E3                                              u980 0045  
                                            u885 0243                                              u965 0E2C  
                                            u981 0046                                              u973 0034  
                                            u990 0069                                              u982 004B  
                                            u991 006A                                              u983 004C  
                                            u992 006F                                              u993 0070  
                                            _div 005E                                              fsr0 0004  
                                            indf 0000                                     __CFG_IESO$ON 0000  
                                   __CFG_LVP$OFF 0000                                             l1221 0197  
                                           l1213 013F                                             l1225 01C3  
                                           l1217 016B                                             l1227 01D4  
                                           l1251 02F7                                             l1243 029F  
                                           l1315 007C                                             l1165 0F19  
                                           l1253 0308                                             l1341 061E  
                                           l1271 0DCE                                             l1183 0FB2  
                                           l1247 02CB                                             l1239 0273  
                                           l1335 056A                                             l1319 0096  
                                           l1257 0006                                             l1193 0FEA  
                                           l1185 0FC2                                             l1169 0F2F  
                                           l1361 0724                                             l1353 0661  
                                           l1337 0600                                             l1329 051C  
                                           l1275 0DD4                                             l1355 0670  
                                           l1347 064C                                             l1291 0E06  
                                           l1197 0FF7                                             l1373 0767  
                                           l1357 0706                                             l1453 03A6  
                                           l1367 0752                                             l1377 07A1  
                                           l1473 0467                                             l1479 04BC  
                                           STR_1 081C                                             STR_2 0806  
                                           STR_3 0810                                             STR_4 0816  
                                           u1100 06C8                                             u1020 0510  
                                           u1101 06C9                                             u1021 0511  
                                           u1102 06CE                                             u1022 0516  
                                           u1103 06CF                                             u1023 0517  
                                           u1200 0444                                             u1113 0713  
                                           u1201 0445                                             u1050 05C2  
                                           u1202 044A                                             u1123 0722  
                                           u1051 05C3                                             u1043 0568  
                                           u1203 044B                                             u1052 05C8  
                                           u1220 0495                                             u1133 075F  
                                           u1053 05C9                                             u1221 0496  
                                           u1222 049B                                             u1063 060D  
                                           u1223 049C                                             u1215 0475  
                                           u1073 061C                                             u1083 0659  
                                           u1093 066E                                             u1237 034A  
                                           u1247 0370                                             u1257 03AA  
                                           u1195 0424                                             _PIR1 000C  
                                   __CFG_WRT$OFF 0000                                    __CFG_FCMEN$ON 0000  
                                           _ang1 006F                                             _ang2 006E  
                                           _ang3 0067                                             _main 030C  
                         calculaDelta@polaridade 0044                                             btemp 007E  
                                  __CFG_BOREN$ON 0000              sentido_anti_horario_wave_step@F1722 00B2  
                                           start 0000                                ___bmul@multiplier 0073  
                                  __CFG_MCLRE$ON 0000                             __end_of_clearDisplay 0D92  
                                ?_displaySendCmd 0070                                            ?_main 0070  
                                  __CFG_WDTE$OFF 0000                                  __end_of___lldiv 1000  
                                          _PORTD 0008                              ___lmul@multiplicand 0074  
                                          _delta 00AC                                            _valor 0068  
                                          _veloc 0025                                            pclath 000A  
                                          status 0003                        _sentido_horario_wave_step 01D8  
                                          wtemp0 007E                                  __initialization 07E0  
                                   __end_of_main 04CF                                 ?_displaySendData 0070  
                                         ??_main 0045                            __size_of_calculaDelta 0311  
                                         _ADCON0 001F                                           _ADCON1 009F  
                                         _ADRESH 001E                                           _ADRESL 009E  
                                         ?_veloc 0070                                           _ANSELH 0189  
                                         _SSPADD 0093                                           _SSPCON 0014  
                                         _SSPBUF 0013                                   __CFG_PWRTE$OFF 0000  
                                   ?_serialStart 0070                                     ?_serialWrite 0070  
                                         ___bmul 0DCC                                           ___lmul 0F11  
                                         ___wmul 0004                                        ??___lldiv 007D  
                                         _angulo 00A8                                     _calculaDelta 04CF  
                                   ?_setupSerial 002D                          __end_of__initialization 07FC  
                          __size_of_clearDisplay 0005                              ___bmul@multiplicand 0070  
                                 __pcstackCOMMON 0070                                     __pidataBANK1 0DB3  
                                  __end_of_veloc 00A4                               __size_of_apresenta 0050  
                                   _clearDisplay 0D8D                                          ??_veloc 0076  
                                     __pbssBANK0 004E                                       __pbssBANK1 00A0  
                               ??_displaySendCmd 0071  sentido_anti_horario_wave_step@move_anti_horario 0035  
                                     __pmaintext 030C                            displaySendData@data_l 0074  
                          displaySendData@data_u 0075                                          ?___bmul 0070  
                                        ?___lmul 0070                                          ?___wmul 0070  
             __size_of_sentido_horario_wave_step 0134                                   ___lmul@product 0079  
                                        _SSPCON2 0091                                          _SSPSTAT 0094  
                                     __stringtab 0800                   sentido_horario_wave_step@F1713 00B6  
                     sentido_horario_wave_step@g 002D                       sentido_horario_wave_step@x 0031  
                                   _angulo_atual 0052                                __end_of_apresenta 0FA0  
                                __size_of___bmul 0011                                  __size_of___lmul 003F  
                                        ___lldiv 0FA0                                  __size_of___wmul 0021  
                           __size_of_serialStart 000D                             __size_of_serialWrite 0009  
              __end_of_sentido_horario_wave_step 030C                                        _ANSELbits 0188  
                                        __ptext1 0025                                          __ptext2 0E58  
                                        __ptext3 0E21                                          __ptext4 0DEE  
                                        __ptext5 0E05                                          __ptext6 0D8D  
                                        __ptext7 04CF                                          __ptext8 01D8  
                                        __ptext9 00A4                                   main@polaridade 004D  
                                        clrloop0 0D9A                             end_of_initialization 07FC  
                           __size_of_setupSerial 0037                                  ___lldiv@divisor 0020  
                                ___lldiv@counter 002C                                       _serialWait 0DA1  
                                     _serialStop 0D92                                    ?_setupDisplay 0070  
                               setupSerial@clock 002D                                        _PORTBbits 0006  
                                  ?_setupStepper 0070                                        _PORTDbits 0008  
                                     _velocidade 00BA                         __size_of_displaySendData 003F  
                                      _TRISAbits 0085                                        _TRISBbits 0086  
                                _posicaoDesejada 00B0                                        _TRISCbits 0087  
                                      _TRISDbits 0088                                   ??_setupDisplay 0076  
                                 __end_of___bmul 0DDD                                   __end_of___lmul 0F50  
                                 __end_of___wmul 0025                  ?_sentido_anti_horario_wave_step 002D  
               ??_sentido_anti_horario_wave_step 007E                                   ??_setupStepper 0070  
                            start_initialization 07E0            sentido_horario_wave_step@move_horario 0035  
                              _displaySendString 0E05                               ?_displaySendString 0070  
                       __CFG_FOSC$INTRC_NOCLKOUT 0000                                      ?_serialWait 0070  
                                    ?_serialStop 0070                                         ??___bmul 0071  
                                       ??___lmul 0078                                         ??___wmul 0074  
                                     init_fetch0 0DDD                              ??_displaySendString 0076  
                                    __pdataBANK1 00B2                                   _valor_anterior 005A  
                                      ___latbits 0002                                    __pcstackBANK0 0020  
                      __end_of_displaySendString 0E21                                ??_displaySendData 0071  
                           displaySendCmd@data_l 0074                             displaySendCmd@data_u 0075  
                                       ?___lldiv 0020                                        _apresenta 0F50  
                                      __pstrings 0800                             __end_of_setupDisplay 0E05  
                                      _nibbleinf 0064                              __size_of_serialWait 0009  
                                      _nibblesup 0065                              __size_of_serialStop 0007  
                                 __size_of_veloc 007F                             __end_of_setupStepper 0E93  
                                 ___wmul@product 0074                                        clear_ram0 0D99  
                                  ??_serialStart 0070                                    ??_serialWrite 0070  
                                       _PIR1bits 000C                          __size_of_displaySendCmd 003F  
                                  ?_calculaDelta 0070                                       ?_apresenta 0070  
                                    __stringbase 0805                                ___wmul@multiplier 0070  
                     ?_sentido_horario_wave_step 002D                                    ??_setupSerial 0031  
                              ___lmul@multiplier 0070                       __size_of_displaySendString 001C  
                                 ??_calculaDelta 0039                                 __size_of___lldiv 0060  
                            __end_of_serialStart 0DCC                              __end_of_serialWrite 0DB3  
                             __end_of__stringtab 0806                              displaySendData@data 0073  
                                  ?_clearDisplay 0070                                         __ptext10 0F11  
                                       __ptext11 0FA0                                         __ptext20 0DCC  
                                       __ptext12 0F50                                         __ptext13 0ED2  
                                       __ptext14 0E93                                         __ptext15 0DAA  
                                       __ptext16 0D92                                         __ptext17 0DBF  
                                       __ptext18 0DA1                                         __ptext19 0004  
                              __CFG_BOR4V$BOR40V 0000           __end_of_sentido_anti_horario_wave_step 01D8  
        __size_of_sentido_anti_horario_wave_step 0134                   _sentido_anti_horario_wave_step 00A4  
                                       _contador 0056                                    __size_of_main 01C3  
                            __end_of_setupSerial 0E58                                     ??_serialWait 0070  
                                   ??_serialStop 0070                                      ??_apresenta 0076  
                          __size_of_setupDisplay 0017                                  _displaySendData 0ED2  
                                 ??_clearDisplay 0076                             displaySendString@str 0077  
                                       init_ram0 0DE1                            __size_of_setupStepper 003B  
                             __end_of_serialWait 0DAA                               __end_of_serialStop 0D99  
                             displaySendCmd@data 0073                                 ___lldiv@dividend 0024  
                                      stringcode 0800                                      _serialStart 0DBF  
                                    _serialWrite 0DAA                                     _setupDisplay 0DEE  
                                   _posicaoAtual 0062                                   _displaySendCmd 0E93  
                                   _setupStepper 0E58                  sentido_anti_horario_wave_step@g 002D  
                sentido_anti_horario_wave_step@x 0031                                 ___lldiv@quotient 0028  
                                       stringdir 0800                                         stringtab 0800  
                                serialWrite@data 0070                                      _setupSerial 0E21  
                           __end_of_calculaDelta 07E0  
