

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jul 15 18:23:37 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.45
    33                           ; Generated 16/11/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378                           
   379                           	psect	idataBANK0
   380  03C9                     __pidataBANK0:	
   381                           
   382                           ;initializer for rotacionarParaEsquerda@F1713
   383  03C9  340C               	retlw	12
   384  03CA  3406               	retlw	6
   385  03CB  3403               	retlw	3
   386  03CC  3409               	retlw	9
   387                           
   388                           ;initializer for rotacionarParaDireita@F1704
   389  03CD  340C               	retlw	12
   390  03CE  3406               	retlw	6
   391  03CF  3403               	retlw	3
   392  03D0  3409               	retlw	9
   393                           
   394                           	psect	strings
   395  0004                     __pstrings:	
   396  0004                     stringtab:	
   397  0004                     __stringtab:	
   398                           
   399                           ;	String table - string pointers are 1 byte each
   400  0004  1BFF               	btfsc	btemp+1,7
   401  0005  280E               	ljmp	stringcode
   402  0006  1383               	bcf	3,7
   403  0007  187F               	btfsc	btemp+1,0
   404  0008  1783               	bsf	3,7
   405  0009  0800               	movf	0,w
   406  000A  0A84               	incf	4,f
   407  000B  1903               	skipnz
   408  000C  0AFF               	incf	btemp+1,f
   409  000D  0008               	return
   410  000E                     stringcode:	
   411  000E                     stringdir:	
   412  000E  3000               	movlw	high stringdir
   413  000F  008A               	movwf	10
   414  0010  0804               	movf	4,w
   415  0011  0A84               	incf	4,f
   416  0012  0782               	addwf	2,f
   417  0013                     __stringbase:	
   418  0013  3400               	retlw	0
   419  0014                     __end_of__stringtab:	
   420  0014                     _dpowers:	
   421  0014  3401               	retlw	1
   422  0015  3400               	retlw	0
   423  0016  340A               	retlw	10
   424  0017  3400               	retlw	0
   425  0018  3464               	retlw	100
   426  0019  3400               	retlw	0
   427  001A  34E8               	retlw	232
   428  001B  3403               	retlw	3
   429  001C  3410               	retlw	16
   430  001D  3427               	retlw	39
   431  001E                     __end_of_dpowers:	
   432  0006                     _PORTBbits	set	6
   433  001A                     _RCREG	set	26
   434  0019                     _TXREG	set	25
   435  0018                     _RCSTA	set	24
   436  0008                     _PORTD	set	8
   437  0006                     _PORTB	set	6
   438  0065                     _RCIF	set	101
   439  0064                     _TXIF	set	100
   440  0099                     _SPBRG	set	153
   441  0098                     _TXSTAbits	set	152
   442  0088                     _TRISD	set	136
   443  0086                     _TRISB	set	134
   444  0087                     _TRISCbits	set	135
   445  0187                     _BAUDCTLbits	set	391
   446  0189                     _ANSELH	set	393
   447  001E                     STR_1:	
   448  001E  3450               	retlw	80	;'P'
   449  001F  3441               	retlw	65	;'A'
   450  0020  343A               	retlw	58	;':'
   451  0021  3420               	retlw	32	;' '
   452  0022  345F               	retlw	95	;'_'
   453  0023  345F               	retlw	95	;'_'
   454  0024  345F               	retlw	95	;'_'
   455  0025  3420               	retlw	32	;' '
   456  0026  3420               	retlw	32	;' '
   457  0027  3450               	retlw	80	;'P'
   458  0028  3444               	retlw	68	;'D'
   459  0029  343A               	retlw	58	;':'
   460  002A  3420               	retlw	32	;' '
   461  002B  345F               	retlw	95	;'_'
   462  002C  345F               	retlw	95	;'_'
   463  002D  345F               	retlw	95	;'_'
   464  002E  3400               	retlw	0
   465  002F                     STR_2:	
   466  002F  3456               	retlw	86	;'V'
   467  0030  3465               	retlw	101	;'e'
   468  0031  346C               	retlw	108	;'l'
   469  0032  343A               	retlw	58	;':'
   470  0033  3420               	retlw	32	;' '
   471  0034  345F               	retlw	95	;'_'
   472  0035  345F               	retlw	95	;'_'
   473  0036  345F               	retlw	95	;'_'
   474  0037  3420               	retlw	32	;' '
   475  0038  3452               	retlw	82	;'R'
   476  0039  3450               	retlw	80	;'P'
   477  003A  344D               	retlw	77	;'M'
   478  003B  3400               	retlw	0
   479  003C                     STR_5:	
   480  003C  3432               	retlw	50	;'2'
   481  003D  3430               	retlw	48	;'0'
   482  003E  3430               	retlw	48	;'0'
   483  003F  3400               	retlw	0
   484  0040                     STR_3:	
   485  0040  3425               	retlw	37	;'%'
   486  0041  3464               	retlw	100	;'d'
   487  0042  3400               	retlw	0
   488  0040                     
   489                           ; #config settings
   490  0000                     
   491                           	psect	cinit
   492  07E6                     start_initialization:	
   493  07E6                     __initialization:	
   494                           
   495                           ; Initialize objects allocated to BANK0
   496  07E6  1383               	bcf	3,7	;select IRP bank0
   497  07E7  3059               	movlw	low (__pdataBANK0+8)
   498  07E8  00FD               	movwf	btemp+-1
   499  07E9  3003               	movlw	high __pidataBANK0
   500  07EA  00FE               	movwf	btemp
   501  07EB  30C9               	movlw	low __pidataBANK0
   502  07EC  00FF               	movwf	btemp+1
   503  07ED  3051               	movlw	low __pdataBANK0
   504  07EE  0084               	movwf	4
   505  07EF  120A  118A  23E4   	fcall	init_ram0
   506                           
   507                           ; Clear objects allocated to BANK0
   508  07F2  01C7               	clrf	__pbssBANK0& (0+127)
   509  07F3  01C8               	clrf	(__pbssBANK0+1)& (0+127)
   510  07F4  01C9               	clrf	(__pbssBANK0+2)& (0+127)
   511  07F5  01CA               	clrf	(__pbssBANK0+3)& (0+127)
   512  07F6  01CB               	clrf	(__pbssBANK0+4)& (0+127)
   513  07F7  01CC               	clrf	(__pbssBANK0+5)& (0+127)
   514  07F8  01CD               	clrf	(__pbssBANK0+6)& (0+127)
   515  07F9  01CE               	clrf	(__pbssBANK0+7)& (0+127)
   516  07FA  01CF               	clrf	(__pbssBANK0+8)& (0+127)
   517  07FB  01D0               	clrf	(__pbssBANK0+9)& (0+127)
   518  07FC                     end_of_initialization:	
   519                           ;End of C runtime variable initialization code
   520                           
   521  07FC                     __end_of__initialization:	
   522  07FC  0183               	clrf	3
   523  07FD  120A  118A  2EE9   	ljmp	_main	;jump to C main() function
   524                           
   525                           	psect	bssBANK0
   526  0047                     __pbssBANK0:	
   527  0047                     _posicaoDesejada:	
   528  0047                     	ds	2
   529  0049                     _delayTime:	
   530  0049                     	ds	2
   531  004B                     _velocidade:	
   532  004B                     	ds	2
   533  004D                     _posicaoAtual:	
   534  004D                     	ds	2
   535  004F                     _ch:	
   536  004F                     	ds	1
   537  0050                     _input:	
   538  0050                     	ds	1
   539                           
   540                           	psect	dataBANK0
   541  0051                     __pdataBANK0:	
   542  0051                     rotacionarParaEsquerda@F1713:	
   543  0051                     	ds	4
   544  0055                     rotacionarParaDireita@F1704:	
   545  0055                     	ds	4
   546                           
   547                           	psect	inittext
   548  03E0                     init_fetch0:	
   549                           ;	Called with low address in FSR and high address in W
   550                           
   551  03E0  087E               	movf	126,w
   552  03E1  008A               	movwf	10
   553  03E2  087F               	movf	127,w
   554  03E3  0082               	movwf	2
   555  03E4                     init_ram0:	
   556                           ;Called with:
   557                           ;	high address of idata address in btemp 
   558                           ;	low address of idata address in btemp+1 
   559                           ;	low address of data in FSR
   560                           ;	high address + 1 of data in btemp-1
   561                           
   562  03E4  23E0  120A  118A   	fcall	init_fetch0
   563  03E7  0080               	movwf	0
   564  03E8  0A84               	incf	4,f
   565  03E9  0804               	movf	4,w
   566  03EA  067D               	xorwf	125,w
   567  03EB  1903               	btfsc	3,2
   568  03EC  3400               	retlw	0
   569  03ED  0AFF               	incf	127,f
   570  03EE  1903               	btfsc	3,2
   571  03EF  0AFE               	incf	126,f
   572  03F0  2BE4               	goto	init_ram0
   573                           
   574                           	psect	cstackCOMMON
   575  0071                     __pcstackCOMMON:	
   576  0071                     ?_setupDisplay:	
   577  0071                     ?_setupStepper:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0071                     ??_setupStepper:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0071                     ?_clearDisplay:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0071                     ?_setPosicaoDesejada:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0071                     ?_getChar:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0071                     ??_getChar:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0071                     ?_strcat:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0071                     ?_sendCommand:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0071                     ??_sendCommand:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0071                     ?_sendCharToLCD:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0071                     ??_sendCharToLCD:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0071                     ?_getPosicaoAtual:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0071                     ?_getPosicaoDesejada:	
   614                           ; 2 bytes @ 0x0
   615                           
   616  0071                     ?_main:	
   617                           ; 2 bytes @ 0x0
   618                           
   619  0071                     ?___lwdiv:	
   620                           ; 2 bytes @ 0x0
   621                           
   622  0071                     ?___lldiv:	
   623                           ; 2 bytes @ 0x0
   624                           
   625  0071                     strcat@from:	
   626                           ; 4 bytes @ 0x0
   627                           
   628  0071                     setPosicaoDesejada@posicao_desejada:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0071                     ___lwdiv@divisor:	
   632                           ; 2 bytes @ 0x0
   633                           
   634  0071                     ___lldiv@divisor:	
   635                           ; 2 bytes @ 0x0
   636                           
   637                           
   638                           ; 4 bytes @ 0x0
   639  0071                     	ds	1
   640  0072                     ??_strcat:	
   641                           
   642                           ; 1 bytes @ 0x1
   643  0072                     	ds	1
   644  0073                     ??_setPosicaoDesejada:	
   645  0073                     ??_getPosicaoAtual:	
   646                           ; 1 bytes @ 0x2
   647                           
   648  0073                     ??_getPosicaoDesejada:	
   649                           ; 1 bytes @ 0x2
   650                           
   651  0073                     sendCommand@cmd:	
   652                           ; 1 bytes @ 0x2
   653                           
   654  0073                     sendCharToLCD@ch:	
   655                           ; 1 bytes @ 0x2
   656                           
   657  0073                     strcat@to:	
   658                           ; 1 bytes @ 0x2
   659                           
   660  0073                     ___lwdiv@dividend:	
   661                           ; 1 bytes @ 0x2
   662                           
   663                           
   664                           ; 2 bytes @ 0x2
   665  0073                     	ds	1
   666  0074                     ??_setupDisplay:	
   667  0074                     ??_clearDisplay:	
   668                           ; 1 bytes @ 0x3
   669                           
   670  0074                     ?_printLine:	
   671                           ; 1 bytes @ 0x3
   672                           
   673  0074                     ?_setCursor:	
   674                           ; 1 bytes @ 0x3
   675                           
   676  0074                     setCursor@coluna:	
   677                           ; 1 bytes @ 0x3
   678                           
   679  0074                     strcat@cp:	
   680                           ; 1 bytes @ 0x3
   681                           
   682  0074                     printLine@s:	
   683                           ; 1 bytes @ 0x3
   684                           
   685                           
   686                           ; 2 bytes @ 0x3
   687  0074                     	ds	1
   688  0075                     ??_setCursor:	
   689  0075                     ??___lwdiv:	
   690                           ; 1 bytes @ 0x4
   691                           
   692  0075                     ___lldiv@dividend:	
   693                           ; 1 bytes @ 0x4
   694                           
   695                           
   696                           ; 4 bytes @ 0x4
   697  0075                     	ds	1
   698  0076                     ??_printLine:	
   699  0076                     setCursor@linha:	
   700                           ; 1 bytes @ 0x5
   701                           
   702  0076                     ___lwdiv@quotient:	
   703                           ; 1 bytes @ 0x5
   704                           
   705                           
   706                           ; 2 bytes @ 0x5
   707  0076                     	ds	1
   708  0077                     setCursor@position:	
   709                           
   710                           ; 1 bytes @ 0x6
   711  0077                     	ds	1
   712  0078                     ___lwdiv@counter:	
   713                           
   714                           ; 1 bytes @ 0x7
   715  0078                     	ds	1
   716  0079                     ??___lldiv:	
   717  0079                     ?___lwmod:	
   718                           ; 1 bytes @ 0x8
   719                           
   720  0079                     ___lwmod@divisor:	
   721                           ; 2 bytes @ 0x8
   722                           
   723                           
   724                           ; 2 bytes @ 0x8
   725  0079                     	ds	1
   726  007A                     ??_setupSerial:	
   727                           
   728                           ; 1 bytes @ 0x9
   729  007A                     	ds	1
   730  007B                     ___lwmod@dividend:	
   731                           
   732                           ; 2 bytes @ 0xA
   733  007B                     	ds	2
   734  007D                     ??___lwmod:	
   735                           
   736                           ; 1 bytes @ 0xC
   737  007D                     	ds	1
   738                           
   739                           	psect	cstackBANK0
   740  0020                     __pcstackBANK0:	
   741  0020                     ___lwmod@counter:	
   742  0020                     ___lldiv@quotient:	
   743                           ; 1 bytes @ 0x0
   744                           
   745                           
   746                           ; 4 bytes @ 0x0
   747  0020                     	ds	1
   748  0021                     ?_sprintf:	
   749  0021                     sprintf@f:	
   750                           ; 2 bytes @ 0x1
   751                           
   752                           
   753                           ; 1 bytes @ 0x1
   754  0021                     	ds	3
   755  0024                     ??_sprintf:	
   756  0024                     ___lldiv@counter:	
   757                           ; 1 bytes @ 0x4
   758                           
   759                           
   760                           ; 1 bytes @ 0x4
   761  0024                     	ds	1
   762  0025                     ?_setupSerial:	
   763  0025                     setupSerial@baudrate:	
   764                           ; 1 bytes @ 0x5
   765                           
   766                           
   767                           ; 2 bytes @ 0x5
   768  0025                     	ds	2
   769  0027                     sprintf@ap:	
   770  0027                     setupSerial@FOSC:	
   771                           ; 1 bytes @ 0x7
   772                           
   773                           
   774                           ; 4 bytes @ 0x7
   775  0027                     	ds	1
   776  0028                     sprintf@flag:	
   777                           
   778                           ; 1 bytes @ 0x8
   779  0028                     	ds	1
   780  0029                     sprintf@prec:	
   781                           
   782                           ; 1 bytes @ 0x9
   783  0029                     	ds	1
   784  002A                     sprintf@val:	
   785                           
   786                           ; 2 bytes @ 0xA
   787  002A                     	ds	2
   788  002C                     sprintf@sp:	
   789                           
   790                           ; 1 bytes @ 0xC
   791  002C                     	ds	1
   792  002D                     sprintf@c:	
   793                           
   794                           ; 1 bytes @ 0xD
   795  002D                     	ds	1
   796  002E                     ??_main:	
   797                           
   798                           ; 1 bytes @ 0xE
   799  002E                     	ds	1
   800  002F                     main@posAtual_str:	
   801                           
   802                           ; 10 bytes @ 0xF
   803  002F                     	ds	10
   804  0039                     main@posDesejada_str:	
   805                           
   806                           ; 10 bytes @ 0x19
   807  0039                     	ds	10
   808  0043                     main@posAtual:	
   809                           
   810                           ; 2 bytes @ 0x23
   811  0043                     	ds	2
   812  0045                     main@posDesejada:	
   813                           
   814                           ; 2 bytes @ 0x25
   815  0045                     	ds	2
   816                           
   817                           	psect	maintext
   818  06E9                     __pmaintext:	
   819 ;;
   820 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   821 ;;
   822 ;; *************** function _main *****************
   823 ;; Defined at:
   824 ;;		line 34 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  posDesejada_   10   25[BANK0 ] unsigned char [10]
   829 ;;  posAtual_str   10   15[BANK0 ] unsigned char [10]
   830 ;;  posDesejada     2   37[BANK0 ] unsigned int 
   831 ;;  posAtual        2   35[BANK0 ] unsigned int 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  2   44[None  ] int 
   834 ;; Registers used:
   835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : B00/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         0      24       0       0       0
   843 ;;      Temps:          0       1       0       0       0
   844 ;;      Totals:         0      25       0       0       0
   845 ;;Total ram usage:       25 bytes
   846 ;; Hardware stack levels required when called:    2
   847 ;; This function calls:
   848 ;;		_clearDisplay
   849 ;;		_getChar
   850 ;;		_getPosicaoAtual
   851 ;;		_getPosicaoDesejada
   852 ;;		_printLine
   853 ;;		_setCursor
   854 ;;		_setPosicaoDesejada
   855 ;;		_setupDisplay
   856 ;;		_setupSerial
   857 ;;		_setupStepper
   858 ;;		_sprintf
   859 ;;		_strcat
   860 ;; This function is called by:
   861 ;;		Startup code after reset
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _main
   867  06E9                     _main:	
   868                           
   869                           ;main.c: 37: ANSELH=0x00;
   870                           
   871                           ;incstack = 0
   872                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   873  06E9  1683               	bsf	3,5	;RP0=1, select bank3
   874  06EA  1703               	bsf	3,6	;RP1=1, select bank3
   875  06EB  0189               	clrf	9	;volatile
   876                           
   877                           ;main.c: 41: TRISCbits.TRISC6 = 0;
   878  06EC  1683               	bsf	3,5	;RP0=1, select bank1
   879  06ED  1303               	bcf	3,6	;RP1=0, select bank1
   880  06EE  1307               	bcf	7,6	;volatile
   881                           
   882                           ;main.c: 42: TRISCbits.TRISC7 = 1;
   883  06EF  1787               	bsf	7,7	;volatile
   884                           
   885                           ;main.c: 46: TRISB = 0x00;
   886  06F0  0186               	clrf	6	;volatile
   887                           
   888                           ;main.c: 47: PORTB = 0x00;
   889  06F1  1283               	bcf	3,5	;RP0=0, select bank0
   890  06F2  1303               	bcf	3,6	;RP1=0, select bank0
   891  06F3  0186               	clrf	6	;volatile
   892                           
   893                           ;main.c: 51: TRISD = 0x00;
   894  06F4  1683               	bsf	3,5	;RP0=1, select bank1
   895  06F5  1303               	bcf	3,6	;RP1=0, select bank1
   896  06F6  0188               	clrf	8	;volatile
   897                           
   898                           ;main.c: 52: PORTD = 0x00;
   899  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   900  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   901  06F9  0188               	clrf	8	;volatile
   902                           
   903                           ;main.c: 55: setupSerial(2400);
   904  06FA  3060               	movlw	96
   905  06FB  00A5               	movwf	setupSerial@baudrate
   906  06FC  3009               	movlw	9
   907  06FD  00A6               	movwf	setupSerial@baudrate+1
   908  06FE  120A  118A  256F  120A  118A  	fcall	_setupSerial
   909                           
   910                           ;main.c: 56: setupDisplay();
   911  0703  120A  118A  2457  120A  118A  	fcall	_setupDisplay
   912                           
   913                           ;main.c: 57: setupStepper();
   914  0708  120A  118A  23D1  120A  118A  	fcall	_setupStepper
   915                           
   916                           ;main.c: 59: clearDisplay();
   917  070D  120A  118A  23A8  120A  118A  	fcall	_clearDisplay
   918                           
   919                           ;main.c: 60: printLine("PA: ___  PD: ___");
   920  0712  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   921  0713  00F4               	movwf	printLine@s
   922  0714  3080               	movlw	128
   923  0715  00F5               	movwf	printLine@s+1
   924  0716  120A  118A  240C  120A  118A  	fcall	_printLine
   925                           
   926                           ;main.c: 61: setCursor(1,0);
   927  071B  01F4               	clrf	setCursor@coluna
   928  071C  3001               	movlw	1
   929  071D  120A  118A  23F1  120A  118A  	fcall	_setCursor
   930                           
   931                           ;main.c: 62: printLine("Vel: ___ RPM");
   932  0722  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   933  0723  00F4               	movwf	printLine@s
   934  0724  3080               	movlw	128
   935  0725  00F5               	movwf	printLine@s+1
   936  0726  120A  118A  240C  120A  118A  	fcall	_printLine
   937                           
   938                           ;main.c: 64: setPosicaoDesejada(180);
   939  072B  30B4               	movlw	180
   940  072C  00F1               	movwf	setPosicaoDesejada@posicao_desejada
   941  072D  3000               	movlw	0
   942  072E  00F2               	movwf	setPosicaoDesejada@posicao_desejada+1
   943  072F  120A  118A  23C2  120A  118A  	fcall	_setPosicaoDesejada
   944  0734  2F4F               	goto	l1361
   945  0735                     l1385:	
   946                           
   947                           ;main.c: 94: {
   948                           ;main.c: 95: clearDisplay();
   949  0735  120A  118A  23A8  120A  118A  	fcall	_clearDisplay
   950                           
   951                           ;main.c: 96: setCursor(0,0);
   952  073A  01F4               	clrf	setCursor@coluna
   953  073B  3000               	movlw	0
   954  073C  120A  118A  23F1  120A  118A  	fcall	_setCursor
   955                           
   956                           ;main.c: 97: printLine(input);
   957  0741  1283               	bcf	3,5	;RP0=0, select bank0
   958  0742  1303               	bcf	3,6	;RP1=0, select bank0
   959  0743  0850               	movf	_input,w
   960  0744  00F4               	movwf	printLine@s
   961  0745  3000               	movlw	0
   962  0746  00F5               	movwf	printLine@s+1
   963  0747  120A  118A  240C  120A  118A  	fcall	_printLine
   964                           
   965                           ;main.c: 98: input = (0);
   966  074C  1283               	bcf	3,5	;RP0=0, select bank0
   967  074D  1303               	bcf	3,6	;RP1=0, select bank0
   968  074E  01D0               	clrf	_input
   969  074F                     l1361:	
   970                           ;main.c: 67: while(1)
   971                           
   972                           ;main.c: 99: }
   973                           
   974                           
   975                           ;main.c: 68: {
   976                           ;main.c: 70: uint16_t posAtual = getPosicaoAtual();
   977  074F  120A  118A  23B4  120A  118A  	fcall	_getPosicaoAtual
   978  0754  0872               	movf	?_getPosicaoAtual+1,w
   979  0755  1283               	bcf	3,5	;RP0=0, select bank0
   980  0756  1303               	bcf	3,6	;RP1=0, select bank0
   981  0757  00C4               	movwf	main@posAtual+1
   982  0758  0871               	movf	?_getPosicaoAtual,w
   983  0759  00C3               	movwf	main@posAtual
   984                           
   985                           ;main.c: 71: uint16_t posDesejada = getPosicaoDesejada();
   986  075A  120A  118A  23BB  120A  118A  	fcall	_getPosicaoDesejada
   987  075F  0872               	movf	?_getPosicaoDesejada+1,w
   988  0760  1283               	bcf	3,5	;RP0=0, select bank0
   989  0761  1303               	bcf	3,6	;RP1=0, select bank0
   990  0762  00C6               	movwf	main@posDesejada+1
   991  0763  0871               	movf	?_getPosicaoDesejada,w
   992  0764  00C5               	movwf	main@posDesejada
   993                           
   994                           ;main.c: 74: char posAtual_str[10];
   995                           ;main.c: 75: sprintf(posAtual_str, "%d", posAtual);
   996  0765  302D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   997  0766  00AE               	movwf	??_main
   998  0767  082E               	movf	??_main,w
   999  0768  00A1               	movwf	sprintf@f
  1000  0769  0844               	movf	main@posAtual+1,w
  1001  076A  00A3               	movwf	?_sprintf+2
  1002  076B  0843               	movf	main@posAtual,w
  1003  076C  00A2               	movwf	?_sprintf+1
  1004  076D  302F               	movlw	(low (main@posAtual_str| 0))& (0+255)
  1005  076E  120A  118A  2615  120A  118A  	fcall	_sprintf
  1006                           
  1007                           ;main.c: 76: char posDesejada_str[10];
  1008                           ;main.c: 77: sprintf(posDesejada_str, "%d", posDesejada);
  1009  0773  302D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1010  0774  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0775  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0776  00AE               	movwf	??_main
  1013  0777  082E               	movf	??_main,w
  1014  0778  00A1               	movwf	sprintf@f
  1015  0779  0846               	movf	main@posDesejada+1,w
  1016  077A  00A3               	movwf	?_sprintf+2
  1017  077B  0845               	movf	main@posDesejada,w
  1018  077C  00A2               	movwf	?_sprintf+1
  1019  077D  3039               	movlw	(low (main@posDesejada_str| 0))& (0+255)
  1020  077E  120A  118A  2615  120A  118A  	fcall	_sprintf
  1021                           
  1022                           ;main.c: 80: setCursor(0,4);
  1023  0783  3004               	movlw	4
  1024  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1025  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0786  00AE               	movwf	??_main
  1027  0787  082E               	movf	??_main,w
  1028  0788  00F4               	movwf	setCursor@coluna
  1029  0789  3000               	movlw	0
  1030  078A  120A  118A  23F1  120A  118A  	fcall	_setCursor
  1031                           
  1032                           ;main.c: 81: printLine(posAtual_str);
  1033  078F  302F               	movlw	(low (main@posAtual_str| 0))& (0+255)
  1034  0790  00F4               	movwf	printLine@s
  1035  0791  3000               	movlw	0
  1036  0792  00F5               	movwf	printLine@s+1
  1037  0793  120A  118A  240C  120A  118A  	fcall	_printLine
  1038                           
  1039                           ;main.c: 84: setCursor(0,13);
  1040  0798  300D               	movlw	13
  1041  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1042  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1043  079B  00AE               	movwf	??_main
  1044  079C  082E               	movf	??_main,w
  1045  079D  00F4               	movwf	setCursor@coluna
  1046  079E  3000               	movlw	0
  1047  079F  120A  118A  23F1  120A  118A  	fcall	_setCursor
  1048                           
  1049                           ;main.c: 85: printLine(posDesejada_str);
  1050  07A4  3039               	movlw	(low (main@posDesejada_str| 0))& (0+255)
  1051  07A5  00F4               	movwf	printLine@s
  1052  07A6  3000               	movlw	0
  1053  07A7  00F5               	movwf	printLine@s+1
  1054  07A8  120A  118A  240C  120A  118A  	fcall	_printLine
  1055                           
  1056                           ;main.c: 88: setCursor(1,5);
  1057  07AD  3005               	movlw	5
  1058  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1059  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1060  07B0  00AE               	movwf	??_main
  1061  07B1  082E               	movf	??_main,w
  1062  07B2  00F4               	movwf	setCursor@coluna
  1063  07B3  3001               	movlw	1
  1064  07B4  120A  118A  23F1  120A  118A  	fcall	_setCursor
  1065                           
  1066                           ;main.c: 89: printLine("200");
  1067  07B9  3029               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1068  07BA  00F4               	movwf	printLine@s
  1069  07BB  3080               	movlw	128
  1070  07BC  00F5               	movwf	printLine@s+1
  1071  07BD  120A  118A  240C  120A  118A  	fcall	_printLine
  1072                           
  1073                           ;main.c: 92: ch = getChar();
  1074  07C2  120A  118A  23AD  120A  118A  	fcall	_getChar
  1075  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1076  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1077  07C9  00AE               	movwf	??_main
  1078  07CA  082E               	movf	??_main,w
  1079  07CB  00CF               	movwf	_ch
  1080                           
  1081                           ;main.c: 93: if(ch == 0x0D)
  1082  07CC  300D               	movlw	13
  1083  07CD  064F               	xorwf	_ch,w
  1084  07CE  1903               	btfsc	3,2
  1085  07CF  2F35               	goto	l1385
  1086                           
  1087                           ;main.c: 100: else
  1088                           ;main.c: 101: {
  1089                           ;main.c: 103: strcat(input, ch);
  1090  07D0  084F               	movf	_ch,w
  1091  07D1  00AE               	movwf	??_main
  1092  07D2  082E               	movf	??_main,w
  1093  07D3  00F1               	movwf	strcat@from
  1094  07D4  0850               	movf	_input,w
  1095  07D5  120A  118A  242F  120A  118A  	fcall	_strcat
  1096                           
  1097                           ;main.c: 104: printLine(input);
  1098  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1099  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1100  07DC  0850               	movf	_input,w
  1101  07DD  00F4               	movwf	printLine@s
  1102  07DE  3000               	movlw	0
  1103  07DF  00F5               	movwf	printLine@s+1
  1104  07E0  120A  118A  240C  120A  118A  	fcall	_printLine
  1105  07E5  2F4F               	goto	l1361
  1106  07E6                     __end_of_main:	
  1107                           
  1108                           	psect	text1
  1109  042F                     __ptext1:	
  1110 ;; *************** function _strcat *****************
  1111 ;; Defined at:
  1112 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  to              1    wreg     PTR unsigned char 
  1115 ;;		 -> NULL(0), 
  1116 ;;  from            1    0[COMMON] PTR const unsigned char 
  1117 ;;		 -> ROM(8192), 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  to              1    2[COMMON] PTR unsigned char 
  1120 ;;		 -> NULL(0), 
  1121 ;;  cp              1    3[COMMON] PTR unsigned char 
  1122 ;;		 -> NULL(0), 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      PTR unsigned char 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1132 ;;      Params:         1       0       0       0       0
  1133 ;;      Locals:         2       0       0       0       0
  1134 ;;      Temps:          1       0       0       0       0
  1135 ;;      Totals:         4       0       0       0       0
  1136 ;;Total ram usage:        4 bytes
  1137 ;; Hardware stack levels used:    2
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           
  1146                           ;psect for function _strcat
  1147  042F                     _strcat:	
  1148                           
  1149                           ;incstack = 0
  1150                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+pclath]
  1151                           ;strcat@to stored from wreg
  1152  042F  00F3               	movwf	strcat@to
  1153  0430  0873               	movf	strcat@to,w
  1154  0431  00F2               	movwf	??_strcat
  1155  0432  0872               	movf	??_strcat,w
  1156  0433  00F4               	movwf	strcat@cp
  1157  0434                     l1299:	
  1158  0434  0874               	movf	strcat@cp,w
  1159  0435  0084               	movwf	4
  1160  0436  1383               	bcf	3,7	;select IRP bank0
  1161  0437  0800               	movf	0,w
  1162  0438  1903               	btfsc	3,2
  1163  0439  2C47               	goto	l1303
  1164  043A  3001               	movlw	1
  1165  043B  00F2               	movwf	??_strcat
  1166  043C  0872               	movf	??_strcat,w
  1167  043D  07F4               	addwf	strcat@cp,f
  1168  043E  2C34               	goto	l1299
  1169  043F                     l1301:	
  1170  043F  3001               	movlw	1
  1171  0440  00F2               	movwf	??_strcat
  1172  0441  0872               	movf	??_strcat,w
  1173  0442  07F4               	addwf	strcat@cp,f
  1174  0443  3001               	movlw	1
  1175  0444  00F2               	movwf	??_strcat
  1176  0445  0872               	movf	??_strcat,w
  1177  0446  07F1               	addwf	strcat@from,f
  1178  0447                     l1303:	
  1179  0447  0871               	movf	strcat@from,w
  1180  0448  0084               	movwf	4
  1181  0449  120A  118A  200E  120A  118A  	fcall	stringdir
  1182  044E  00F2               	movwf	??_strcat
  1183  044F  0874               	movf	strcat@cp,w
  1184  0450  0084               	movwf	4
  1185  0451  0872               	movf	??_strcat,w
  1186  0452  0080               	movwf	0
  1187  0453  0800               	movf	0,w
  1188  0454  1903               	btfsc	3,2
  1189  0455  0008               	return
  1190  0456  2C3F               	goto	l1301
  1191  0457                     __end_of_strcat:	
  1192                           ;	Return value of _strcat is never used
  1193                           
  1194                           
  1195                           	psect	text2
  1196  0615                     __ptext2:	
  1197 ;; *************** function _sprintf *****************
  1198 ;; Defined at:
  1199 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  sp              1    wreg     PTR unsigned char 
  1202 ;;		 -> main@posDesejada_str(10), main@posAtual_str(10), 
  1203 ;;  f               1    1[BANK0 ] PTR const unsigned char 
  1204 ;;		 -> STR_4(3), STR_3(3), 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  sp              1   12[BANK0 ] PTR unsigned char 
  1207 ;;		 -> main@posDesejada_str(10), main@posAtual_str(10), 
  1208 ;;  tmpval          4    0        struct .
  1209 ;;  val             2   10[BANK0 ] unsigned int 
  1210 ;;  cp              2    0        PTR const unsigned char 
  1211 ;;  len             2    0        unsigned int 
  1212 ;;  c               1   13[BANK0 ] char 
  1213 ;;  prec            1    9[BANK0 ] char 
  1214 ;;  flag            1    8[BANK0 ] unsigned char 
  1215 ;;  ap              1    7[BANK0 ] PTR void [1]
  1216 ;;		 -> ?_sprintf(2), 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  2    1[BANK0 ] int 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       3       0       0       0
  1227 ;;      Locals:         0       7       0       0       0
  1228 ;;      Temps:          0       3       0       0       0
  1229 ;;      Totals:         0      13       0       0       0
  1230 ;;Total ram usage:       13 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    1
  1233 ;; This function calls:
  1234 ;;		___lwdiv
  1235 ;;		___lwmod
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           
  1242                           ;psect for function _sprintf
  1243  0615                     _sprintf:	
  1244                           
  1245                           ;incstack = 0
  1246                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1247                           ;sprintf@sp stored from wreg
  1248  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0617  00AC               	movwf	sprintf@sp
  1251                           
  1252                           ;doprnt.c: 494: va_list ap;
  1253                           ;doprnt.c: 499: signed char c;
  1254                           ;doprnt.c: 506: signed char prec;
  1255                           ;doprnt.c: 508: unsigned char flag;
  1256                           ;doprnt.c: 523: union {
  1257                           ;doprnt.c: 524: unsigned long vd;
  1258                           ;doprnt.c: 525: double integ;
  1259                           ;doprnt.c: 526: } tmpval;
  1260                           ;doprnt.c: 528: unsigned int val;
  1261                           ;doprnt.c: 529: unsigned len;
  1262                           ;doprnt.c: 530: const char * cp;
  1263                           ;doprnt.c: 533: *ap = __va_start();
  1264  0618  3022               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1265  0619  00A4               	movwf	??_sprintf
  1266  061A  0824               	movf	??_sprintf,w
  1267  061B  00A7               	movwf	sprintf@ap
  1268  061C                     l1283:	
  1269                           ;doprnt.c: 536: while(c = *f++) {
  1270                           
  1271  061C  3001               	movlw	1
  1272  061D  07A1               	addwf	sprintf@f,f
  1273  061E  30FF               	movlw	-1
  1274  061F  0721               	addwf	sprintf@f,w
  1275  0620  0084               	movwf	4
  1276  0621  120A  118A  200E  120A  118A  	fcall	stringdir
  1277  0626  00A4               	movwf	??_sprintf
  1278  0627  0824               	movf	??_sprintf,w
  1279  0628  00AD               	movwf	sprintf@c
  1280  0629  082D               	movf	sprintf@c,w
  1281  062A  1903               	btfsc	3,2
  1282  062B  2EE4               	goto	l1285
  1283                           
  1284                           ;doprnt.c: 538: if(c != '%')
  1285  062C  3025               	movlw	37
  1286  062D  062D               	xorwf	sprintf@c,w
  1287  062E  1903               	btfsc	3,2
  1288  062F  2E3C               	goto	l1239
  1289                           
  1290                           ;doprnt.c: 540: {
  1291                           ;doprnt.c: 541: ((*sp++ = (c)));
  1292  0630  082D               	movf	sprintf@c,w
  1293  0631  00A4               	movwf	??_sprintf
  1294  0632  082C               	movf	sprintf@sp,w
  1295  0633  0084               	movwf	4
  1296  0634  0824               	movf	??_sprintf,w
  1297  0635  1383               	bcf	3,7	;select IRP bank0
  1298  0636  0080               	movwf	0
  1299  0637  3001               	movlw	1
  1300  0638  00A4               	movwf	??_sprintf
  1301  0639  0824               	movf	??_sprintf,w
  1302  063A  07AC               	addwf	sprintf@sp,f
  1303                           
  1304                           ;doprnt.c: 542: continue;
  1305  063B  2E1C               	goto	l1283
  1306  063C                     l1239:	
  1307                           
  1308                           ;doprnt.c: 543: }
  1309                           ;doprnt.c: 548: flag = 0;
  1310  063C  01A8               	clrf	sprintf@flag
  1311                           
  1312                           ;doprnt.c: 822: }
  1313                           
  1314                           ;doprnt.c: 813: continue;
  1315                           
  1316                           ;doprnt.c: 802: default:
  1317                           
  1318                           ;doprnt.c: 698: case 'i':
  1319                           ;doprnt.c: 699: break;
  1320                           
  1321                           ;doprnt.c: 697: case 'd':
  1322                           
  1323                           ;doprnt.c: 638: goto alldone;
  1324                           
  1325                           ;doprnt.c: 637: case 0:
  1326                           
  1327                           ;doprnt.c: 635: switch(c = *f++) {
  1328  063D  3001               	movlw	1
  1329  063E  07A1               	addwf	sprintf@f,f
  1330  063F  30FF               	movlw	-1
  1331  0640  0721               	addwf	sprintf@f,w
  1332  0641  0084               	movwf	4
  1333  0642  120A  118A  200E  120A  118A  	fcall	stringdir
  1334  0647  00AD               	movwf	sprintf@c
  1335                           
  1336                           ; Switch size 1, requested type "space"
  1337                           ; Number of cases is 3, Range of values is 0 to 105
  1338                           ; switch strategies available:
  1339                           ; Name         Instructions Cycles
  1340                           ; simple_byte           10     6 (average)
  1341                           ; jumptable            260     6 (fixed)
  1342                           ;	Chosen strategy is simple_byte
  1343  0648  3A00               	xorlw	0	; case 0
  1344  0649  1903               	skipnz
  1345  064A  2EE4               	goto	l1285
  1346  064B  3A64               	xorlw	100	; case 100
  1347  064C  1903               	skipnz
  1348  064D  2E52               	goto	l1245
  1349  064E  3A0D               	xorlw	13	; case 105
  1350  064F  1903               	skipnz
  1351  0650  2E52               	goto	l1245
  1352  0651  2E1C               	goto	l1283
  1353  0652                     l1245:	
  1354                           
  1355                           ;doprnt.c: 1253: {
  1356                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1357  0652  0827               	movf	sprintf@ap,w
  1358  0653  0084               	movwf	4
  1359  0654  1383               	bcf	3,7	;select IRP bank0
  1360  0655  0800               	movf	0,w
  1361  0656  00AA               	movwf	sprintf@val
  1362  0657  0A84               	incf	4,f
  1363  0658  0800               	movf	0,w
  1364  0659  00AB               	movwf	sprintf@val+1
  1365  065A  3002               	movlw	2
  1366  065B  00A4               	movwf	??_sprintf
  1367  065C  0824               	movf	??_sprintf,w
  1368  065D  07A7               	addwf	sprintf@ap,f
  1369                           
  1370                           ;doprnt.c: 1261: if((int)val < 0) {
  1371  065E  1FAB               	btfss	sprintf@val+1,7
  1372  065F  2E69               	goto	l1255
  1373                           
  1374                           ;doprnt.c: 1262: flag |= 0x03;
  1375  0660  3003               	movlw	3
  1376  0661  00A4               	movwf	??_sprintf
  1377  0662  0824               	movf	??_sprintf,w
  1378  0663  04A8               	iorwf	sprintf@flag,f
  1379                           
  1380                           ;doprnt.c: 1263: val = -val;
  1381  0664  09AA               	comf	sprintf@val,f
  1382  0665  09AB               	comf	sprintf@val+1,f
  1383  0666  0AAA               	incf	sprintf@val,f
  1384  0667  1903               	skipnz
  1385  0668  0AAB               	incf	sprintf@val+1,f
  1386  0669                     l1255:	
  1387                           
  1388                           ;doprnt.c: 1264: }
  1389                           ;doprnt.c: 1266: }
  1390                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1391  0669  01AD               	clrf	sprintf@c
  1392  066A  0AAD               	incf	sprintf@c,f
  1393  066B  3005               	movlw	5
  1394  066C  062D               	xorwf	sprintf@c,w
  1395  066D  1903               	btfsc	3,2
  1396  066E  2E90               	goto	l1267
  1397  066F                     l1261:	
  1398                           
  1399                           ;doprnt.c: 1306: if(val < dpowers[c])
  1400  066F  082D               	movf	sprintf@c,w
  1401  0670  00A4               	movwf	??_sprintf
  1402  0671  0724               	addwf	??_sprintf,w
  1403  0672  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1404  0673  0084               	movwf	4
  1405  0674  120A  118A  200E  120A  118A  	fcall	stringdir
  1406  0679  00A5               	movwf	??_sprintf+1
  1407  067A  120A  118A  200E  120A  118A  	fcall	stringdir
  1408  067F  00A6               	movwf	??_sprintf+2
  1409  0680  0826               	movf	??_sprintf+2,w
  1410  0681  022B               	subwf	sprintf@val+1,w
  1411  0682  1D03               	skipz
  1412  0683  2E86               	goto	u735
  1413  0684  0825               	movf	??_sprintf+1,w
  1414  0685  022A               	subwf	sprintf@val,w
  1415  0686                     u735:	
  1416  0686  1C03               	btfss	3,0
  1417  0687  2E90               	goto	l1267
  1418                           
  1419                           ;doprnt.c: 1307: break;
  1420  0688  3001               	movlw	1
  1421  0689  00A4               	movwf	??_sprintf
  1422  068A  0824               	movf	??_sprintf,w
  1423  068B  07AD               	addwf	sprintf@c,f
  1424  068C  3005               	movlw	5
  1425  068D  062D               	xorwf	sprintf@c,w
  1426  068E  1D03               	btfss	3,2
  1427  068F  2E6F               	goto	l1261
  1428  0690                     l1267:	
  1429                           
  1430                           ;doprnt.c: 1422: {
  1431                           ;doprnt.c: 1438: if(flag & 0x03)
  1432  0690  0828               	movf	sprintf@flag,w
  1433  0691  3903               	andlw	3
  1434  0692  1903               	btfsc	3,2
  1435  0693  2E9F               	goto	l1273
  1436                           
  1437                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1438  0694  302D               	movlw	45
  1439  0695  00A4               	movwf	??_sprintf
  1440  0696  082C               	movf	sprintf@sp,w
  1441  0697  0084               	movwf	4
  1442  0698  0824               	movf	??_sprintf,w
  1443  0699  1383               	bcf	3,7	;select IRP bank0
  1444  069A  0080               	movwf	0
  1445  069B  3001               	movlw	1
  1446  069C  00A4               	movwf	??_sprintf
  1447  069D  0824               	movf	??_sprintf,w
  1448  069E  07AC               	addwf	sprintf@sp,f
  1449  069F                     l1273:	
  1450                           
  1451                           ;doprnt.c: 1469: }
  1452                           ;doprnt.c: 1472: prec = c;
  1453  069F  082D               	movf	sprintf@c,w
  1454  06A0  00A4               	movwf	??_sprintf
  1455  06A1  0824               	movf	??_sprintf,w
  1456  06A2  00A9               	movwf	sprintf@prec
  1457  06A3                     l1281:	
  1458                           ;doprnt.c: 1474: while(prec--) {
  1459                           
  1460  06A3  30FF               	movlw	255
  1461  06A4  00A4               	movwf	??_sprintf
  1462  06A5  0824               	movf	??_sprintf,w
  1463  06A6  07A9               	addwf	sprintf@prec,f
  1464  06A7  0A29               	incf	sprintf@prec,w
  1465  06A8  1903               	btfsc	3,2
  1466  06A9  2E1C               	goto	l1283
  1467                           
  1468                           ;doprnt.c: 1478: {
  1469                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1470  06AA  300A               	movlw	10
  1471  06AB  00F9               	movwf	___lwmod@divisor
  1472  06AC  3000               	movlw	0
  1473  06AD  00FA               	movwf	___lwmod@divisor+1
  1474  06AE  0829               	movf	sprintf@prec,w
  1475  06AF  00A4               	movwf	??_sprintf
  1476  06B0  0724               	addwf	??_sprintf,w
  1477  06B1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1478  06B2  0084               	movwf	4
  1479  06B3  120A  118A  200E  120A  118A  	fcall	stringdir
  1480  06B8  00F1               	movwf	___lwdiv@divisor
  1481  06B9  120A  118A  200E  120A  118A  	fcall	stringdir
  1482  06BE  00F2               	movwf	___lwdiv@divisor+1
  1483  06BF  082B               	movf	sprintf@val+1,w
  1484  06C0  00F4               	movwf	___lwdiv@dividend+1
  1485  06C1  082A               	movf	sprintf@val,w
  1486  06C2  00F3               	movwf	___lwdiv@dividend
  1487  06C3  120A  118A  24B7  120A  118A  	fcall	___lwdiv
  1488  06C8  0872               	movf	?___lwdiv+1,w
  1489  06C9  00FC               	movwf	___lwmod@dividend+1
  1490  06CA  0871               	movf	?___lwdiv,w
  1491  06CB  00FB               	movwf	___lwmod@dividend
  1492  06CC  120A  118A  2483  120A  118A  	fcall	___lwmod
  1493  06D1  0879               	movf	?___lwmod,w
  1494  06D2  3E30               	addlw	48
  1495  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1496  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1497  06D5  00A5               	movwf	??_sprintf+1
  1498  06D6  0825               	movf	??_sprintf+1,w
  1499  06D7  00AD               	movwf	sprintf@c
  1500                           
  1501                           ;doprnt.c: 1523: }
  1502                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1503  06D8  082D               	movf	sprintf@c,w
  1504  06D9  00A4               	movwf	??_sprintf
  1505  06DA  082C               	movf	sprintf@sp,w
  1506  06DB  0084               	movwf	4
  1507  06DC  0824               	movf	??_sprintf,w
  1508  06DD  1383               	bcf	3,7	;select IRP bank0
  1509  06DE  0080               	movwf	0
  1510  06DF  3001               	movlw	1
  1511  06E0  00A4               	movwf	??_sprintf
  1512  06E1  0824               	movf	??_sprintf,w
  1513  06E2  07AC               	addwf	sprintf@sp,f
  1514  06E3  2EA3               	goto	l1281
  1515  06E4                     l1285:	
  1516                           ;doprnt.c: 1525: }
  1517                           ;doprnt.c: 1533: }
  1518                           ;doprnt.c: 1535: alldone:
  1519                           
  1520                           
  1521                           ;doprnt.c: 1538: *sp = 0;
  1522  06E4  082C               	movf	sprintf@sp,w
  1523  06E5  0084               	movwf	4
  1524  06E6  1383               	bcf	3,7	;select IRP bank0
  1525  06E7  0180               	clrf	0
  1526  06E8  0008               	return
  1527  06E9                     __end_of_sprintf:	
  1528                           ;doprnt.c: 1540: return 0;
  1529                           ;	Return value of _sprintf is never used
  1530                           
  1531                           
  1532                           	psect	text3
  1533  0483                     __ptext3:	
  1534 ;; *************** function ___lwmod *****************
  1535 ;; Defined at:
  1536 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  divisor         2    8[COMMON] unsigned int 
  1539 ;;  dividend        2   10[COMMON] unsigned int 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  counter         1    0[BANK0 ] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  2    8[COMMON] unsigned int 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         4       0       0       0       0
  1552 ;;      Locals:         0       1       0       0       0
  1553 ;;      Temps:          1       0       0       0       0
  1554 ;;      Totals:         5       1       0       0       0
  1555 ;;Total ram usage:        6 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_sprintf
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           
  1565                           ;psect for function ___lwmod
  1566  0483                     ___lwmod:	
  1567                           
  1568                           ;incstack = 0
  1569                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1570  0483  0879               	movf	___lwmod@divisor,w
  1571  0484  047A               	iorwf	___lwmod@divisor+1,w
  1572  0485  1903               	btfsc	3,2
  1573  0486  2CB2               	goto	l1159
  1574  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1575  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1576  0489  01A0               	clrf	___lwmod@counter
  1577  048A  0AA0               	incf	___lwmod@counter,f
  1578  048B                     l1149:	
  1579  048B  1BFA               	btfsc	___lwmod@divisor+1,7
  1580  048C  2C99               	goto	l1151
  1581  048D  3001               	movlw	1
  1582  048E                     u615:	
  1583  048E  1003               	clrc
  1584  048F  0DF9               	rlf	___lwmod@divisor,f
  1585  0490  0DFA               	rlf	___lwmod@divisor+1,f
  1586  0491  3EFF               	addlw	-1
  1587  0492  1D03               	skipz
  1588  0493  2C8E               	goto	u615
  1589  0494  3001               	movlw	1
  1590  0495  00FD               	movwf	??___lwmod
  1591  0496  087D               	movf	??___lwmod,w
  1592  0497  07A0               	addwf	___lwmod@counter,f
  1593  0498  2C8B               	goto	l1149
  1594  0499                     l1151:	
  1595  0499  087A               	movf	___lwmod@divisor+1,w
  1596  049A  027C               	subwf	___lwmod@dividend+1,w
  1597  049B  1D03               	skipz
  1598  049C  2C9F               	goto	u635
  1599  049D  0879               	movf	___lwmod@divisor,w
  1600  049E  027B               	subwf	___lwmod@dividend,w
  1601  049F                     u635:	
  1602  049F  1C03               	skipc
  1603  04A0  2CA7               	goto	l1155
  1604  04A1  0879               	movf	___lwmod@divisor,w
  1605  04A2  02FB               	subwf	___lwmod@dividend,f
  1606  04A3  087A               	movf	___lwmod@divisor+1,w
  1607  04A4  1C03               	skipc
  1608  04A5  03FC               	decf	___lwmod@dividend+1,f
  1609  04A6  02FC               	subwf	___lwmod@dividend+1,f
  1610  04A7                     l1155:	
  1611  04A7  3001               	movlw	1
  1612  04A8                     u645:	
  1613  04A8  1003               	clrc
  1614  04A9  0CFA               	rrf	___lwmod@divisor+1,f
  1615  04AA  0CF9               	rrf	___lwmod@divisor,f
  1616  04AB  3EFF               	addlw	-1
  1617  04AC  1D03               	skipz
  1618  04AD  2CA8               	goto	u645
  1619  04AE  3001               	movlw	1
  1620  04AF  02A0               	subwf	___lwmod@counter,f
  1621  04B0  1D03               	btfss	3,2
  1622  04B1  2C99               	goto	l1151
  1623  04B2                     l1159:	
  1624  04B2  087C               	movf	___lwmod@dividend+1,w
  1625  04B3  00FA               	movwf	?___lwmod+1
  1626  04B4  087B               	movf	___lwmod@dividend,w
  1627  04B5  00F9               	movwf	?___lwmod
  1628  04B6  0008               	return
  1629  04B7                     __end_of___lwmod:	
  1630                           
  1631                           	psect	text4
  1632  04B7                     __ptext4:	
  1633 ;; *************** function ___lwdiv *****************
  1634 ;; Defined at:
  1635 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  divisor         2    0[COMMON] unsigned int 
  1638 ;;  dividend        2    2[COMMON] unsigned int 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  quotient        2    5[COMMON] unsigned int 
  1641 ;;  counter         1    7[COMMON] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  2    0[COMMON] unsigned int 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1651 ;;      Params:         4       0       0       0       0
  1652 ;;      Locals:         3       0       0       0       0
  1653 ;;      Temps:          1       0       0       0       0
  1654 ;;      Totals:         8       0       0       0       0
  1655 ;;Total ram usage:        8 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_sprintf
  1661 ;;		_setVelocidade
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           
  1666                           ;psect for function ___lwdiv
  1667  04B7                     ___lwdiv:	
  1668                           
  1669                           ;incstack = 0
  1670                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1671  04B7  01F6               	clrf	___lwdiv@quotient
  1672  04B8  01F7               	clrf	___lwdiv@quotient+1
  1673  04B9  0871               	movf	___lwdiv@divisor,w
  1674  04BA  0472               	iorwf	___lwdiv@divisor+1,w
  1675  04BB  1903               	btfsc	3,2
  1676  04BC  2CEE               	goto	l1137
  1677  04BD  01F8               	clrf	___lwdiv@counter
  1678  04BE  0AF8               	incf	___lwdiv@counter,f
  1679  04BF                     l1125:	
  1680  04BF  1BF2               	btfsc	___lwdiv@divisor+1,7
  1681  04C0  2CCD               	goto	l1127
  1682  04C1  3001               	movlw	1
  1683  04C2                     u545:	
  1684  04C2  1003               	clrc
  1685  04C3  0DF1               	rlf	___lwdiv@divisor,f
  1686  04C4  0DF2               	rlf	___lwdiv@divisor+1,f
  1687  04C5  3EFF               	addlw	-1
  1688  04C6  1D03               	skipz
  1689  04C7  2CC2               	goto	u545
  1690  04C8  3001               	movlw	1
  1691  04C9  00F5               	movwf	??___lwdiv
  1692  04CA  0875               	movf	??___lwdiv,w
  1693  04CB  07F8               	addwf	___lwdiv@counter,f
  1694  04CC  2CBF               	goto	l1125
  1695  04CD                     l1127:	
  1696  04CD  3001               	movlw	1
  1697  04CE                     u565:	
  1698  04CE  1003               	clrc
  1699  04CF  0DF6               	rlf	___lwdiv@quotient,f
  1700  04D0  0DF7               	rlf	___lwdiv@quotient+1,f
  1701  04D1  3EFF               	addlw	-1
  1702  04D2  1D03               	skipz
  1703  04D3  2CCE               	goto	u565
  1704  04D4  0872               	movf	___lwdiv@divisor+1,w
  1705  04D5  0274               	subwf	___lwdiv@dividend+1,w
  1706  04D6  1D03               	skipz
  1707  04D7  2CDA               	goto	u575
  1708  04D8  0871               	movf	___lwdiv@divisor,w
  1709  04D9  0273               	subwf	___lwdiv@dividend,w
  1710  04DA                     u575:	
  1711  04DA  1C03               	skipc
  1712  04DB  2CE3               	goto	l1133
  1713  04DC  0871               	movf	___lwdiv@divisor,w
  1714  04DD  02F3               	subwf	___lwdiv@dividend,f
  1715  04DE  0872               	movf	___lwdiv@divisor+1,w
  1716  04DF  1C03               	skipc
  1717  04E0  03F4               	decf	___lwdiv@dividend+1,f
  1718  04E1  02F4               	subwf	___lwdiv@dividend+1,f
  1719  04E2  1476               	bsf	___lwdiv@quotient,0
  1720  04E3                     l1133:	
  1721  04E3  3001               	movlw	1
  1722  04E4                     u585:	
  1723  04E4  1003               	clrc
  1724  04E5  0CF2               	rrf	___lwdiv@divisor+1,f
  1725  04E6  0CF1               	rrf	___lwdiv@divisor,f
  1726  04E7  3EFF               	addlw	-1
  1727  04E8  1D03               	skipz
  1728  04E9  2CE4               	goto	u585
  1729  04EA  3001               	movlw	1
  1730  04EB  02F8               	subwf	___lwdiv@counter,f
  1731  04EC  1D03               	btfss	3,2
  1732  04ED  2CCD               	goto	l1127
  1733  04EE                     l1137:	
  1734  04EE  0877               	movf	___lwdiv@quotient+1,w
  1735  04EF  00F2               	movwf	?___lwdiv+1
  1736  04F0  0876               	movf	___lwdiv@quotient,w
  1737  04F1  00F1               	movwf	?___lwdiv
  1738  04F2  0008               	return
  1739  04F3                     __end_of___lwdiv:	
  1740                           
  1741                           	psect	text5
  1742  03D1                     __ptext5:	
  1743 ;; *************** function _setupStepper *****************
  1744 ;; Defined at:
  1745 ;;		line 11 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\stepper.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;		None
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;		None
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         0       0       0       0       0
  1760 ;;      Locals:         0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0
  1762 ;;      Totals:         0       0       0       0       0
  1763 ;;Total ram usage:        0 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_main
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function _setupStepper
  1774  03D1                     _setupStepper:	
  1775                           
  1776                           ;stepper.c: 13: posicaoAtual = 0;
  1777                           
  1778                           ;incstack = 0
  1779                           ; Regs used in _setupStepper: [wreg+status,2]
  1780  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1781  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1782  03D3  01CD               	clrf	_posicaoAtual
  1783  03D4  01CE               	clrf	_posicaoAtual+1
  1784                           
  1785                           ;stepper.c: 14: velocidade = 1;
  1786  03D5  3001               	movlw	1
  1787  03D6  00CB               	movwf	_velocidade
  1788  03D7  3000               	movlw	0
  1789  03D8  00CC               	movwf	_velocidade+1
  1790                           
  1791                           ;stepper.c: 15: delayTime = 50;
  1792  03D9  3032               	movlw	50
  1793  03DA  00C9               	movwf	_delayTime
  1794  03DB  3000               	movlw	0
  1795  03DC  00CA               	movwf	_delayTime+1
  1796                           
  1797                           ;stepper.c: 16: posicaoDesejada = 0;
  1798  03DD  01C7               	clrf	_posicaoDesejada
  1799  03DE  01C8               	clrf	_posicaoDesejada+1
  1800  03DF  0008               	return
  1801  03E0                     __end_of_setupStepper:	
  1802                           
  1803                           	psect	text6
  1804  056F                     __ptext6:	
  1805 ;; *************** function _setupSerial *****************
  1806 ;; Defined at:
  1807 ;;		line 4 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\serial.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  baudrate        2    5[BANK0 ] unsigned int 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  FOSC            4    7[BANK0 ] unsigned long 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0, pclath, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1821 ;;      Params:         0       2       0       0       0
  1822 ;;      Locals:         0       4       0       0       0
  1823 ;;      Temps:          4       0       0       0       0
  1824 ;;      Totals:         4       6       0       0       0
  1825 ;;Total ram usage:       10 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    1
  1828 ;; This function calls:
  1829 ;;		___lldiv
  1830 ;; This function is called by:
  1831 ;;		_main
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           
  1836                           ;psect for function _setupSerial
  1837  056F                     _setupSerial:	
  1838                           
  1839                           ;serial.c: 6: unsigned long FOSC = 4000000;
  1840                           
  1841                           ;incstack = 0
  1842                           ; Regs used in _setupSerial: [wreg+status,2+status,0+pclath+cstack]
  1843  056F  3000               	movlw	0
  1844  0570  1283               	bcf	3,5	;RP0=0, select bank0
  1845  0571  1303               	bcf	3,6	;RP1=0, select bank0
  1846  0572  00AA               	movwf	setupSerial@FOSC+3
  1847  0573  303D               	movlw	61
  1848  0574  00A9               	movwf	setupSerial@FOSC+2
  1849  0575  3009               	movlw	9
  1850  0576  00A8               	movwf	setupSerial@FOSC+1
  1851  0577  3000               	movlw	0
  1852  0578  00A7               	movwf	setupSerial@FOSC
  1853                           
  1854                           ;serial.c: 7: TXSTAbits.BRGH = 0;
  1855  0579  1683               	bsf	3,5	;RP0=1, select bank1
  1856  057A  1303               	bcf	3,6	;RP1=0, select bank1
  1857  057B  1118               	bcf	24,2	;volatile
  1858                           
  1859                           ;serial.c: 8: TXSTAbits.SYNC = 0;
  1860  057C  1218               	bcf	24,4	;volatile
  1861                           
  1862                           ;serial.c: 9: TXSTAbits.TXEN = 1;
  1863  057D  1698               	bsf	24,5	;volatile
  1864                           
  1865                           ;serial.c: 10: RCSTA = 0b10010000;
  1866  057E  3090               	movlw	144
  1867  057F  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0580  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0581  0098               	movwf	24	;volatile
  1870                           
  1871                           ;serial.c: 11: BAUDCTLbits.BRG16 = 0;
  1872  0582  1683               	bsf	3,5	;RP0=1, select bank3
  1873  0583  1703               	bsf	3,6	;RP1=1, select bank3
  1874  0584  1187               	bcf	7,3	;volatile
  1875                           
  1876                           ;serial.c: 14: SPBRG = ((FOSC/baudrate)/64) - 1;
  1877  0585  1283               	bcf	3,5	;RP0=0, select bank0
  1878  0586  1303               	bcf	3,6	;RP1=0, select bank0
  1879  0587  0825               	movf	setupSerial@baudrate,w
  1880  0588  00F1               	movwf	___lldiv@divisor
  1881  0589  0826               	movf	setupSerial@baudrate+1,w
  1882  058A  00F2               	movwf	___lldiv@divisor+1
  1883  058B  01F3               	clrf	___lldiv@divisor+2
  1884  058C  01F4               	clrf	___lldiv@divisor+3
  1885  058D  082A               	movf	setupSerial@FOSC+3,w
  1886  058E  00F8               	movwf	___lldiv@dividend+3
  1887  058F  0829               	movf	setupSerial@FOSC+2,w
  1888  0590  00F7               	movwf	___lldiv@dividend+2
  1889  0591  0828               	movf	setupSerial@FOSC+1,w
  1890  0592  00F6               	movwf	___lldiv@dividend+1
  1891  0593  0827               	movf	setupSerial@FOSC,w
  1892  0594  00F5               	movwf	___lldiv@dividend
  1893  0595  120A  118A  25B5  120A  118A  	fcall	___lldiv
  1894  059A  0871               	movf	?___lldiv,w
  1895  059B  00FA               	movwf	??_setupSerial
  1896  059C  0872               	movf	?___lldiv+1,w
  1897  059D  00FB               	movwf	??_setupSerial+1
  1898  059E  0873               	movf	?___lldiv+2,w
  1899  059F  00FC               	movwf	??_setupSerial+2
  1900  05A0  0874               	movf	?___lldiv+3,w
  1901  05A1  00FD               	movwf	??_setupSerial+3
  1902  05A2  3006               	movlw	6
  1903  05A3                     u665:	
  1904  05A3  1003               	clrc
  1905  05A4  0CFD               	rrf	??_setupSerial+3,f
  1906  05A5  0CFC               	rrf	??_setupSerial+2,f
  1907  05A6  0CFB               	rrf	??_setupSerial+1,f
  1908  05A7  0CFA               	rrf	??_setupSerial,f
  1909  05A8  3EFF               	addlw	-1
  1910  05A9  1D03               	skipz
  1911  05AA  2DA3               	goto	u665
  1912  05AB  087A               	movf	??_setupSerial,w
  1913  05AC  3EFF               	addlw	255
  1914  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  1915  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  1916  05AF  0099               	movwf	25	;volatile
  1917                           
  1918                           ;serial.c: 16: TXIF=RCIF=0;
  1919  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1920  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1921  05B2  128C               	bcf	12,5	;volatile
  1922  05B3  120C               	bcf	12,4	;volatile
  1923  05B4  0008               	return
  1924  05B5                     __end_of_setupSerial:	
  1925                           
  1926                           	psect	text7
  1927  05B5                     __ptext7:	
  1928 ;; *************** function ___lldiv *****************
  1929 ;; Defined at:
  1930 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  divisor         4    0[COMMON] unsigned long 
  1933 ;;  dividend        4    4[COMMON] unsigned long 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  quotient        4    0[BANK0 ] unsigned long 
  1936 ;;  counter         1    4[BANK0 ] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  4    0[COMMON] unsigned long 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1946 ;;      Params:         8       0       0       0       0
  1947 ;;      Locals:         0       5       0       0       0
  1948 ;;      Temps:          1       0       0       0       0
  1949 ;;      Totals:         9       5       0       0       0
  1950 ;;Total ram usage:       14 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_setupSerial
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function ___lldiv
  1961  05B5                     ___lldiv:	
  1962                           
  1963                           ;incstack = 0
  1964                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1965  05B5  3000               	movlw	0
  1966  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  1967  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  1968  05B8  00A3               	movwf	___lldiv@quotient+3
  1969  05B9  3000               	movlw	0
  1970  05BA  00A2               	movwf	___lldiv@quotient+2
  1971  05BB  3000               	movlw	0
  1972  05BC  00A1               	movwf	___lldiv@quotient+1
  1973  05BD  3000               	movlw	0
  1974  05BE  00A0               	movwf	___lldiv@quotient
  1975  05BF  0874               	movf	___lldiv@divisor+3,w
  1976  05C0  0473               	iorwf	___lldiv@divisor+2,w
  1977  05C1  0472               	iorwf	___lldiv@divisor+1,w
  1978  05C2  0471               	iorwf	___lldiv@divisor,w
  1979  05C3  1903               	skipnz
  1980  05C4  2E0C               	goto	l1111
  1981  05C5  01A4               	clrf	___lldiv@counter
  1982  05C6  0AA4               	incf	___lldiv@counter,f
  1983  05C7                     l1097:	
  1984  05C7  1BF4               	btfsc	___lldiv@divisor+3,7
  1985  05C8  2DD7               	goto	l1099
  1986  05C9  3001               	movlw	1
  1987  05CA  00F9               	movwf	??___lldiv
  1988  05CB                     u475:	
  1989  05CB  1003               	clrc
  1990  05CC  0DF1               	rlf	___lldiv@divisor,f
  1991  05CD  0DF2               	rlf	___lldiv@divisor+1,f
  1992  05CE  0DF3               	rlf	___lldiv@divisor+2,f
  1993  05CF  0DF4               	rlf	___lldiv@divisor+3,f
  1994  05D0  0BF9               	decfsz	??___lldiv,f
  1995  05D1  2DCB               	goto	u475
  1996  05D2  3001               	movlw	1
  1997  05D3  00F9               	movwf	??___lldiv
  1998  05D4  0879               	movf	??___lldiv,w
  1999  05D5  07A4               	addwf	___lldiv@counter,f
  2000  05D6  2DC7               	goto	l1097
  2001  05D7                     l1099:	
  2002  05D7  3001               	movlw	1
  2003  05D8  00F9               	movwf	??___lldiv
  2004  05D9                     u495:	
  2005  05D9  1003               	clrc
  2006  05DA  0DA0               	rlf	___lldiv@quotient,f
  2007  05DB  0DA1               	rlf	___lldiv@quotient+1,f
  2008  05DC  0DA2               	rlf	___lldiv@quotient+2,f
  2009  05DD  0DA3               	rlf	___lldiv@quotient+3,f
  2010  05DE  0BF9               	decfsz	??___lldiv,f
  2011  05DF  2DD9               	goto	u495
  2012  05E0  0874               	movf	___lldiv@divisor+3,w
  2013  05E1  0278               	subwf	___lldiv@dividend+3,w
  2014  05E2  1D03               	skipz
  2015  05E3  2DEE               	goto	u505
  2016  05E4  0873               	movf	___lldiv@divisor+2,w
  2017  05E5  0277               	subwf	___lldiv@dividend+2,w
  2018  05E6  1D03               	skipz
  2019  05E7  2DEE               	goto	u505
  2020  05E8  0872               	movf	___lldiv@divisor+1,w
  2021  05E9  0276               	subwf	___lldiv@dividend+1,w
  2022  05EA  1D03               	skipz
  2023  05EB  2DEE               	goto	u505
  2024  05EC  0871               	movf	___lldiv@divisor,w
  2025  05ED  0275               	subwf	___lldiv@dividend,w
  2026  05EE                     u505:	
  2027  05EE  1C03               	skipc
  2028  05EF  2DFF               	goto	l1107
  2029  05F0  0871               	movf	___lldiv@divisor,w
  2030  05F1  02F5               	subwf	___lldiv@dividend,f
  2031  05F2  0872               	movf	___lldiv@divisor+1,w
  2032  05F3  1C03               	skipc
  2033  05F4  0F72               	incfsz	___lldiv@divisor+1,w
  2034  05F5  02F6               	subwf	___lldiv@dividend+1,f
  2035  05F6  0873               	movf	___lldiv@divisor+2,w
  2036  05F7  1C03               	skipc
  2037  05F8  0F73               	incfsz	___lldiv@divisor+2,w
  2038  05F9  02F7               	subwf	___lldiv@dividend+2,f
  2039  05FA  0874               	movf	___lldiv@divisor+3,w
  2040  05FB  1C03               	skipc
  2041  05FC  0F74               	incfsz	___lldiv@divisor+3,w
  2042  05FD  02F8               	subwf	___lldiv@dividend+3,f
  2043  05FE  1420               	bsf	___lldiv@quotient,0
  2044  05FF                     l1107:	
  2045  05FF  3001               	movlw	1
  2046  0600                     u515:	
  2047  0600  1003               	clrc
  2048  0601  0CF4               	rrf	___lldiv@divisor+3,f
  2049  0602  0CF3               	rrf	___lldiv@divisor+2,f
  2050  0603  0CF2               	rrf	___lldiv@divisor+1,f
  2051  0604  0CF1               	rrf	___lldiv@divisor,f
  2052  0605  3EFF               	addlw	-1
  2053  0606  1D03               	skipz
  2054  0607  2E00               	goto	u515
  2055  0608  3001               	movlw	1
  2056  0609  02A4               	subwf	___lldiv@counter,f
  2057  060A  1D03               	btfss	3,2
  2058  060B  2DD7               	goto	l1099
  2059  060C                     l1111:	
  2060  060C  0823               	movf	___lldiv@quotient+3,w
  2061  060D  00F4               	movwf	?___lldiv+3
  2062  060E  0822               	movf	___lldiv@quotient+2,w
  2063  060F  00F3               	movwf	?___lldiv+2
  2064  0610  0821               	movf	___lldiv@quotient+1,w
  2065  0611  00F2               	movwf	?___lldiv+1
  2066  0612  0820               	movf	___lldiv@quotient,w
  2067  0613  00F1               	movwf	?___lldiv
  2068  0614  0008               	return
  2069  0615                     __end_of___lldiv:	
  2070                           
  2071                           	psect	text8
  2072  0457                     __ptext8:	
  2073 ;; *************** function _setupDisplay *****************
  2074 ;; Defined at:
  2075 ;;		line 5 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\lcd.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0
  2091 ;;      Temps:          2       0       0       0       0
  2092 ;;      Totals:         2       0       0       0       0
  2093 ;;Total ram usage:        2 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    1
  2096 ;; This function calls:
  2097 ;;		_sendCommand
  2098 ;; This function is called by:
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           
  2104                           ;psect for function _setupDisplay
  2105  0457                     _setupDisplay:	
  2106                           
  2107                           ;lcd.c: 7: _delay((unsigned long)((20)*(4000000/4000.0)));
  2108                           
  2109                           ;incstack = 0
  2110                           ; Regs used in _setupDisplay: [wreg+status,2+status,0+pclath+cstack]
  2111  0457  301A               	movlw	26
  2112  0458  00F5               	movwf	??_setupDisplay+1
  2113  0459  30F8               	movlw	248
  2114  045A  00F4               	movwf	??_setupDisplay
  2115  045B                     u1317:	
  2116  045B  0BF4               	decfsz	??_setupDisplay,f
  2117  045C  2C5B               	goto	u1317
  2118  045D  0BF5               	decfsz	??_setupDisplay+1,f
  2119  045E  2C5B               	goto	u1317
  2120  045F  0000               	nop
  2121                           
  2122                           ;lcd.c: 8: sendCommand(0x02);
  2123  0460  3002               	movlw	2
  2124  0461  120A  118A  24F3  120A  118A  	fcall	_sendCommand
  2125                           
  2126                           ;lcd.c: 9: sendCommand(0x28);
  2127  0466  3028               	movlw	40
  2128  0467  120A  118A  24F3  120A  118A  	fcall	_sendCommand
  2129                           
  2130                           ;lcd.c: 10: sendCommand(0x0C);
  2131  046C  300C               	movlw	12
  2132  046D  120A  118A  24F3  120A  118A  	fcall	_sendCommand
  2133                           
  2134                           ;lcd.c: 11: sendCommand(0x06);
  2135  0472  3006               	movlw	6
  2136  0473  120A  118A  24F3  120A  118A  	fcall	_sendCommand
  2137                           
  2138                           ;lcd.c: 12: sendCommand(0x01);
  2139  0478  3001               	movlw	1
  2140  0479  120A  118A  24F3  120A  118A  	fcall	_sendCommand
  2141                           
  2142                           ;lcd.c: 13: sendCommand(0x80);
  2143  047E  3080               	movlw	128
  2144  047F  120A  118A  24F3   	fcall	_sendCommand
  2145  0482  0008               	return
  2146  0483                     __end_of_setupDisplay:	
  2147                           
  2148                           	psect	text9
  2149  03C2                     __ptext9:	
  2150 ;; *************** function _setPosicaoDesejada *****************
  2151 ;; Defined at:
  2152 ;;		line 46 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\stepper.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  posicao_dese    2    0[COMMON] unsigned int 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2166 ;;      Params:         2       0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0
  2169 ;;      Totals:         2       0       0       0       0
  2170 ;;Total ram usage:        2 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _setPosicaoDesejada
  2181  03C2                     _setPosicaoDesejada:	
  2182                           
  2183                           ;stepper.c: 48: posicaoDesejada = posicao_desejada;
  2184                           
  2185                           ;incstack = 0
  2186                           ; Regs used in _setPosicaoDesejada: [wreg]
  2187  03C2  0872               	movf	setPosicaoDesejada@posicao_desejada+1,w
  2188  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2189  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2190  03C5  00C8               	movwf	_posicaoDesejada+1
  2191  03C6  0871               	movf	setPosicaoDesejada@posicao_desejada,w
  2192  03C7  00C7               	movwf	_posicaoDesejada
  2193  03C8  0008               	return
  2194  03C9                     __end_of_setPosicaoDesejada:	
  2195                           
  2196                           	psect	text10
  2197  03F1                     __ptext10:	
  2198 ;; *************** function _setCursor *****************
  2199 ;; Defined at:
  2200 ;;		line 59 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\lcd.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  linha           1    wreg     unsigned char 
  2203 ;;  coluna          1    3[COMMON] unsigned char 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  linha           1    5[COMMON] unsigned char 
  2206 ;;  position        1    6[COMMON] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0, pclath, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         1       0       0       0       0
  2217 ;;      Locals:         2       0       0       0       0
  2218 ;;      Temps:          1       0       0       0       0
  2219 ;;      Totals:         4       0       0       0       0
  2220 ;;Total ram usage:        4 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    1
  2223 ;; This function calls:
  2224 ;;		_sendCommand
  2225 ;; This function is called by:
  2226 ;;		_main
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           
  2231                           ;psect for function _setCursor
  2232  03F1                     _setCursor:	
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in _setCursor: [wreg+status,2+status,0+pclath+cstack]
  2236                           ;setCursor@linha stored from wreg
  2237  03F1  00F6               	movwf	setCursor@linha
  2238                           
  2239                           ;lcd.c: 61: uint8_t position = 0x80;
  2240  03F2  3080               	movlw	128
  2241  03F3  00F5               	movwf	??_setCursor
  2242  03F4  0875               	movf	??_setCursor,w
  2243  03F5  00F7               	movwf	setCursor@position
  2244                           
  2245                           ;lcd.c: 62: if (linha == 0)
  2246  03F6  0876               	movf	setCursor@linha,w
  2247  03F7  1D03               	btfss	3,2
  2248  03F8  2BFB               	goto	l1213
  2249                           
  2250                           ;lcd.c: 63: {
  2251                           ;lcd.c: 64: position = 0x80;
  2252  03F9  3080               	movlw	128
  2253  03FA  2BFF               	goto	L1
  2254  03FB                     l1213:	
  2255                           ;lcd.c: 65: }
  2256                           
  2257                           
  2258                           ;lcd.c: 66: else if (linha == 1)
  2259  03FB  0376               	decf	setCursor@linha,w
  2260  03FC  1D03               	btfss	3,2
  2261  03FD  2C02               	goto	l1217
  2262                           
  2263                           ;lcd.c: 67: {
  2264                           ;lcd.c: 68: position = 0xC0;
  2265  03FE  30C0               	movlw	192
  2266  03FF                     L1:	
  2267  03FF  00F5               	movwf	??_setCursor
  2268  0400  0875               	movf	??_setCursor,w
  2269  0401  00F7               	movwf	setCursor@position
  2270  0402                     l1217:	
  2271                           
  2272                           ;lcd.c: 69: }
  2273                           ;lcd.c: 71: position = position + coluna;
  2274  0402  0874               	movf	setCursor@coluna,w
  2275  0403  0777               	addwf	setCursor@position,w
  2276  0404  00F5               	movwf	??_setCursor
  2277  0405  0875               	movf	??_setCursor,w
  2278  0406  00F7               	movwf	setCursor@position
  2279                           
  2280                           ;lcd.c: 72: sendCommand(position);
  2281  0407  0877               	movf	setCursor@position,w
  2282  0408  120A  118A  24F3   	fcall	_sendCommand
  2283  040B  0008               	return
  2284  040C                     __end_of_setCursor:	
  2285                           
  2286                           	psect	text11
  2287  040C                     __ptext11:	
  2288 ;; *************** function _printLine *****************
  2289 ;; Defined at:
  2290 ;;		line 75 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\lcd.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  s               2    3[COMMON] PTR unsigned char 
  2293 ;;		 -> NULL(0), STR_5(4), main@posDesejada_str(10), main@posAtual_str(10), 
  2294 ;;		 -> STR_2(13), STR_1(17), 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2306 ;;      Params:         2       0       0       0       0
  2307 ;;      Locals:         0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0
  2309 ;;      Totals:         2       0       0       0       0
  2310 ;;Total ram usage:        2 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    1
  2313 ;; This function calls:
  2314 ;;		_sendCharToLCD
  2315 ;; This function is called by:
  2316 ;;		_main
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           
  2321                           ;psect for function _printLine
  2322  040C                     _printLine:	
  2323  040C                     l1205:	
  2324                           ;lcd.c: 77: while(*s) {
  2325                           
  2326                           ;incstack = 0
  2327                           ; Regs used in _printLine: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2328                           
  2329  040C  0875               	movf	printLine@s+1,w
  2330  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2331  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2332  040F  00FF               	movwf	127
  2333  0410  0874               	movf	printLine@s,w
  2334  0411  0084               	movwf	4
  2335  0412  120A  118A  2004  120A  118A  	fcall	stringtab
  2336  0417  3A00               	xorlw	0
  2337  0418  1903               	btfsc	3,2
  2338  0419  0008               	return
  2339                           
  2340                           ;lcd.c: 78: sendCharToLCD(*s++);
  2341  041A  0875               	movf	printLine@s+1,w
  2342  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2343  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2344  041D  00FF               	movwf	127
  2345  041E  0874               	movf	printLine@s,w
  2346  041F  0084               	movwf	4
  2347  0420  120A  118A  2004  120A  118A  	fcall	stringtab
  2348  0425  120A  118A  2531  120A  118A  	fcall	_sendCharToLCD
  2349  042A  3001               	movlw	1
  2350  042B  07F4               	addwf	printLine@s,f
  2351  042C  1803               	skipnc
  2352  042D  0AF5               	incf	printLine@s+1,f
  2353  042E  2C0C               	goto	l1205
  2354  042F                     __end_of_printLine:	
  2355                           
  2356                           	psect	text12
  2357  0531                     __ptext12:	
  2358 ;; *************** function _sendCharToLCD *****************
  2359 ;; Defined at:
  2360 ;;		line 35 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\lcd.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  ch              1    wreg     unsigned char 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  ch              1    2[COMMON] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2374 ;;      Params:         0       0       0       0       0
  2375 ;;      Locals:         1       0       0       0       0
  2376 ;;      Temps:          2       0       0       0       0
  2377 ;;      Totals:         3       0       0       0       0
  2378 ;;Total ram usage:        3 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_printLine
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           
  2388                           ;psect for function _sendCharToLCD
  2389  0531                     _sendCharToLCD:	
  2390                           
  2391                           ;incstack = 0
  2392                           ; Regs used in _sendCharToLCD: [wreg+status,2+status,0]
  2393                           ;sendCharToLCD@ch stored from wreg
  2394  0531  00F3               	movwf	sendCharToLCD@ch
  2395                           
  2396                           ;lcd.c: 37: PORTB = (ch & 0xF0)>>4;
  2397  0532  0873               	movf	sendCharToLCD@ch,w
  2398  0533  00F1               	movwf	??_sendCharToLCD
  2399  0534  3004               	movlw	4
  2400  0535                     u455:	
  2401  0535  1003               	clrc
  2402  0536  0CF1               	rrf	??_sendCharToLCD,f
  2403  0537  3EFF               	addlw	-1
  2404  0538  1D03               	skipz
  2405  0539  2D35               	goto	u455
  2406  053A  0871               	movf	??_sendCharToLCD,w
  2407  053B  390F               	andlw	15
  2408  053C  1283               	bcf	3,5	;RP0=0, select bank0
  2409  053D  1303               	bcf	3,6	;RP1=0, select bank0
  2410  053E  0086               	movwf	6	;volatile
  2411                           
  2412                           ;lcd.c: 38: PORTBbits.RB4 = 1;
  2413  053F  1606               	bsf	6,4	;volatile
  2414                           
  2415                           ;lcd.c: 39: PORTBbits.RB5 = 1;
  2416  0540  1686               	bsf	6,5	;volatile
  2417                           
  2418                           ;lcd.c: 40: _delay((unsigned long)((5)*(4000000/4000.0)));
  2419  0541  3007               	movlw	7
  2420  0542  00F2               	movwf	??_sendCharToLCD+1
  2421  0543  307D               	movlw	125
  2422  0544  00F1               	movwf	??_sendCharToLCD
  2423  0545                     u1327:	
  2424  0545  0BF1               	decfsz	??_sendCharToLCD,f
  2425  0546  2D45               	goto	u1327
  2426  0547  0BF2               	decfsz	??_sendCharToLCD+1,f
  2427  0548  2D45               	goto	u1327
  2428                           
  2429                           ;lcd.c: 41: PORTBbits.RB5 = 0;
  2430  0549  1283               	bcf	3,5	;RP0=0, select bank0
  2431  054A  1303               	bcf	3,6	;RP1=0, select bank0
  2432  054B  1286               	bcf	6,5	;volatile
  2433                           
  2434                           ;lcd.c: 43: _delay((unsigned long)((5)*(4000000/4000.0)));
  2435  054C  3007               	movlw	7
  2436  054D  00F2               	movwf	??_sendCharToLCD+1
  2437  054E  307D               	movlw	125
  2438  054F  00F1               	movwf	??_sendCharToLCD
  2439  0550                     u1337:	
  2440  0550  0BF1               	decfsz	??_sendCharToLCD,f
  2441  0551  2D50               	goto	u1337
  2442  0552  0BF2               	decfsz	??_sendCharToLCD+1,f
  2443  0553  2D50               	goto	u1337
  2444                           
  2445                           ;lcd.c: 45: PORTB = (ch & 0x0F);
  2446  0554  0873               	movf	sendCharToLCD@ch,w
  2447  0555  390F               	andlw	15
  2448  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2449  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2450  0558  0086               	movwf	6	;volatile
  2451                           
  2452                           ;lcd.c: 46: PORTBbits.RB4 = 1;
  2453  0559  1606               	bsf	6,4	;volatile
  2454                           
  2455                           ;lcd.c: 47: PORTBbits.RB5 = 1;
  2456  055A  1686               	bsf	6,5	;volatile
  2457                           
  2458                           ;lcd.c: 48: _delay((unsigned long)((5)*(4000000/4000.0)));
  2459  055B  3007               	movlw	7
  2460  055C  00F2               	movwf	??_sendCharToLCD+1
  2461  055D  307D               	movlw	125
  2462  055E  00F1               	movwf	??_sendCharToLCD
  2463  055F                     u1347:	
  2464  055F  0BF1               	decfsz	??_sendCharToLCD,f
  2465  0560  2D5F               	goto	u1347
  2466  0561  0BF2               	decfsz	??_sendCharToLCD+1,f
  2467  0562  2D5F               	goto	u1347
  2468                           
  2469                           ;lcd.c: 49: PORTBbits.RB5 = 0;
  2470  0563  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0564  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0565  1286               	bcf	6,5	;volatile
  2473                           
  2474                           ;lcd.c: 51: _delay((unsigned long)((5)*(4000000/4000.0)));
  2475  0566  3007               	movlw	7
  2476  0567  00F2               	movwf	??_sendCharToLCD+1
  2477  0568  307D               	movlw	125
  2478  0569  00F1               	movwf	??_sendCharToLCD
  2479  056A                     u1357:	
  2480  056A  0BF1               	decfsz	??_sendCharToLCD,f
  2481  056B  2D6A               	goto	u1357
  2482  056C  0BF2               	decfsz	??_sendCharToLCD+1,f
  2483  056D  2D6A               	goto	u1357
  2484  056E  0008               	return
  2485  056F                     __end_of_sendCharToLCD:	
  2486                           
  2487                           	psect	text13
  2488  03BB                     __ptext13:	
  2489 ;; *************** function _getPosicaoDesejada *****************
  2490 ;; Defined at:
  2491 ;;		line 41 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\stepper.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;		None
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;		None
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  2    0[COMMON] unsigned int 
  2498 ;; Registers used:
  2499 ;;		wreg
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2505 ;;      Params:         2       0       0       0       0
  2506 ;;      Locals:         0       0       0       0       0
  2507 ;;      Temps:          0       0       0       0       0
  2508 ;;      Totals:         2       0       0       0       0
  2509 ;;Total ram usage:        2 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           
  2519                           ;psect for function _getPosicaoDesejada
  2520  03BB                     _getPosicaoDesejada:	
  2521                           
  2522                           ;stepper.c: 43: return posicaoDesejada;
  2523                           
  2524                           ;incstack = 0
  2525                           ; Regs used in _getPosicaoDesejada: [wreg]
  2526  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2527  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2528  03BD  0848               	movf	_posicaoDesejada+1,w
  2529  03BE  00F2               	movwf	?_getPosicaoDesejada+1
  2530  03BF  0847               	movf	_posicaoDesejada,w
  2531  03C0  00F1               	movwf	?_getPosicaoDesejada
  2532  03C1  0008               	return
  2533  03C2                     __end_of_getPosicaoDesejada:	
  2534                           
  2535                           	psect	text14
  2536  03B4                     __ptext14:	
  2537 ;; *************** function _getPosicaoAtual *****************
  2538 ;; Defined at:
  2539 ;;		line 36 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\stepper.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  2    0[COMMON] unsigned int 
  2546 ;; Registers used:
  2547 ;;		wreg
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2553 ;;      Params:         2       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0
  2556 ;;      Totals:         2       0       0       0       0
  2557 ;;Total ram usage:        2 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_main
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function _getPosicaoAtual
  2568  03B4                     _getPosicaoAtual:	
  2569                           
  2570                           ;stepper.c: 38: return posicaoAtual;
  2571                           
  2572                           ;incstack = 0
  2573                           ; Regs used in _getPosicaoAtual: [wreg]
  2574  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2575  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2576  03B6  084E               	movf	_posicaoAtual+1,w
  2577  03B7  00F2               	movwf	?_getPosicaoAtual+1
  2578  03B8  084D               	movf	_posicaoAtual,w
  2579  03B9  00F1               	movwf	?_getPosicaoAtual
  2580  03BA  0008               	return
  2581  03BB                     __end_of_getPosicaoAtual:	
  2582                           
  2583                           	psect	text15
  2584  03AD                     __ptext15:	
  2585 ;; *************** function _getChar *****************
  2586 ;; Defined at:
  2587 ;;		line 26 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\serial.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      unsigned char 
  2594 ;; Registers used:
  2595 ;;		wreg
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2601 ;;      Params:         0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0
  2604 ;;      Totals:         0       0       0       0       0
  2605 ;;Total ram usage:        0 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_main
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           
  2615                           ;psect for function _getChar
  2616  03AD                     _getChar:	
  2617  03AD                     l78:	
  2618                           ;serial.c: 28: while(!RCIF);
  2619                           
  2620                           ;incstack = 0
  2621                           ; Regs used in _getChar: [wreg]
  2622                           
  2623  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2624  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2625  03AF  1E8C               	btfss	12,5	;volatile
  2626  03B0  2BAD               	goto	l78
  2627                           
  2628                           ;serial.c: 29: RCIF = 0;
  2629  03B1  128C               	bcf	12,5	;volatile
  2630                           
  2631                           ;serial.c: 30: return RCREG;
  2632  03B2  081A               	movf	26,w	;volatile
  2633  03B3  0008               	return
  2634  03B4                     __end_of_getChar:	
  2635                           
  2636                           	psect	text16
  2637  03A8                     __ptext16:	
  2638 ;; *************** function _clearDisplay *****************
  2639 ;; Defined at:
  2640 ;;		line 54 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\lcd.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0, pclath, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2654 ;;      Params:         0       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0
  2657 ;;      Totals:         0       0       0       0       0
  2658 ;;Total ram usage:        0 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    1
  2661 ;; This function calls:
  2662 ;;		_sendCommand
  2663 ;; This function is called by:
  2664 ;;		_main
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           
  2669                           ;psect for function _clearDisplay
  2670  03A8                     _clearDisplay:	
  2671                           
  2672                           ;lcd.c: 56: sendCommand(0x01);
  2673                           
  2674                           ;incstack = 0
  2675                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  2676  03A8  3001               	movlw	1
  2677  03A9  120A  118A  24F3   	fcall	_sendCommand
  2678  03AC  0008               	return
  2679  03AD                     __end_of_clearDisplay:	
  2680                           
  2681                           	psect	text17
  2682  04F3                     __ptext17:	
  2683 ;; *************** function _sendCommand *****************
  2684 ;; Defined at:
  2685 ;;		line 16 in file "C:\Users\Aluno\Desktop\microcontroladores-stepper-master\lcd.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  cmd             1    wreg     unsigned char 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  cmd             1    2[COMMON] unsigned char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2699 ;;      Params:         0       0       0       0       0
  2700 ;;      Locals:         1       0       0       0       0
  2701 ;;      Temps:          2       0       0       0       0
  2702 ;;      Totals:         3       0       0       0       0
  2703 ;;Total ram usage:        3 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_setupDisplay
  2709 ;;		_clearDisplay
  2710 ;;		_setCursor
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           
  2715                           ;psect for function _sendCommand
  2716  04F3                     _sendCommand:	
  2717                           
  2718                           ;incstack = 0
  2719                           ; Regs used in _sendCommand: [wreg+status,2+status,0]
  2720                           ;sendCommand@cmd stored from wreg
  2721  04F3  00F3               	movwf	sendCommand@cmd
  2722                           
  2723                           ;lcd.c: 18: PORTB = (cmd & 0xF0)>>4;
  2724  04F4  0873               	movf	sendCommand@cmd,w
  2725  04F5  00F1               	movwf	??_sendCommand
  2726  04F6  3004               	movlw	4
  2727  04F7                     u445:	
  2728  04F7  1003               	clrc
  2729  04F8  0CF1               	rrf	??_sendCommand,f
  2730  04F9  3EFF               	addlw	-1
  2731  04FA  1D03               	skipz
  2732  04FB  2CF7               	goto	u445
  2733  04FC  0871               	movf	??_sendCommand,w
  2734  04FD  390F               	andlw	15
  2735  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2736  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2737  0500  0086               	movwf	6	;volatile
  2738                           
  2739                           ;lcd.c: 19: PORTBbits.RB4 = 0;
  2740  0501  1206               	bcf	6,4	;volatile
  2741                           
  2742                           ;lcd.c: 20: PORTBbits.RB5 = 1;
  2743  0502  1686               	bsf	6,5	;volatile
  2744                           
  2745                           ;lcd.c: 21: _delay((unsigned long)((5)*(4000000/4000.0)));
  2746  0503  3007               	movlw	7
  2747  0504  00F2               	movwf	??_sendCommand+1
  2748  0505  307D               	movlw	125
  2749  0506  00F1               	movwf	??_sendCommand
  2750  0507                     u1367:	
  2751  0507  0BF1               	decfsz	??_sendCommand,f
  2752  0508  2D07               	goto	u1367
  2753  0509  0BF2               	decfsz	??_sendCommand+1,f
  2754  050A  2D07               	goto	u1367
  2755                           
  2756                           ;lcd.c: 22: PORTBbits.RB5 = 0;
  2757  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2758  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2759  050D  1286               	bcf	6,5	;volatile
  2760                           
  2761                           ;lcd.c: 24: _delay((unsigned long)((5)*(4000000/4000.0)));
  2762  050E  3007               	movlw	7
  2763  050F  00F2               	movwf	??_sendCommand+1
  2764  0510  307D               	movlw	125
  2765  0511  00F1               	movwf	??_sendCommand
  2766  0512                     u1377:	
  2767  0512  0BF1               	decfsz	??_sendCommand,f
  2768  0513  2D12               	goto	u1377
  2769  0514  0BF2               	decfsz	??_sendCommand+1,f
  2770  0515  2D12               	goto	u1377
  2771                           
  2772                           ;lcd.c: 26: PORTB = (cmd & 0x0F);
  2773  0516  0873               	movf	sendCommand@cmd,w
  2774  0517  390F               	andlw	15
  2775  0518  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0519  1303               	bcf	3,6	;RP1=0, select bank0
  2777  051A  0086               	movwf	6	;volatile
  2778                           
  2779                           ;lcd.c: 27: PORTBbits.RB4 = 0;
  2780  051B  1206               	bcf	6,4	;volatile
  2781                           
  2782                           ;lcd.c: 28: PORTBbits.RB5 = 1;
  2783  051C  1686               	bsf	6,5	;volatile
  2784                           
  2785                           ;lcd.c: 29: _delay((unsigned long)((5)*(4000000/4000.0)));
  2786  051D  3007               	movlw	7
  2787  051E  00F2               	movwf	??_sendCommand+1
  2788  051F  307D               	movlw	125
  2789  0520  00F1               	movwf	??_sendCommand
  2790  0521                     u1387:	
  2791  0521  0BF1               	decfsz	??_sendCommand,f
  2792  0522  2D21               	goto	u1387
  2793  0523  0BF2               	decfsz	??_sendCommand+1,f
  2794  0524  2D21               	goto	u1387
  2795                           
  2796                           ;lcd.c: 30: PORTBbits.RB5 = 0;
  2797  0525  1283               	bcf	3,5	;RP0=0, select bank0
  2798  0526  1303               	bcf	3,6	;RP1=0, select bank0
  2799  0527  1286               	bcf	6,5	;volatile
  2800                           
  2801                           ;lcd.c: 32: _delay((unsigned long)((5)*(4000000/4000.0)));
  2802  0528  3007               	movlw	7
  2803  0529  00F2               	movwf	??_sendCommand+1
  2804  052A  307D               	movlw	125
  2805  052B  00F1               	movwf	??_sendCommand
  2806  052C                     u1397:	
  2807  052C  0BF1               	decfsz	??_sendCommand,f
  2808  052D  2D2C               	goto	u1397
  2809  052E  0BF2               	decfsz	??_sendCommand+1,f
  2810  052F  2D2C               	goto	u1397
  2811  0530  0008               	return
  2812  0531                     __end_of_sendCommand:	
  2813  007E                     btemp	set	126	;btemp
  2814  007E                     wtemp0	set	126


Data Sizes:
    Strings     37
    Constant    10
    Data        8
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     39      57
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 8192
		 -> ROM(CODE[8192]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> main@posDesejada_str(BANK0[10]), main@posAtual_str(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    printLine@s	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), STR_5(CODE[4]), main@posDesejada_str(BANK0[10]), main@posAtual_str(BANK0[10]), 
		 -> STR_2(CODE[13]), STR_1(CODE[17]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    input	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_setupSerial
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setupSerial->___lldiv
    _setupDisplay->_sendCommand
    _setCursor->_sendCommand
    _printLine->_sendCharToLCD
    _clearDisplay->_sendCommand

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _setupSerial->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    3020
                                             14 BANK0     25    25      0
                       _clearDisplay
                            _getChar
                    _getPosicaoAtual
                 _getPosicaoDesejada
                          _printLine
                          _setCursor
                 _setPosicaoDesejada
                       _setupDisplay
                        _setupSerial
                       _setupStepper
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     178
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1276
                                              1 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 COMMON     5     1      4
                                              0 BANK0      1     1      0
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setupStepper                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupSerial                                         10     8      2     366
                                              9 COMMON     4     4      0
                                              5 BANK0      6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _setupDisplay                                         2     2      0      44
                                              3 COMMON     2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (1) _setPosicaoDesejada                                   2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     423
                                              3 COMMON     4     3      1
                        _sendCommand
 ---------------------------------------------------------------------------------
 (1) _printLine                                            2     0      2     460
                                              3 COMMON     2     0      2
                      _sendCharToLCD
 ---------------------------------------------------------------------------------
 (2) _sendCharToLCD                                        3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _getPosicaoDesejada                                   2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getPosicaoAtual                                      2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getChar                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clearDisplay                                         0     0      0      44
                        _sendCommand
 ---------------------------------------------------------------------------------
 (2) _sendCommand                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clearDisplay
     _sendCommand
   _getChar
   _getPosicaoAtual
   _getPosicaoDesejada
   _printLine
     _sendCharToLCD
   _setCursor
     _sendCommand
   _setPosicaoDesejada
   _setupDisplay
     _sendCommand
   _setupSerial
     ___lldiv
   _setupStepper
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     27      39       5       71.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      D       D       1      100.0%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jul 15 18:23:37 2022

                                 pc 0002                         __CFG_CP$OFF 0000  
                                l78 03AD                                  _ch 004F  
                                fsr 0004                     sendCharToLCD@ch 0073  
             __end_of_sendCharToLCD 056F                                 u505 05EE  
                      __CFG_CPD$OFF 0000                                 u515 0600  
                               u445 04F7                                 u455 0535  
                               u615 048E                                 u545 04C2  
                               u475 05CB                                 u635 049F  
                               u565 04CE                                 u645 04A8  
                               u495 05D9                                 u575 04DA  
                               u735 0686                                 u665 05A3  
                               u585 04E4                                 fsr0 0004  
                               indf 0000                        __CFG_IESO$ON 0000  
                      __CFG_LVP$OFF 0000          rotacionarParaDireita@F1704 0055  
                              l1111 060C                                l1107 05FF  
                              l1205 040C                                l1213 03FB  
                              l1133 04E3                                l1125 04BF  
                              l1301 043F                                l1127 04CD  
                              l1151 0499                                l1303 0447  
                              l1217 0402                                l1137 04EE  
                              l1155 04A7                                l1149 048B  
                              l1261 066F                                l1245 0652  
                              l1159 04B2                                l1255 0669  
                              l1239 063C                                l1097 05C7  
                              l1281 06A3                                l1273 069F  
                              l1361 074F                                l1099 05D7  
                              l1267 0690                                l1283 061C  
                              l1285 06E4                                l1385 0735  
                              l1299 0434                                STR_1 001E  
                              STR_2 002F                                STR_3 0040  
                              STR_4 0040                                STR_5 003C  
                              u1317 045B                                u1327 0545  
                              u1337 0550                                u1347 055F  
                              u1357 056A                                u1367 0507  
                              u1377 0512                                u1387 0521  
                              u1397 052C                                _RCIF 0065  
                              _TXIF 0064                        __CFG_WRT$OFF 0000  
                     __CFG_FCMEN$ON 0000                                _main 06E9  
                              btemp 007E                       __CFG_BOREN$ON 0000  
                              start 0001                       __CFG_MCLRE$ON 0000  
                 ??_getPosicaoAtual 0073                __end_of_clearDisplay 03AD  
                             ?_main 0071                       __CFG_WDTE$OFF 0000  
                   __end_of___lldiv 0615                     __end_of___lwdiv 04F3  
                   __end_of___lwmod 04B7                               _RCREG 001A  
                             _RCSTA 0018                               _SPBRG 0099  
                             _PORTB 0006                               _PORTD 0008  
                             _TRISB 0086                               _TRISD 0088  
                             _TXREG 0019                     __end_of_getChar 03B4  
                   __end_of_dpowers 001E                        main@posAtual 0043  
                             _input 0050                               pclath 000A  
                             status 0003                               wtemp0 007E  
                   __end_of_sprintf 06E9         rotacionarParaEsquerda@F1713 0051  
                   __initialization 07E6                        __end_of_main 07E6  
                      ?_sendCommand 0071                              ??_main 002E  
                            _ANSELH 0189          __end_of_getPosicaoDesejada 03C2  
        __end_of_setPosicaoDesejada 03C9                      __CFG_PWRTE$OFF 0000  
                         ??___lldiv 0079                           ??___lwdiv 0075  
                         ??___lwmod 007D                           ??_getChar 0071  
                            _strcat 042F                     setupSerial@FOSC 0027  
                      ?_setupSerial 0025                           ??_sprintf 0024  
           __end_of__initialization 07FC               __size_of_clearDisplay 0005  
                    __pcstackCOMMON 0071                        __pidataBANK0 03C9  
                      _clearDisplay 03A8                     _getPosicaoAtual 03B4  
                        __pbssBANK0 0047                          __pmaintext 06E9  
                __size_of_setCursor 001B                             ?_strcat 0071  
              __size_of_sendCommand 003E                  __size_of_printLine 0023  
                        __stringtab 0004                 main@posDesejada_str 0039  
            __size_of_sendCharToLCD 003E                             ___lldiv 05B5  
                           ___lwdiv 04B7                             ___lwmod 0483  
                           _getChar 03AD                             __ptext1 042F  
                           __ptext2 0615                             __ptext3 0483  
                           __ptext4 04B7                             __ptext5 03D1  
                           __ptext6 056F                             __ptext7 05B5  
                           __ptext8 0457                             __ptext9 03C2  
setPosicaoDesejada@posicao_desejada 0071                     __size_of_strcat 0028  
                           _dpowers 0014             __end_of_getPosicaoAtual 03BB  
                           _sprintf 0615                end_of_initialization 07FC  
                 __end_of_setCursor 040C                __size_of_setupSerial 0046  
                   ___lldiv@divisor 0071                     ___lldiv@counter 0024  
                 __end_of_printLine 042F                       ?_setupDisplay 0071  
                _getPosicaoDesejada 03BB                  _setPosicaoDesejada 03C2  
                         _PORTBbits 0006                       ?_setupStepper 0071  
                        _velocidade 004B                       _sendCharToLCD 0531  
               ?_getPosicaoDesejada 0071                 ?_setPosicaoDesejada 0071  
                   _posicaoDesejada 0047                           _TRISCbits 0087  
                         _TXSTAbits 0098                ??_getPosicaoDesejada 0073  
              ??_setPosicaoDesejada 0073                      ??_setupDisplay 0074  
                    ??_setupStepper 0071                         _BAUDCTLbits 0187  
                    ?_sendCharToLCD 0071                      __end_of_strcat 0457  
               start_initialization 07E6                    ?_getPosicaoAtual 0071  
          __CFG_FOSC$INTRC_NOCLKOUT 0000                          init_fetch0 03E0  
                       __pdataBANK0 0051                   setCursor@position 0077  
                          ??_strcat 0072                           ___latbits 0002  
                     __pcstackBANK0 0020                      sendCommand@cmd 0073  
                   setCursor@coluna 0074                         sprintf@flag 0028  
                       sprintf@prec 0029                           _delayTime 0049  
                  ___lwdiv@dividend 0073                            ?___lldiv 0071  
                          ?___lwdiv 0071                            ?___lwmod 0079  
                     ??_sendCommand 0071                     ??_sendCharToLCD 0071  
                          ?_getChar 0071                           __pstrings 0004  
                  main@posAtual_str 002F                __end_of_setupDisplay 0483  
                  ___lwdiv@quotient 0076                            ?_sprintf 0021  
              __end_of_setupStepper 03E0                           _setCursor 03F1  
                         _printLine 040C                         __stringbase 0013  
                        printLine@s 0074                 __end_of_sendCommand 0531  
                     ??_setupSerial 007A                          ?_setCursor 0074  
                        ?_printLine 0074                    __size_of___lldiv 0060  
                  __size_of___lwdiv 003C                    __size_of___lwmod 0034  
                __end_of__stringtab 0014                    __size_of_getChar 0007  
               setupSerial@baudrate 0025                      setCursor@linha 0076  
                        sprintf@val 002A                          strcat@from 0071  
                   ___lwdiv@divisor 0071                     ___lwdiv@counter 0078  
                   main@posDesejada 0045                       ?_clearDisplay 0071  
                          __ptext10 03F1                            __ptext11 040C  
                          __ptext12 0531                            __ptext13 03BB  
                          __ptext14 03B4                            __ptext15 03AD  
                          __ptext16 03A8                            __ptext17 04F3  
                 __CFG_BOR4V$BOR40V 0000                    __size_of_sprintf 00D4  
                     __size_of_main 00FD                 __end_of_setupSerial 05B5  
       __size_of_getPosicaoDesejada 0007         __size_of_setPosicaoDesejada 0007  
                       _sendCommand 04F3               __size_of_setupDisplay 002C  
                    ??_clearDisplay 0074                            init_ram0 03E4  
             __size_of_setupStepper 000F                           sprintf@ap 0027  
                         sprintf@sp 002C            __size_of_getPosicaoAtual 0007  
                  ___lwmod@dividend 007B                    ___lldiv@dividend 0075  
                       ??_setCursor 0075                           stringcode 000E  
                      _setupDisplay 0457                        _posicaoAtual 004D  
                       ??_printLine 0076                        _setupStepper 03D1  
                          sprintf@c 002D                            sprintf@f 0021  
                          strcat@cp 0074                            strcat@to 0073  
                  ___lldiv@quotient 0020                     ___lwmod@divisor 0079  
                   ___lwmod@counter 0020                            stringdir 000E  
                          stringtab 0004                         _setupSerial 056F  
