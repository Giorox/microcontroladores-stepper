

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jul 09 00:11:10 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.45
    17                           ; Generated 16/11/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0006                     _PORTB	set	6
   285  001A                     _RCREG	set	26
   286  0019                     _TXREG	set	25
   287  0018                     _RCSTA	set	24
   288  0065                     _RCIF	set	101
   289  0064                     _TXIF	set	100
   290  0099                     _SPBRG	set	153
   291  0098                     _TXSTA	set	152
   292  0086                     _TRISB	set	134
   293  0087                     _TRISCbits	set	135
   294                           
   295                           ; #config settings
   296  0000                     
   297                           	psect	cinit
   298  07FC                     start_initialization:	
   299  07FC                     __initialization:	
   300  07FC                     end_of_initialization:	
   301                           ;End of C runtime variable initialization code
   302                           
   303  07FC                     __end_of__initialization:	
   304  07FC  0183               	clrf	3
   305  07FD  120A  118A  2F31   	ljmp	_main	;jump to C main() function
   306                           
   307                           	psect	cstackCOMMON
   308  0070                     __pcstackCOMMON:	
   309  0070                     ?_setupDisplay:	
   310  0070                     ?_sendChar:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ??_sendChar:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_sendCommand:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ??_sendCommand:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_main:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?___lldiv:	
   326                           ; 2 bytes @ 0x0
   327                           
   328  0070                     sendChar@ch:	
   329                           ; 4 bytes @ 0x0
   330                           
   331  0070                     ___lldiv@divisor:	
   332                           ; 1 bytes @ 0x0
   333                           
   334                           
   335                           ; 4 bytes @ 0x0
   336  0070                     	ds	1
   337  0071                     sendCommand@cmd:	
   338                           
   339                           ; 1 bytes @ 0x1
   340  0071                     	ds	1
   341  0072                     ??_setupDisplay:	
   342  0072                     ?_setCursor:	
   343                           ; 1 bytes @ 0x2
   344                           
   345  0072                     setCursor@coluna:	
   346                           ; 1 bytes @ 0x2
   347                           
   348                           
   349                           ; 1 bytes @ 0x2
   350  0072                     	ds	1
   351  0073                     ??_setCursor:	
   352                           
   353                           ; 1 bytes @ 0x3
   354  0073                     	ds	1
   355  0074                     setCursor@linha:	
   356  0074                     ___lldiv@dividend:	
   357                           ; 1 bytes @ 0x4
   358                           
   359                           
   360                           ; 4 bytes @ 0x4
   361  0074                     	ds	1
   362  0075                     setCursor@position:	
   363                           
   364                           ; 1 bytes @ 0x5
   365  0075                     	ds	3
   366  0078                     ??___lldiv:	
   367                           
   368                           ; 1 bytes @ 0x8
   369  0078                     	ds	1
   370  0079                     ___lldiv@quotient:	
   371                           
   372                           ; 4 bytes @ 0x9
   373  0079                     	ds	4
   374  007D                     ___lldiv@counter:	
   375                           
   376                           ; 1 bytes @ 0xD
   377  007D                     	ds	1
   378                           
   379                           	psect	cstackBANK0
   380  0020                     __pcstackBANK0:	
   381  0020                     ?_setupSerial:	
   382  0020                     setupSerial@baudrate:	
   383                           ; 1 bytes @ 0x0
   384                           
   385                           
   386                           ; 2 bytes @ 0x0
   387  0020                     	ds	2
   388  0022                     ??_setupSerial:	
   389                           
   390                           ; 1 bytes @ 0x2
   391  0022                     	ds	4
   392  0026                     setupSerial@FOSC:	
   393                           
   394                           ; 4 bytes @ 0x6
   395  0026                     	ds	4
   396  002A                     ??_main:	
   397                           
   398                           ; 1 bytes @ 0xA
   399  002A                     	ds	1
   400                           
   401                           	psect	maintext
   402  0731                     __pmaintext:	
   403 ;;
   404 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   405 ;;
   406 ;; *************** function _main *****************
   407 ;; Defined at:
   408 ;;		line 29 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\main.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  2   16[None  ] int 
   415 ;; Registers used:
   416 ;;		wreg, status,2, status,0, pclath, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : B00/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   422 ;;      Params:         0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0
   424 ;;      Temps:          0       1       0       0       0
   425 ;;      Totals:         0       1       0       0       0
   426 ;;Total ram usage:        1 bytes
   427 ;; Hardware stack levels required when called:    2
   428 ;; This function calls:
   429 ;;		_sendChar
   430 ;;		_setCursor
   431 ;;		_setupDisplay
   432 ;;		_setupSerial
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _main
   440  0731                     _main:	
   441                           
   442                           ;main.c: 36: TRISCbits.TRISC6 = 0;
   443                           
   444                           ;incstack = 0
   445                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   446  0731  1683               	bsf	3,5	;RP0=1, select bank1
   447  0732  1303               	bcf	3,6	;RP1=0, select bank1
   448  0733  1307               	bcf	7,6	;volatile
   449                           
   450                           ;main.c: 37: TRISCbits.TRISC7 = 1;
   451  0734  1787               	bsf	7,7	;volatile
   452                           
   453                           ;main.c: 41: TRISB = 0;
   454  0735  0186               	clrf	6	;volatile
   455                           
   456                           ;main.c: 42: TRISCbits.TRISC0 = 0;
   457  0736  1007               	bcf	7,0	;volatile
   458                           
   459                           ;main.c: 43: TRISCbits.TRISC1 = 0;
   460  0737  1087               	bcf	7,1	;volatile
   461                           
   462                           ;main.c: 44: TRISCbits.TRISC2 = 0;
   463  0738  1107               	bcf	7,2	;volatile
   464                           
   465                           ;main.c: 47: setupSerial(9600);
   466  0739  3080               	movlw	128
   467  073A  1283               	bcf	3,5	;RP0=0, select bank0
   468  073B  1303               	bcf	3,6	;RP1=0, select bank0
   469  073C  00A0               	movwf	setupSerial@baudrate
   470  073D  3025               	movlw	37
   471  073E  00A1               	movwf	setupSerial@baudrate+1
   472  073F  120A  118A  275C  120A  118A  	fcall	_setupSerial
   473                           
   474                           ;main.c: 48: setupDisplay();
   475  0744  120A  118A  2714  120A  118A  	fcall	_setupDisplay
   476                           
   477                           ;main.c: 50: sendChar('a');
   478  0749  3061               	movlw	97
   479  074A  120A  118A  26DD  120A  118A  	fcall	_sendChar
   480                           
   481                           ;main.c: 51: setCursor(0, 11);
   482  074F  300B               	movlw	11
   483  0750  1283               	bcf	3,5	;RP0=0, select bank0
   484  0751  1303               	bcf	3,6	;RP1=0, select bank0
   485  0752  00AA               	movwf	??_main
   486  0753  082A               	movf	??_main,w
   487  0754  00F2               	movwf	setCursor@coluna
   488  0755  3000               	movlw	0
   489  0756  120A  118A  26F9   	fcall	_setCursor
   490  0759  120A  118A  2800   	ljmp	start
   491  075C                     __end_of_main:	
   492                           
   493                           	psect	text1
   494  075C                     __ptext1:	
   495 ;; *************** function _setupSerial *****************
   496 ;; Defined at:
   497 ;;		line 4 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\serial.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;  baudrate        2    0[BANK0 ] unsigned int 
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  FOSC            4    6[BANK0 ] unsigned long 
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2, status,0, pclath, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   511 ;;      Params:         0       2       0       0       0
   512 ;;      Locals:         0       4       0       0       0
   513 ;;      Temps:          0       4       0       0       0
   514 ;;      Totals:         0      10       0       0       0
   515 ;;Total ram usage:       10 bytes
   516 ;; Hardware stack levels used:    1
   517 ;; Hardware stack levels required when called:    1
   518 ;; This function calls:
   519 ;;		___lldiv
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _setupSerial
   527  075C                     _setupSerial:	
   528                           
   529                           ;serial.c: 6: unsigned long FOSC = 4000000;
   530                           
   531                           ;incstack = 0
   532                           ; Regs used in _setupSerial: [wreg+status,2+status,0+pclath+cstack]
   533  075C  3000               	movlw	0
   534  075D  1283               	bcf	3,5	;RP0=0, select bank0
   535  075E  1303               	bcf	3,6	;RP1=0, select bank0
   536  075F  00A9               	movwf	setupSerial@FOSC+3
   537  0760  303D               	movlw	61
   538  0761  00A8               	movwf	setupSerial@FOSC+2
   539  0762  3009               	movlw	9
   540  0763  00A7               	movwf	setupSerial@FOSC+1
   541  0764  3000               	movlw	0
   542  0765  00A6               	movwf	setupSerial@FOSC
   543                           
   544                           ;serial.c: 7: TXSTA = 0x20;
   545  0766  3020               	movlw	32
   546  0767  1683               	bsf	3,5	;RP0=1, select bank1
   547  0768  1303               	bcf	3,6	;RP1=0, select bank1
   548  0769  0098               	movwf	24	;volatile
   549                           
   550                           ;serial.c: 8: RCSTA = 0b10010000;
   551  076A  3090               	movlw	144
   552  076B  1283               	bcf	3,5	;RP0=0, select bank0
   553  076C  1303               	bcf	3,6	;RP1=0, select bank0
   554  076D  0098               	movwf	24	;volatile
   555                           
   556                           ;serial.c: 11: SPBRG = ((FOSC/baudrate)/64) - 1;
   557  076E  0820               	movf	setupSerial@baudrate,w
   558  076F  00F0               	movwf	___lldiv@divisor
   559  0770  0821               	movf	setupSerial@baudrate+1,w
   560  0771  00F1               	movwf	___lldiv@divisor+1
   561  0772  01F2               	clrf	___lldiv@divisor+2
   562  0773  01F3               	clrf	___lldiv@divisor+3
   563  0774  0829               	movf	setupSerial@FOSC+3,w
   564  0775  00F7               	movwf	___lldiv@dividend+3
   565  0776  0828               	movf	setupSerial@FOSC+2,w
   566  0777  00F6               	movwf	___lldiv@dividend+2
   567  0778  0827               	movf	setupSerial@FOSC+1,w
   568  0779  00F5               	movwf	___lldiv@dividend+1
   569  077A  0826               	movf	setupSerial@FOSC,w
   570  077B  00F4               	movwf	___lldiv@dividend
   571  077C  120A  118A  279E  120A  118A  	fcall	___lldiv
   572  0781  0870               	movf	?___lldiv,w
   573  0782  1283               	bcf	3,5	;RP0=0, select bank0
   574  0783  1303               	bcf	3,6	;RP1=0, select bank0
   575  0784  00A2               	movwf	??_setupSerial
   576  0785  0871               	movf	?___lldiv+1,w
   577  0786  00A3               	movwf	??_setupSerial+1
   578  0787  0872               	movf	?___lldiv+2,w
   579  0788  00A4               	movwf	??_setupSerial+2
   580  0789  0873               	movf	?___lldiv+3,w
   581  078A  00A5               	movwf	??_setupSerial+3
   582  078B  3006               	movlw	6
   583  078C                     u205:	
   584  078C  1003               	clrc
   585  078D  0CA5               	rrf	??_setupSerial+3,f
   586  078E  0CA4               	rrf	??_setupSerial+2,f
   587  078F  0CA3               	rrf	??_setupSerial+1,f
   588  0790  0CA2               	rrf	??_setupSerial,f
   589  0791  3EFF               	addlw	-1
   590  0792  1D03               	skipz
   591  0793  2F8C               	goto	u205
   592  0794  0822               	movf	??_setupSerial,w
   593  0795  3EFF               	addlw	255
   594  0796  1683               	bsf	3,5	;RP0=1, select bank1
   595  0797  1303               	bcf	3,6	;RP1=0, select bank1
   596  0798  0099               	movwf	25	;volatile
   597                           
   598                           ;serial.c: 13: TXIF=RCIF=0;
   599  0799  1283               	bcf	3,5	;RP0=0, select bank0
   600  079A  1303               	bcf	3,6	;RP1=0, select bank0
   601  079B  128C               	bcf	12,5	;volatile
   602  079C  120C               	bcf	12,4	;volatile
   603  079D  0008               	return
   604  079E                     __end_of_setupSerial:	
   605                           
   606                           	psect	text2
   607  079E                     __ptext2:	
   608 ;; *************** function ___lldiv *****************
   609 ;; Defined at:
   610 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;  divisor         4    0[COMMON] unsigned long 
   613 ;;  dividend        4    4[COMMON] unsigned long 
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  quotient        4    9[COMMON] unsigned long 
   616 ;;  counter         1   13[COMMON] unsigned char 
   617 ;; Return value:  Size  Location     Type
   618 ;;                  4    0[COMMON] unsigned long 
   619 ;; Registers used:
   620 ;;		wreg, status,2, status,0
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         8       0       0       0       0
   627 ;;      Locals:         5       0       0       0       0
   628 ;;      Temps:          1       0       0       0       0
   629 ;;      Totals:        14       0       0       0       0
   630 ;;Total ram usage:       14 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		_setupSerial
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           
   640                           ;psect for function ___lldiv
   641  079E                     ___lldiv:	
   642                           
   643                           ;incstack = 0
   644                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   645  079E  3000               	movlw	0
   646  079F  00FC               	movwf	___lldiv@quotient+3
   647  07A0  3000               	movlw	0
   648  07A1  00FB               	movwf	___lldiv@quotient+2
   649  07A2  3000               	movlw	0
   650  07A3  00FA               	movwf	___lldiv@quotient+1
   651  07A4  3000               	movlw	0
   652  07A5  00F9               	movwf	___lldiv@quotient
   653  07A6  0873               	movf	___lldiv@divisor+3,w
   654  07A7  0472               	iorwf	___lldiv@divisor+2,w
   655  07A8  0471               	iorwf	___lldiv@divisor+1,w
   656  07A9  0470               	iorwf	___lldiv@divisor,w
   657  07AA  1903               	skipnz
   658  07AB  2FF3               	goto	l646
   659  07AC  01FD               	clrf	___lldiv@counter
   660  07AD  0AFD               	incf	___lldiv@counter,f
   661  07AE                     l632:	
   662  07AE  1BF3               	btfsc	___lldiv@divisor+3,7
   663  07AF  2FBE               	goto	l634
   664  07B0  3001               	movlw	1
   665  07B1  00F8               	movwf	??___lldiv
   666  07B2                     u145:	
   667  07B2  1003               	clrc
   668  07B3  0DF0               	rlf	___lldiv@divisor,f
   669  07B4  0DF1               	rlf	___lldiv@divisor+1,f
   670  07B5  0DF2               	rlf	___lldiv@divisor+2,f
   671  07B6  0DF3               	rlf	___lldiv@divisor+3,f
   672  07B7  0BF8               	decfsz	??___lldiv,f
   673  07B8  2FB2               	goto	u145
   674  07B9  3001               	movlw	1
   675  07BA  00F8               	movwf	??___lldiv
   676  07BB  0878               	movf	??___lldiv,w
   677  07BC  07FD               	addwf	___lldiv@counter,f
   678  07BD  2FAE               	goto	l632
   679  07BE                     l634:	
   680  07BE  3001               	movlw	1
   681  07BF  00F8               	movwf	??___lldiv
   682  07C0                     u165:	
   683  07C0  1003               	clrc
   684  07C1  0DF9               	rlf	___lldiv@quotient,f
   685  07C2  0DFA               	rlf	___lldiv@quotient+1,f
   686  07C3  0DFB               	rlf	___lldiv@quotient+2,f
   687  07C4  0DFC               	rlf	___lldiv@quotient+3,f
   688  07C5  0BF8               	decfsz	??___lldiv,f
   689  07C6  2FC0               	goto	u165
   690  07C7  0873               	movf	___lldiv@divisor+3,w
   691  07C8  0277               	subwf	___lldiv@dividend+3,w
   692  07C9  1D03               	skipz
   693  07CA  2FD5               	goto	u175
   694  07CB  0872               	movf	___lldiv@divisor+2,w
   695  07CC  0276               	subwf	___lldiv@dividend+2,w
   696  07CD  1D03               	skipz
   697  07CE  2FD5               	goto	u175
   698  07CF  0871               	movf	___lldiv@divisor+1,w
   699  07D0  0275               	subwf	___lldiv@dividend+1,w
   700  07D1  1D03               	skipz
   701  07D2  2FD5               	goto	u175
   702  07D3  0870               	movf	___lldiv@divisor,w
   703  07D4  0274               	subwf	___lldiv@dividend,w
   704  07D5                     u175:	
   705  07D5  1C03               	skipc
   706  07D6  2FE6               	goto	l642
   707  07D7  0870               	movf	___lldiv@divisor,w
   708  07D8  02F4               	subwf	___lldiv@dividend,f
   709  07D9  0871               	movf	___lldiv@divisor+1,w
   710  07DA  1C03               	skipc
   711  07DB  0F71               	incfsz	___lldiv@divisor+1,w
   712  07DC  02F5               	subwf	___lldiv@dividend+1,f
   713  07DD  0872               	movf	___lldiv@divisor+2,w
   714  07DE  1C03               	skipc
   715  07DF  0F72               	incfsz	___lldiv@divisor+2,w
   716  07E0  02F6               	subwf	___lldiv@dividend+2,f
   717  07E1  0873               	movf	___lldiv@divisor+3,w
   718  07E2  1C03               	skipc
   719  07E3  0F73               	incfsz	___lldiv@divisor+3,w
   720  07E4  02F7               	subwf	___lldiv@dividend+3,f
   721  07E5  1479               	bsf	___lldiv@quotient,0
   722  07E6                     l642:	
   723  07E6  3001               	movlw	1
   724  07E7                     u185:	
   725  07E7  1003               	clrc
   726  07E8  0CF3               	rrf	___lldiv@divisor+3,f
   727  07E9  0CF2               	rrf	___lldiv@divisor+2,f
   728  07EA  0CF1               	rrf	___lldiv@divisor+1,f
   729  07EB  0CF0               	rrf	___lldiv@divisor,f
   730  07EC  3EFF               	addlw	-1
   731  07ED  1D03               	skipz
   732  07EE  2FE7               	goto	u185
   733  07EF  3001               	movlw	1
   734  07F0  02FD               	subwf	___lldiv@counter,f
   735  07F1  1D03               	btfss	3,2
   736  07F2  2FBE               	goto	l634
   737  07F3                     l646:	
   738  07F3  087C               	movf	___lldiv@quotient+3,w
   739  07F4  00F3               	movwf	?___lldiv+3
   740  07F5  087B               	movf	___lldiv@quotient+2,w
   741  07F6  00F2               	movwf	?___lldiv+2
   742  07F7  087A               	movf	___lldiv@quotient+1,w
   743  07F8  00F1               	movwf	?___lldiv+1
   744  07F9  0879               	movf	___lldiv@quotient,w
   745  07FA  00F0               	movwf	?___lldiv
   746  07FB  0008               	return
   747  07FC                     __end_of___lldiv:	
   748                           
   749                           	psect	text3
   750  0714                     __ptext3:	
   751 ;; *************** function _setupDisplay *****************
   752 ;; Defined at:
   753 ;;		line 5 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\lcd.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0, pclath, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0
   770 ;;      Totals:         0       0       0       0       0
   771 ;;Total ram usage:        0 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; Hardware stack levels required when called:    1
   774 ;; This function calls:
   775 ;;		_sendCommand
   776 ;; This function is called by:
   777 ;;		_main
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _setupDisplay
   783  0714                     _setupDisplay:	
   784                           
   785                           ;lcd.c: 7: sendCommand(0x38);
   786                           
   787                           ;incstack = 0
   788                           ; Regs used in _setupDisplay: [wreg+status,2+status,0+pclath+cstack]
   789  0714  3038               	movlw	56
   790  0715  120A  118A  26E6  120A  118A  	fcall	_sendCommand
   791                           
   792                           ;lcd.c: 8: sendCommand(0x0C);
   793  071A  300C               	movlw	12
   794  071B  120A  118A  26E6  120A  118A  	fcall	_sendCommand
   795                           
   796                           ;lcd.c: 9: sendCommand(0x06);
   797  0720  3006               	movlw	6
   798  0721  120A  118A  26E6  120A  118A  	fcall	_sendCommand
   799                           
   800                           ;lcd.c: 10: sendCommand(0x80);
   801  0726  3080               	movlw	128
   802  0727  120A  118A  26E6  120A  118A  	fcall	_sendCommand
   803                           
   804                           ;lcd.c: 11: sendCommand(0x8A);
   805  072C  308A               	movlw	138
   806  072D  120A  118A  26E6   	fcall	_sendCommand
   807  0730  0008               	return
   808  0731                     __end_of_setupDisplay:	
   809                           
   810                           	psect	text4
   811  06F9                     __ptext4:	
   812 ;; *************** function _setCursor *****************
   813 ;; Defined at:
   814 ;;		line 39 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\lcd.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  linha           1    wreg     unsigned char 
   817 ;;  coluna          1    2[COMMON] unsigned char 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  linha           1    4[COMMON] unsigned char 
   820 ;;  position        1    5[COMMON] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0, pclath, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         1       0       0       0       0
   831 ;;      Locals:         2       0       0       0       0
   832 ;;      Temps:          1       0       0       0       0
   833 ;;      Totals:         4       0       0       0       0
   834 ;;Total ram usage:        4 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; Hardware stack levels required when called:    1
   837 ;; This function calls:
   838 ;;		_sendCommand
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function _setCursor
   846  06F9                     _setCursor:	
   847                           
   848                           ;incstack = 0
   849                           ; Regs used in _setCursor: [wreg+status,2+status,0+pclath+cstack]
   850                           ;setCursor@linha stored from wreg
   851  06F9  00F4               	movwf	setCursor@linha
   852                           
   853                           ;lcd.c: 41: uint8_t position = 0x80;
   854  06FA  3080               	movlw	128
   855  06FB  00F3               	movwf	??_setCursor
   856  06FC  0873               	movf	??_setCursor,w
   857  06FD  00F5               	movwf	setCursor@position
   858                           
   859                           ;lcd.c: 42: if (linha == 0)
   860  06FE  0874               	movf	setCursor@linha,w
   861  06FF  1D03               	btfss	3,2
   862  0700  2F03               	goto	l662
   863                           
   864                           ;lcd.c: 43: {
   865                           ;lcd.c: 44: position = 0x80;
   866  0701  3080               	movlw	128
   867  0702  2F07               	goto	L1
   868  0703                     l662:	
   869                           ;lcd.c: 45: }
   870                           
   871                           
   872                           ;lcd.c: 46: else if (linha == 1)
   873  0703  0374               	decf	setCursor@linha,w
   874  0704  1D03               	btfss	3,2
   875  0705  2F0A               	goto	l666
   876                           
   877                           ;lcd.c: 47: {
   878                           ;lcd.c: 48: position = 0xC0;
   879  0706  30C0               	movlw	192
   880  0707                     L1:	
   881  0707  00F3               	movwf	??_setCursor
   882  0708  0873               	movf	??_setCursor,w
   883  0709  00F5               	movwf	setCursor@position
   884  070A                     l666:	
   885                           
   886                           ;lcd.c: 49: }
   887                           ;lcd.c: 51: position = position + coluna;
   888  070A  0872               	movf	setCursor@coluna,w
   889  070B  0775               	addwf	setCursor@position,w
   890  070C  00F3               	movwf	??_setCursor
   891  070D  0873               	movf	??_setCursor,w
   892  070E  00F5               	movwf	setCursor@position
   893                           
   894                           ;lcd.c: 52: sendCommand(position);
   895  070F  0875               	movf	setCursor@position,w
   896  0710  120A  118A  26E6   	fcall	_sendCommand
   897  0713  0008               	return
   898  0714                     __end_of_setCursor:	
   899                           
   900                           	psect	text5
   901  06E6                     __ptext5:	
   902 ;; *************** function _sendCommand *****************
   903 ;; Defined at:
   904 ;;		line 14 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\lcd.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  cmd             1    wreg     unsigned char 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  cmd             1    1[COMMON] unsigned char 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   918 ;;      Params:         0       0       0       0       0
   919 ;;      Locals:         1       0       0       0       0
   920 ;;      Temps:          1       0       0       0       0
   921 ;;      Totals:         2       0       0       0       0
   922 ;;Total ram usage:        2 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_setupDisplay
   928 ;;		_setCursor
   929 ;;		_clearDisplay
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function _sendCommand
   935  06E6                     _sendCommand:	
   936                           
   937                           ;incstack = 0
   938                           ; Regs used in _sendCommand: [wreg]
   939                           ;sendCommand@cmd stored from wreg
   940  06E6  00F1               	movwf	sendCommand@cmd
   941                           
   942                           ;lcd.c: 16: PORTB = cmd;
   943  06E7  0871               	movf	sendCommand@cmd,w
   944  06E8  1283               	bcf	3,5	;RP0=0, select bank0
   945  06E9  1303               	bcf	3,6	;RP1=0, select bank0
   946  06EA  0086               	movwf	6	;volatile
   947                           
   948                           ;lcd.c: 17: TRISCbits.TRISC0 = 0;
   949  06EB  1683               	bsf	3,5	;RP0=1, select bank1
   950  06EC  1303               	bcf	3,6	;RP1=0, select bank1
   951  06ED  1007               	bcf	7,0	;volatile
   952                           
   953                           ;lcd.c: 18: TRISCbits.TRISC1 = 0;
   954  06EE  1087               	bcf	7,1	;volatile
   955                           
   956                           ;lcd.c: 19: TRISCbits.TRISC2 = 1;
   957  06EF  1507               	bsf	7,2	;volatile
   958                           
   959                           ;lcd.c: 20: _delay((unsigned long)((50)*(4000000/4000000.0)));
   960  06F0  3010               	movlw	16
   961  06F1  00F0               	movwf	??_sendCommand
   962  06F2                     u237:	
   963  06F2  0BF0               	decfsz	??_sendCommand,f
   964  06F3  2EF2               	goto	u237
   965  06F4  0000               	nop
   966                           
   967                           ;lcd.c: 21: TRISCbits.TRISC2 = 0;
   968  06F5  1683               	bsf	3,5	;RP0=1, select bank1
   969  06F6  1303               	bcf	3,6	;RP1=0, select bank1
   970  06F7  1107               	bcf	7,2	;volatile
   971  06F8  0008               	return
   972  06F9                     __end_of_sendCommand:	
   973                           
   974                           	psect	text6
   975  06DD                     __ptext6:	
   976 ;; *************** function _sendChar *****************
   977 ;; Defined at:
   978 ;;		line 16 in file "C:\Users\giova\Desktop\UNIFEI\ECAi11 - Microcontroladores\Projeto - 2022\serial.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  ch              1    wreg     unsigned char 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  ch              1    0[COMMON] unsigned char 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         0       0       0       0       0
   993 ;;      Locals:         1       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0
   995 ;;      Totals:         1       0       0       0       0
   996 ;;Total ram usage:        1 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_main
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           
  1006                           ;psect for function _sendChar
  1007  06DD                     _sendChar:	
  1008                           
  1009                           ;incstack = 0
  1010                           ; Regs used in _sendChar: [wreg]
  1011                           ;sendChar@ch stored from wreg
  1012  06DD  00F0               	movwf	sendChar@ch
  1013                           
  1014                           ;serial.c: 18: TXREG = ch;
  1015  06DE  0870               	movf	sendChar@ch,w
  1016  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1017  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1018  06E1  0099               	movwf	25	;volatile
  1019  06E2                     l37:	
  1020                           ;serial.c: 19: while(!TXIF);
  1021                           
  1022  06E2  1E0C               	btfss	12,4	;volatile
  1023  06E3  2EE2               	goto	l37
  1024                           
  1025                           ;serial.c: 20: TXIF = 0;
  1026  06E4  120C               	bcf	12,4	;volatile
  1027  06E5  0008               	return
  1028  06E6                     __end_of_sendChar:	
  1029  007E                     btemp	set	126	;btemp
  1030  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setupSerial->___lldiv
    _setupDisplay->_sendCommand
    _setCursor->_sendCommand

Critical Paths under _main in BANK0

    _main->_setupSerial

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     578
                                             10 BANK0      1     1      0
                           _sendChar
                          _setCursor
                       _setupDisplay
                        _setupSerial
 ---------------------------------------------------------------------------------
 (1) _setupSerial                                         10     8      2     366
                                              0 BANK0     10     8      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _setupDisplay                                         0     0      0      15
                        _sendCommand
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     182
                                              2 COMMON     4     3      1
                        _sendCommand
 ---------------------------------------------------------------------------------
 (2) _sendCommand                                          2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _sendChar                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _sendChar
   _setCursor
     _sendCommand
   _setupDisplay
     _sendCommand
   _setupSerial
     ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jul 09 00:11:10 2022

             __CFG_CP$OFF 0000                        l37 06E2                       l632 07AE  
                     l642 07E6                       l634 07BE                       l662 0703  
                     l646 07F3                       l666 070A                       u205 078C  
                     u145 07B2                       u237 06F2                       u165 07C0  
                     u175 07D5                       u185 07E7              __CFG_CPD$OFF 0000  
            __CFG_IESO$ON 0000              __CFG_LVP$OFF 0000                      _RCIF 0065  
                    _TXIF 0064              __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000  
                    _main 0731                      btemp 007E             __CFG_BOREN$ON 0000  
                    start 0000             __CFG_MCLRE$ON 0000                     ?_main 0070  
           __CFG_WDTE$OFF 0000           __end_of___lldiv 07FC                     _RCREG 001A  
                   _RCSTA 0018                     _SPBRG 0099                     _PORTB 0006  
                   _TRISB 0086                     _TXREG 0019                     _TXSTA 0098  
                   status 0003                     wtemp0 007E           __initialization 07FC  
            __end_of_main 075C              ?_sendCommand 0070                    ??_main 002A  
          __CFG_PWRTE$OFF 0000                 ??___lldiv 0078          __end_of_sendChar 06E6  
         setupSerial@FOSC 0026              ?_setupSerial 0020   __end_of__initialization 07FC  
          __pcstackCOMMON 0070                __pmaintext 0731        __size_of_setCursor 001B  
    __size_of_sendCommand 0013                 ?_sendChar 0070                   ___lldiv 079E  
                 __ptext1 075C                   __ptext2 079E                   __ptext3 0714  
                 __ptext4 06F9                   __ptext5 06E6                   __ptext6 06DD  
    end_of_initialization 07FC         __end_of_setCursor 0714      __size_of_setupSerial 0042  
              ??_sendChar 0070           ___lldiv@divisor 0070           ___lldiv@counter 007D  
           ?_setupDisplay 0070                 _TRISCbits 0087            ??_setupDisplay 0072  
     start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000         setCursor@position 0075  
               ___latbits 0002             __pcstackBANK0 0020            sendCommand@cmd 0071  
         setCursor@coluna 0072                sendChar@ch 0070         __size_of_sendChar 0009  
                ?___lldiv 0070             ??_sendCommand 0070      __end_of_setupDisplay 0731  
               _setCursor 06F9       __end_of_sendCommand 06F9             ??_setupSerial 0022  
              ?_setCursor 0072          __size_of___lldiv 005E       setupSerial@baudrate 0020  
          setCursor@linha 0074         __CFG_BOR4V$BOR40V 0000             __size_of_main 002B  
     __end_of_setupSerial 079E                  _sendChar 06DD               _sendCommand 06E6  
   __size_of_setupDisplay 001D          ___lldiv@dividend 0074               ??_setCursor 0073  
            _setupDisplay 0714          ___lldiv@quotient 0079               _setupSerial 075C  
